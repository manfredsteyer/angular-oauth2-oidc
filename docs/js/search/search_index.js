var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractValidationHandler.html",[0,0.169,1,2.154]],["body/classes/AbstractValidationHandler.html",[0,0.214,1,2.72,2,0.624,3,0.254,4,0.254,5,0.2,6,2.175,7,3.941,8,1.171,9,1.365,10,1.157,11,1.545,12,1.803,13,2.314,14,1.513,15,1.938,16,3.594,17,2.72,18,1.421,19,3.311,20,3.594,21,0.311,22,1.064,23,4.538,24,4.42,25,3.449,26,3.145,27,2.356,28,1.495,29,3.908,30,0.656,31,3.145,32,3.311,33,1.459,34,1.938,35,1.755,36,2.314,37,0.961,38,0.025,39,1.124,40,0.352,41,0.601,42,3.145,43,1.253,44,1.874,45,3.311,46,1.653,47,3.145,48,3.311,49,4.153,50,3.311,51,2.086,52,3.311,53,3.311,54,1.646,55,2.982,56,3.311,57,3.495,58,3.145,59,4.538,60,4.376,61,3.829,62,1.903,63,1.679,64,0.971,65,2.72,66,3.145,67,3.449,68,0.472,69,1.935,70,2.122,71,2.356,72,0.412,73,1.133,74,1.171,75,1.171,76,1.171,77,1.171,78,1.53,79,2.356,80,2.356,81,2.356,82,1.171,83,1.033,84,2.72,85,2.405,86,3.311,87,2.356,88,2.356,89,1.935,90,2.356,91,2.356,92,2.356,93,0.757,94,2.356,95,2.356,96,2.356,97,1.78,98,4.153,99,2.356,100,4.153,101,2.356,102,2.356,103,2.356,104,0.714,105,3.829,106,2.356,107,2.356,108,2.356,109,1.935,110,0.624,111,2.356,112,2.122,113,1.78,114,2.356,115,0.015,116,0.015]],["title/classes/DateTimeProvider.html",[0,0.169,117,2.154]],["body/classes/DateTimeProvider.html",[0,0.286,2,0.974,3,0.396,4,0.396,5,0.312,10,1.2,21,0.485,22,1.424,30,0.699,38,0.024,43,1.336,68,0.736,72,0.477,104,0.954,110,1.359,115,0.02,116,0.02,117,3.905,118,4.753,119,3.905,120,3.676,121,4.548,122,4.907,123,5.59,124,4.907,125,1.731,126,1.336,127,1.258,128,3.311,129,2.569,130,4.165]],["title/injectables/DefaultHashHandler.html",[126,0.791,131,2.623]],["body/injectables/DefaultHashHandler.html",[0,0.175,3,0.291,4,0.291,5,0.229,6,2.189,8,1.345,10,0.842,20,2.991,21,0.357,22,1.17,25,3.28,27,3.641,28,1.533,29,3.381,30,0.65,37,0.952,38,0.025,39,1.02,40,0.349,41,0.596,42,2.222,43,1.242,44,1.411,68,0.824,72,0.291,85,2.779,89,2.222,104,0.99,109,2.222,110,1.218,115,0.016,116,0.016,125,1.499,126,0.816,127,0.926,131,2.705,132,2.222,133,3.966,134,4.86,135,4.86,136,3.61,137,4.125,138,4.663,139,3.61,140,2.436,141,4.125,142,3.61,143,5.207,144,4.125,145,2.436,146,3.707,147,3.064,148,2.705,149,3.064,150,3.064,151,3.064,152,3.064,153,2.436,154,1.434,155,2.705,156,2.705,157,3.641,158,3.064,159,2.222,160,2.436,161,3.064,162,2.877,163,2.436,164,3.064,165,4.125,166,3.064,167,1.501,168,3.064,169,3.064,170,3.064,171,4.663,172,3.064,173,3.064,174,4.663,175,3.064,176,3.064,177,3.064,178,3.064,179,3.064,180,3.064,181,4.357,182,2.991,183,4.125,184,4.125,185,3.064,186,3.064,187,3.064,188,3.064,189,3.064,190,4.125,191,3.064,192,3.064,193,3.064]],["title/interceptors/DefaultOAuthInterceptor.html",[194,2.362,195,2.362]],["body/interceptors/DefaultOAuthInterceptor.html",[0,0.198,3,0.228,4,0.228,5,0.179,9,0.872,14,0.77,18,1.498,21,0.279,22,0.986,28,0.638,30,0.484,37,0.709,38,0.025,39,0.76,40,0.306,41,0.608,43,0.638,55,2.761,68,0.959,72,0.33,84,2.962,85,2.452,93,0.986,104,1.016,115,0.014,116,0.014,126,0.925,127,0.724,154,2.718,156,2.115,162,1.478,194,3.248,195,4.368,196,2.823,197,3.606,198,2.115,199,2.376,200,2.724,201,4.813,202,4.378,203,4.813,204,5.278,205,4.085,206,4.085,207,2.041,208,4.813,209,2.041,210,3.606,211,4.085,212,4.959,213,2.041,214,4.085,215,4.959,216,4.813,217,4.813,218,3.606,219,4.813,220,4.813,221,4.813,222,4.813,223,4.813,224,4.813,225,4.813,226,4.813,227,1.911,228,1.793,229,4.813,230,1.856,231,2.823,232,2.499,233,5.843,234,3.448,235,6.027,236,3.06,237,2.823,238,2.823,239,4.959,240,5.34,241,5.603,242,2.823,243,4.813,244,3.606,245,2.823,246,4.085,247,4.092,248,1.737,249,3.473,250,1.905,251,4.092,252,2.823,253,1.735,254,2.823,255,2.823,256,4.092,257,2.823,258,2.761,259,2.396,260,2.396,261,2.823,262,0.872,263,1.344,264,2.518,265,4.092,266,4.092,267,1.581,268,0.987,269,2.823,270,2.823,271,2.823,272,2.823,273,2.823,274,2.823,275,2.115,276,2.396,277,2.823,278,1.121,279,2.115,280,4.092,281,3.955,282,2.823,283,2.823,284,2.823,285,2.823,286,2.761,287,2.823,288,4.092,289,4.092,290,4.092,291,2.823,292,1.683,293,2.823,294,2.823,295,2.823,296,1.598,297,2.823,298,2.823,299,2.823,300,2.823,301,2.823,302,2.823,303,2.823,304,4.092,305,2.823,306,2.823,307,2.823,308,2.823,309,2.823,310,2.823,311,1.793,312,2.823,313,2.823,314,2.823]],["title/classes/HMAC.html",[0,0.169,315,2.154]],["body/classes/HMAC.html",[2,0.434,3,0.375,4,0.177,5,0.139,6,2.337,13,1.146,18,0.561,21,0.216,22,0.814,30,0.733,33,1.444,35,1.995,37,0.716,38,0.025,39,0.767,40,0.373,41,0.448,43,0.934,72,0.333,85,2.52,93,0.527,97,2.338,104,0.667,110,1.19,113,1.238,115,0.011,116,0.011,125,1.79,140,2.788,154,1.846,159,2.081,160,2.281,162,3.476,167,1.276,181,1.476,182,3.092,230,0.993,279,1.639,311,2.13,315,3.269,316,3.862,317,1.346,318,1.111,319,2.788,320,2.788,321,3.38,322,3.38,323,3.38,324,3.38,325,3.945,326,4.264,327,2.869,328,3.095,329,2.281,330,2.188,331,4.702,332,3.38,333,1.857,334,2.108,335,2.188,336,2.188,337,2.188,338,2.188,339,2.188,340,3.482,341,2.188,342,2.188,343,2.188,344,0.869,345,2.188,346,2.869,347,2.188,348,3.092,349,2.188,350,1.857,351,2.188,352,2.281,353,3.979,354,1.639,355,1.857,356,1.346,357,1.639,358,1.639,359,1.639,360,1.639,361,1.639,362,1.639,363,1.639,364,1.639,365,1.639,366,1.639,367,1.639,368,1.639,369,1.639,370,1.639,371,1.639,372,1.639,373,1.639,374,1.639,375,1.639,376,1.639,377,1.639,378,1.639,379,1.639,380,1.639,381,1.639,382,1.639,383,1.639,384,1.639,385,1.639,386,1.639,387,1.639,388,1.639,389,1.639,390,1.639,391,1.639,392,1.639,393,1.639,394,1.639,395,1.639,396,1.639,397,1.639,398,1.639,399,1.639,400,1.639,401,1.639,402,1.639,403,1.639,404,1.639,405,1.639,406,1.639,407,1.639,408,1.639,409,1.639,410,1.639,411,1.639,412,1.639,413,1.639,414,1.639,415,1.639,416,1.639,417,1.639,418,1.639,419,1.639,420,1.639,421,1.476,422,1.639,423,2.533,424,1.476,425,1.639,426,1.639,427,2.533,428,3.764,429,2.869,430,2.281,431,2.869,432,4.7,433,3.507,434,2.869,435,3.507,436,1.857,437,1.857,438,1.857,439,1.857,440,1.857,441,1.857,442,1.857,443,1.857,444,1.639,445,1.639,446,1.639,447,3.945,448,1.639,449,3.095,450,1.639,451,3.095,452,3.092,453,2.533,454,1.476,455,1.639,456,1.639,457,1.639,458,3.945,459,2.869,460,2.869,461,4.508,462,3.507,463,3.507,464,2.869,465,2.869,466,1.857,467,0.815,468,2.869,469,1.857,470,0.765,471,2.869,472,3.507,473,1.857,474,1.857,475,3.945,476,1.857,477,4.264,478,3.945,479,5.487,480,4.7,481,3.136,482,1.639,483,3.482,484,2.543,485,1.857,486,3.507,487,3.507,488,1.857,489,1.857,490,1.857,491,1.857,492,1.857,493,1.857,494,1.857,495,1.857,496,1.857,497,1.857,498,1.857,499,3.095,500,1.857,501,1.639,502,1.857,503,1.857,504,1.857,505,1.857,506,1.346,507,1.857,508,1.857,509,1.857,510,2.081,511,1.639,512,1.857,513,1.857,514,2.281,515,2.533,516,1.639,517,1.857,518,1.857,519,0.869,520,1.857,521,1.857,522,1.639,523,1.857,524,1.857,525,1.639,526,1.857,527,1.857,528,1.857,529,1.857,530,1.857,531,1.857,532,1.857,533,1.857,534,1.857,535,1.857,536,1.857,537,1.857,538,1.857,539,1.857,540,1.857]],["title/classes/Hash.html",[0,0.169,33,0.843]],["body/classes/Hash.html",[2,0.411,3,0.364,4,0.167,5,0.131,6,2.402,13,1.083,18,0.53,21,0.205,22,0.779,30,0.757,33,1.306,35,2.344,37,0.781,38,0.025,39,0.837,40,0.382,41,0.489,43,1.106,72,0.322,85,2.491,93,0.498,97,2.256,104,0.644,110,1.194,113,1.171,115,0.011,116,0.011,125,1.831,140,3.303,154,1.791,159,1.992,160,2.184,162,3.482,167,1.231,181,1.396,182,3.012,230,1.468,279,1.55,311,2.198,315,3.012,316,3.969,317,1.273,318,1.063,319,3.043,320,3.043,325,3.828,326,4.154,327,2.747,328,2.987,329,2.184,331,4.579,333,1.712,334,2.618,340,3.888,344,1.583,346,2.747,348,3.194,350,1.756,352,2.184,353,3.888,354,1.55,355,1.756,356,1.273,357,1.55,358,1.55,359,1.55,360,1.55,361,1.55,362,1.55,363,1.55,364,1.55,365,1.55,366,1.55,367,1.55,368,1.55,369,1.55,370,1.55,371,1.55,372,1.55,373,1.55,374,1.55,375,1.55,376,1.55,377,1.55,378,1.55,379,1.55,380,1.55,381,1.55,382,1.55,383,1.55,384,1.55,385,1.55,386,1.55,387,1.55,388,1.55,389,1.55,390,1.55,391,1.55,392,1.55,393,1.55,394,1.55,395,1.55,396,1.55,397,1.55,398,1.55,399,1.55,400,1.55,401,1.55,402,1.55,403,1.55,404,1.55,405,1.55,406,1.55,407,1.55,408,1.55,409,1.55,410,1.55,411,1.55,412,1.55,413,1.55,414,1.55,415,1.55,416,1.55,417,1.55,418,1.55,419,1.55,420,1.55,421,1.396,422,1.55,423,3.379,424,1.396,425,1.55,426,1.55,427,2.425,428,3.667,429,2.747,430,2.184,431,2.747,432,4.604,433,3.384,434,2.747,435,3.384,436,1.756,437,1.756,438,1.756,439,1.756,440,1.756,441,1.756,442,1.756,443,1.756,444,1.55,445,1.55,446,1.55,447,3.828,448,1.55,449,2.987,450,1.55,451,2.987,452,3.012,453,2.425,454,1.396,455,1.55,456,1.55,457,1.55,458,3.828,459,2.747,460,2.747,461,4.765,462,3.384,463,3.384,464,2.747,465,2.747,466,1.756,467,1.485,468,2.747,469,1.756,470,0.723,471,2.747,472,4.604,473,1.756,474,1.756,475,3.828,476,1.756,477,4.154,478,3.828,479,5.429,480,4.604,481,3.043,482,1.55,483,3.379,484,2.454,485,1.756,486,3.384,487,3.384,488,1.756,489,1.756,490,1.756,491,1.756,492,1.756,493,2.747,494,1.756,495,1.756,496,1.756,497,1.756,498,1.756,499,2.987,500,1.756,501,1.55,502,1.756,503,1.756,504,1.756,505,1.756,506,1.273,507,1.756,508,1.756,509,1.756,510,1.992,511,1.55,512,1.756,513,1.756,514,2.184,515,2.425,516,1.55,517,1.756,518,1.756,519,0.821,520,1.756,521,1.756,522,1.55,523,1.756,524,1.756,525,1.55,526,1.756,527,1.756,528,1.756,529,1.756,530,1.756,531,1.756,532,1.756,533,1.756,534,1.756,535,1.756,536,1.756,537,1.756,538,1.756,539,1.756,540,1.756,541,3.236,542,3.236,543,3.236,544,3.236,545,3.236,546,3.236,547,2.068,548,2.068,549,2.068,550,2.068,551,2.068,552,2.068,553,0.877,554,2.068,555,2.068,556,2.068,557,2.068,558,2.068,559,2.068,560,2.068,561,2.068,562,2.068,563,2.068,564,2.068,565,2.068,566,2.068]],["title/classes/HashHandler.html",[0,0.169,153,2.362]],["body/classes/HashHandler.html",[0,0.182,2,0.748,3,0.304,4,0.304,5,0.239,6,1.863,8,1.404,9,1.164,10,1.036,20,3.079,21,0.373,22,1.205,27,3.748,28,1.516,29,3.455,30,0.446,37,0.653,38,0.025,39,0.7,40,0.239,41,0.409,42,2.32,43,0.852,44,1.452,68,0.843,72,0.304,85,2.792,89,2.32,104,1.005,109,2.32,110,1.235,115,0.017,116,0.017,125,1.029,126,0.852,127,0.967,133,3.376,137,3.199,138,3.199,141,3.199,143,5.076,144,4.246,145,2.544,146,3.789,147,3.199,148,2.824,149,3.199,150,4.246,151,4.246,152,4.246,153,3.376,154,1.497,155,2.824,156,2.824,157,3.748,158,3.199,159,2.32,160,2.544,161,3.199,162,2.94,163,2.544,164,3.199,165,4.246,166,3.199,167,1.545,168,3.199,169,3.199,170,3.199,171,4.765,172,3.199,173,3.199,174,4.765,175,3.199,176,3.199,177,3.199,178,3.199,179,3.199,180,3.199,181,4.405,182,3.079,183,4.246,184,4.246,185,3.199,186,3.199,187,3.199,188,3.199,189,3.199,190,4.246,191,3.199,192,3.199,193,3.199,567,3.769]],["title/classes/JwksValidationHandler.html",[0,0.169,568,2.154]],["body/classes/JwksValidationHandler.html",[0,0.204,2,0.836,3,0.34,4,0.34,5,0.268,6,2.002,8,1.568,9,1.3,16,3.309,21,0.417,22,1.295,26,3.309,30,0.701,36,2.205,37,0.932,38,0.024,39,0.998,40,0.342,41,0.583,43,1.215,44,1.561,57,3.452,65,2.592,68,0.889,72,0.34,78,2.616,85,1.672,115,0.02,116,0.018,129,2.815,200,3.649,230,2.687,264,2.592,568,4.057,569,4.028,570,3.352,571,5.376,572,5.376,573,5.376,574,5.376,575,2.206,576,4.437,577,4.437,578,5.376,579,2.118,580,2.254,581,5.376,582,3.649,583,4.211,584,3.155,585,4.563,586,4.211,587,4.211,588,1.149,589,2.592,590,3.997,591,1.672,592,3.574,593,3.155,594,2.592,595,3.155,596,3.155,597,3.155,598,3.574,599,2.842,600,1.88,601,3.155,602,4.028,603,2.842,604,3.155,605,3.155,606,1.472,607,3.155,608,1.472,609,3.155,610,3.574,611,3.155,612,3.155,613,3.155,614,3.155,615,3.155,616,3.155,617,4.211,618,4.211]],["title/classes/LoginOptions.html",[0,0.169,619,1.39]],["body/classes/LoginOptions.html",[0,0.243,2,0.434,3,0.273,4,0.176,5,0.139,9,0.675,10,1.039,11,0.764,12,1.275,14,0.597,15,1.181,18,1.361,21,0.216,28,1.615,30,0.677,33,1.492,34,1.181,35,1.342,38,0.025,40,0.337,41,0.711,44,0.635,46,1.37,51,1.11,54,1.258,62,1.977,63,0.718,64,0.675,68,0.328,72,0.474,73,1.288,74,1.258,75,0.814,76,0.814,77,0.814,82,1.258,83,1.526,93,1.444,104,0.353,110,0.434,115,0.011,116,0.011,125,0.922,126,0.764,127,0.561,154,1.64,167,1.435,199,2.251,207,0.927,209,0.927,213,0.927,227,0.868,228,2.13,232,2.198,253,0.927,262,1.043,263,1.11,267,1.11,268,1.444,278,1.342,292,1.624,311,0.814,318,1.11,333,0.764,334,1.533,344,2.423,467,1.871,470,1.181,519,0.868,553,1.97,575,1.258,579,1.11,580,1.624,588,0.597,591,1.342,600,1.857,606,0.764,608,1.999,619,1.342,620,0.927,621,1.433,622,1.433,623,2.108,624,1.64,625,1.873,626,1.873,627,1.873,628,1.873,629,1.873,630,1.873,631,2.186,632,1.73,633,2.594,634,2.105,635,1.533,636,1.97,637,1.533,638,1.433,639,1.533,640,1.97,641,1.97,642,1.533,643,2.307,644,2.108,645,1.533,646,1.342,647,1.533,648,1.533,649,1.433,650,1.342,651,2.186,652,1.433,653,1.433,654,1.533,655,1.873,656,1.342,657,2.186,658,1.97,659,1.97,660,2.409,661,2.108,662,1.533,663,2.108,664,1.533,665,1.533,666,1.533,667,1.533,668,2.186,669,1.433,670,1.433,671,1.433,672,2.108,673,1.533,674,1.433,675,2.186,676,2.108,677,1.533,678,1.342,679,1.433,680,1.533,681,2.409,682,2.108,683,2.186,684,1.433,685,1.873,686,2.186,687,1.533,688,1.433,689,1.433,690,1.342,691,1.533,692,1.533,693,1.533,694,1.533,695,1.533,696,1.533,697,1.533,698,2.186,699,1.433,700,1.533,701,1.995,702,0.927,703,1.533,704,0.992,705,0.927,706,0.992,707,0.868,708,0.992,709,2.279,710,0.992,711,0.992,712,0.992,713,0.992,714,0.992,715,0.927,716,0.992,717,0.927,718,0.927,719,0.992,720,0.927,721,0.992,722,1.342,723,1.533,724,1.533,725,1.533,726,0.868,727,0.992,728,0.992,729,0.992,730,2.279,731,0.927,732,0.868,733,0.992,734,0.868,735,0.992,736,0.992,737,0.992,738,1.433,739,1.342,740,1.533,741,1.751,742,0.992,743,0.814,744,0.992,745,0.992,746,0.927,747,0.927,748,0.992,749,0.764,750,0.992,751,0.927,752,0.927,753,0.868,754,0.868,755,0.927,756,0.992,757,0.992,758,0.992,759,0.992,760,0.992,761,0.992,762,0.992,763,0.992,764,0.992,765,0.992,766,0.992,767,0.992,768,0.992,769,0.992,770,0.992,771,0.992,772,0.992,773,0.992,774,0.992,775,0.992,776,0.992,777,0.992,778,0.992,779,0.992,780,0.992,781,0.992,782,0.992,783,0.992,784,0.992]],["title/injectables/MemoryStorage.html",[126,0.791,726,1.39]],["body/injectables/MemoryStorage.html",[0,0.258,3,0.302,4,0.201,5,0.159,10,1.075,11,0.873,12,0.771,14,0.681,15,0.873,18,1.149,21,0.247,22,0.9,28,1.631,30,0.588,33,1.346,34,0.873,35,0.991,37,0.776,38,0.025,39,0.831,40,0.285,41,0.539,43,1.012,44,0.724,46,1.453,51,1.228,54,1.392,62,1.852,63,0.82,64,0.771,68,0.374,72,0.492,73,1.366,74,1.392,75,0.929,76,0.929,77,0.929,82,0.929,83,1.472,93,1.283,104,0.403,110,0.742,115,0.013,116,0.013,125,1.02,126,0.845,127,0.64,132,1.536,167,1.84,199,1.899,207,1.058,209,1.058,213,1.058,227,0.991,228,1.852,232,1.975,253,1.585,262,0.771,263,0.82,267,0.82,268,1.307,278,1.484,292,1.566,311,1.668,318,1.228,333,1.739,334,1.132,344,2.562,467,1.852,470,0.873,519,0.991,553,1.585,575,0.929,579,0.82,580,1.307,588,0.681,591,0.991,600,1.566,606,0.873,608,1.739,619,0.991,620,1.058,621,1.058,622,1.058,623,1.695,624,0.991,625,1.132,626,1.132,627,1.132,628,1.132,629,1.132,630,1.132,632,1.392,633,2.256,634,1.958,635,1.132,636,1.585,637,1.132,638,1.058,639,1.132,640,1.585,641,1.585,642,1.132,643,2.082,644,1.695,645,1.132,646,0.991,647,1.132,648,1.132,649,1.058,650,0.991,652,1.058,653,1.058,654,1.132,655,1.695,656,0.991,658,1.585,659,1.585,660,2.032,661,1.695,662,1.132,663,1.695,664,1.132,665,1.132,666,1.132,667,1.132,669,1.058,670,1.058,671,1.058,672,2.032,673,1.132,674,1.058,676,1.695,677,1.132,678,0.991,679,1.058,680,1.132,681,2.032,682,1.695,684,1.058,685,1.695,687,1.132,688,1.058,689,1.058,690,0.991,691,1.132,692,1.132,693,1.132,694,1.132,695,1.132,696,1.132,697,1.132,699,1.058,700,1.132,701,2.115,702,1.058,703,1.695,704,1.132,705,1.058,706,1.132,707,0.991,708,1.132,709,2.416,710,1.132,711,1.132,712,1.132,713,1.132,714,1.132,715,1.058,716,1.132,717,1.058,718,1.058,719,1.132,720,1.058,721,1.132,722,1.484,723,2.032,724,2.032,725,2.032,726,1.484,727,1.132,728,1.132,729,1.132,730,2.416,731,1.058,732,0.991,733,1.132,734,0.991,735,1.132,736,1.132,737,1.132,738,1.585,739,1.484,740,1.695,741,1.899,742,1.132,743,0.929,744,1.132,745,1.132,746,1.058,747,1.058,748,1.132,749,0.873,750,1.132,751,1.058,752,1.058,753,0.991,754,0.991,755,1.058,756,1.132,757,1.132,758,1.132,759,1.132,760,1.132,761,1.132,762,1.132,763,1.132,764,1.132,765,1.132,766,1.132,767,1.132,768,1.132,769,1.132,770,1.132,771,1.132,772,1.132,773,1.132,774,1.132,775,1.132,776,1.132,777,1.132,778,1.132,779,1.132,780,1.132,781,1.132,782,1.132,783,1.132,784,1.132,785,3.172,786,3.172,787,3.172,788,2.495,789,2.495,790,2.495,791,2.495]],["title/classes/NullValidationHandler.html",[0,0.169,582,1.981]],["body/classes/NullValidationHandler.html",[0,0.225,2,0.924,3,0.376,4,0.376,5,0.296,6,2.309,8,1.734,9,1.438,12,1.915,14,1.562,16,3.524,21,0.461,22,1.379,26,3.524,30,0.677,37,0.992,38,0.024,39,1.063,40,0.364,41,0.621,43,1.294,44,1.878,57,3.65,65,3.524,68,0.699,72,0.376,104,0.924,115,0.019,116,0.019,264,3.816,570,3.915,582,3.241,584,4.29,634,1.881,792,4.645,793,5.725,794,4.86,795,5.725,796,5.725,797,5.725,798,3.952,799,4.656,800,4.656,801,4.656]],["title/classes/OAuthErrorEvent.html",[0,0.169,802,1.981]],["body/classes/OAuthErrorEvent.html",[0,0.305,2,0.861,3,0.485,4,0.35,5,0.276,10,0.752,30,0.513,37,0.752,38,0.025,39,0.805,40,0.413,41,0.47,46,1.813,64,1.854,72,0.525,115,0.019,116,0.019,129,3.303,230,2.486,296,2.455,588,1.639,802,3.101,803,2.455,804,3.682,805,4.052,806,4.152,807,4.052,808,4.338,809,2.67,810,2.67,811,2.67,812,2.67,813,2.67,814,2.67,815,2.67,816,2.67,817,2.67,818,2.67,819,2.67,820,2.67,821,2.67,822,2.67,823,2.67,824,2.67,825,2.67,826,2.67,827,2.67,828,2.67,829,2.272,830,2.67,831,2.67,832,2.67,833,2.927,834,2.455,835,4.257,836,4.052,837,2.455]],["title/classes/OAuthEvent.html",[0,0.169,804,1.981]],["body/classes/OAuthEvent.html",[0,0.307,2,0.875,3,0.488,4,0.356,5,0.28,10,0.764,30,0.522,37,0.764,38,0.025,39,0.818,40,0.415,41,0.478,46,1.51,64,1.361,72,0.527,115,0.019,116,0.019,129,3.168,230,2.511,296,2.495,588,1.651,802,2.495,803,2.495,804,3.699,805,4.082,806,4.166,807,2.975,809,2.713,810,2.713,811,2.713,812,2.713,813,2.713,814,2.713,815,2.713,816,2.713,817,2.713,818,2.713,819,2.713,820,2.713,821,2.713,822,2.713,823,2.713,824,2.713,825,2.713,826,2.713,827,2.713,828,2.713,829,2.308,830,2.713,831,2.713,832,2.713,833,2.975,834,2.495,835,4.282,836,4.082,837,2.495,838,4.408]],["title/classes/OAuthInfoEvent.html",[0,0.169,837,1.981]],["body/classes/OAuthInfoEvent.html",[0,0.306,2,0.869,3,0.526,4,0.353,5,0.278,10,0.759,30,0.518,37,0.759,38,0.025,39,0.813,40,0.414,41,0.475,46,1.504,64,1.352,72,0.526,115,0.019,116,0.019,129,3.315,230,2.501,296,2.479,588,1.646,802,2.479,803,2.479,804,3.692,805,4.07,806,4.16,807,2.956,809,2.695,810,2.695,811,2.695,812,2.695,813,2.695,814,2.695,815,2.695,816,2.695,817,2.695,818,2.695,819,2.695,820,2.695,821,2.695,822,2.695,823,2.695,824,2.695,825,2.695,826,2.695,827,2.695,828,2.695,829,2.293,830,2.695,831,2.695,832,2.695,833,2.956,834,2.479,835,4.272,836,4.07,837,3.12,839,4.38]],["title/classes/OAuthLogger.html",[0,0.169,707,1.39]],["body/classes/OAuthLogger.html",[0,0.253,2,0.475,3,0.393,4,0.193,5,0.152,9,0.74,10,1.166,11,1.267,12,0.74,14,0.654,15,0.837,18,1.12,21,0.237,22,0.872,28,1.619,30,0.619,33,1.326,34,0.837,37,0.907,38,0.025,39,0.971,40,0.332,41,0.597,43,1.183,44,0.695,46,1.502,51,1.19,54,1.349,62,1.814,63,0.787,64,0.74,68,0.359,72,0.486,73,1.411,74,1.349,75,0.892,76,0.892,77,0.892,82,0.892,83,1.435,93,1.26,104,0.387,110,0.475,115,0.012,116,0.012,125,0.989,126,0.819,127,0.614,167,1.504,199,1.853,207,1.536,209,1.016,213,1.536,227,0.951,228,1.814,232,2.078,253,1.016,262,0.74,263,1.435,267,0.787,268,1.267,278,1.439,292,1.528,311,0.892,333,0.837,344,2.609,467,1.814,470,0.837,519,1.439,553,1.536,575,0.892,579,0.787,580,1.267,588,0.654,591,0.951,600,1.528,606,1.267,608,1.703,619,0.951,620,1.016,621,1.016,622,1.016,623,1.644,624,0.951,625,1.087,626,1.087,627,1.087,628,1.087,629,1.087,630,1.087,632,1.349,633,2.21,634,1.934,635,1.087,636,1.536,637,1.087,638,1.016,639,1.087,640,1.536,641,1.536,642,1.087,643,2.05,644,1.644,645,1.087,646,0.951,647,1.087,648,1.087,649,1.016,650,0.951,652,1.016,653,1.016,654,1.087,655,1.982,656,0.951,658,1.536,659,1.536,660,1.982,661,1.644,662,1.087,663,1.644,664,1.087,665,1.087,666,1.087,667,1.087,669,1.016,670,1.016,671,1.016,672,2.21,673,1.087,674,1.016,676,1.644,677,1.087,678,0.951,679,1.016,680,2.497,681,1.982,682,1.644,684,1.016,685,1.644,687,1.087,688,1.016,689,1.016,690,0.951,691,1.087,692,1.087,693,1.087,694,1.087,695,1.087,696,1.087,697,1.087,699,1.016,700,1.087,701,2.078,702,1.536,703,1.982,704,1.644,705,1.536,706,1.644,707,1.439,708,1.644,709,2.958,710,1.644,711,1.644,712,1.644,713,1.644,714,1.087,715,1.016,716,1.087,717,1.016,718,1.016,719,1.087,720,1.016,721,1.087,722,1.439,723,1.644,724,1.644,725,1.644,726,0.951,727,1.087,728,1.087,729,1.087,730,2.374,731,1.016,732,0.951,733,1.087,734,0.951,735,1.087,736,1.087,737,1.087,738,1.536,739,1.439,740,1.644,741,1.853,742,1.087,743,0.892,744,1.087,745,1.087,746,1.016,747,1.016,748,1.087,749,0.837,750,1.087,751,1.016,752,1.016,753,0.951,754,0.951,755,1.016,756,1.087,757,1.087,758,1.087,759,1.087,760,1.087,761,1.087,762,1.087,763,1.087,764,1.087,765,1.087,766,1.087,767,1.087,768,1.087,769,1.087,770,1.087,771,1.087,772,1.087,773,1.087,774,1.087,775,1.087,776,1.087,777,1.087,778,1.087,779,1.087,780,1.087,781,1.087,782,1.087,783,1.087,784,1.087,840,3.623,841,3.623,842,3.623,843,2.395,844,3.92,845,2.395,846,2.395,847,2.395,848,2.395]],["title/modules/OAuthModule.html",[849,2.971,850,2.362]],["body/modules/OAuthModule.html",[0,0.228,3,0.38,4,0.38,5,0.299,22,1.133,30,0.557,35,1.868,37,0.815,38,0.025,39,0.873,40,0.299,41,0.51,43,1.063,68,1,72,0.38,104,0.759,115,0.019,116,0.019,127,1.206,236,3.399,258,4.203,259,3.993,264,2.895,292,1.645,334,2.134,570,2.662,582,3.525,588,1.572,792,3.524,850,4.203,851,3.524,852,5.762,853,4.704,854,5.762,855,4.891,856,4.704,857,5.51,858,4.704,859,4.891,860,6.229,861,5.287,862,5.762,863,3.993,864,3.174,865,3.993,866,3.993,867,3.524,868,3.993,869,3.524,870,3.993]],["title/classes/OAuthModuleConfig.html",[0,0.169,236,1.833]],["body/classes/OAuthModuleConfig.html",[0,0.291,2,1.003,3,0.408,4,0.408,5,0.321,10,1.042,21,0.5,28,1.142,30,0.598,38,0.024,40,0.321,63,1.66,72,0.485,93,1.217,115,0.02,116,0.02,236,3.15,267,1.66,268,2.103,286,4.059,318,1.976,506,3.109,634,1.66,643,1.882,871,4.507,872,3.785,873,4.813,874,4.335,875,5.052,876,3.785,877,3.785,878,4.288,879,4.288,880,4.288,881,4.288,882,3.785,883,4.288]],["title/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.169,884,2.362]],["body/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.288,2,0.983,3,0.4,4,0.4,5,0.315,8,1.844,10,1.03,14,1.622,21,0.49,22,1.431,30,0.586,37,0.858,38,0.024,39,0.919,40,0.315,41,0.537,43,1.119,68,0.892,72,0.48,104,0.799,115,0.02,116,0.02,234,3.92,244,4.949,248,3.047,250,3.341,262,1.835,263,1.953,589,3.047,798,4.203,884,4.011,885,4.453,886,5.045,887,5.406,888,5.734,889,4.203,890,4.203]],["title/classes/OAuthResourceServerConfig.html",[0,0.169,874,2.362]],["body/classes/OAuthResourceServerConfig.html",[0,0.281,2,0.948,3,0.386,4,0.386,5,0.304,10,1.008,21,0.473,28,1.08,30,0.742,38,0.024,40,0.398,41,0.708,63,1.911,72,0.469,93,1.401,115,0.02,116,0.02,154,1.898,236,2.502,267,1.57,268,2.193,286,4.514,318,1.911,506,3.58,634,1.911,643,2.167,871,4.89,872,3.58,873,3.58,874,4.232,876,4.358,877,4.358,878,4.937,879,4.937,880,4.937,881,4.937,882,4.699,883,5.323,891,4.778,892,4.778,893,4.778]],["title/classes/OAuthResourceServerErrorHandler.html",[0,0.169,234,2.154]],["body/classes/OAuthResourceServerErrorHandler.html",[0,0.288,2,0.983,3,0.4,4,0.4,5,0.315,8,1.844,10,1.145,14,1.351,21,0.49,22,1.431,30,0.586,37,0.858,38,0.024,39,0.919,40,0.315,41,0.537,43,1.119,68,0.892,72,0.48,104,0.799,115,0.02,116,0.02,234,3.92,244,4.949,248,3.047,250,3.341,262,1.835,263,1.953,589,3.047,884,3.341,885,4.453,886,5.045,887,5.406,888,5.734,889,4.203,890,4.203,894,4.951]],["title/classes/OAuthStorage.html",[0,0.169,722,1.39]],["body/classes/OAuthStorage.html",[0,0.257,2,0.491,3,0.3,4,0.2,5,0.157,9,0.764,10,1.145,11,0.866,12,0.764,14,0.675,15,0.866,18,1.143,21,0.245,22,0.894,28,1.63,30,0.527,33,1.342,34,0.866,37,0.772,38,0.025,39,0.827,40,0.283,41,0.537,43,1.008,44,0.719,46,1.448,51,1.22,54,1.383,62,1.845,63,0.813,64,0.764,68,0.371,72,0.491,73,1.361,74,1.383,75,0.922,76,0.922,77,0.922,82,0.922,83,1.627,93,1.278,104,0.4,110,0.491,115,0.013,116,0.013,125,1.013,126,0.839,127,0.635,167,1.721,199,1.89,207,1.05,209,1.575,213,1.05,227,0.983,228,1.845,232,1.967,253,1.05,262,0.764,263,0.813,267,0.813,268,1.299,278,1.475,292,1.559,311,0.922,333,1.732,344,2.558,467,1.845,470,0.866,519,0.983,553,1.575,575,0.922,579,0.813,580,1.299,588,1.013,591,0.983,600,1.559,606,0.866,608,1.732,619,0.983,620,1.05,621,1.05,622,1.05,623,1.685,624,0.983,625,1.123,626,1.123,627,1.123,628,1.123,629,1.123,630,1.123,632,1.383,633,2.247,634,1.997,635,1.123,636,1.575,637,1.123,638,1.05,639,1.123,640,1.575,641,1.575,642,1.123,643,2.076,644,1.685,645,1.123,646,0.983,647,1.123,648,1.123,649,1.05,650,0.983,652,1.05,653,1.05,654,1.123,655,1.685,656,0.983,658,1.575,659,1.575,660,2.022,661,1.685,662,1.123,663,1.685,664,1.123,665,1.123,666,1.123,667,1.123,669,1.05,670,1.05,671,1.05,672,2.247,673,1.123,674,1.05,676,1.685,677,1.123,678,0.983,679,1.05,680,1.123,681,2.022,682,1.685,684,1.05,685,1.685,687,1.123,688,1.05,689,1.05,690,0.983,691,1.123,692,1.123,693,1.123,694,1.123,695,1.123,696,1.123,697,1.123,699,1.05,700,1.123,701,2.108,702,1.05,703,2.022,704,1.123,705,1.05,706,1.123,707,0.983,708,1.123,709,2.408,710,1.123,711,1.123,712,1.123,713,1.123,714,1.685,715,1.575,716,1.685,717,1.575,718,1.575,719,1.685,720,1.575,721,1.685,722,1.77,723,2.022,724,2.022,725,2.022,726,0.983,727,1.123,728,1.123,729,1.123,730,2.408,731,1.05,732,0.983,733,1.123,734,0.983,735,1.123,736,1.123,737,1.123,738,1.575,739,1.475,740,1.685,741,1.89,742,1.123,743,0.922,744,1.123,745,1.123,746,1.05,747,1.05,748,1.123,749,0.866,750,1.123,751,1.05,752,1.05,753,0.983,754,0.983,755,1.05,756,1.123,757,1.123,758,1.123,759,1.123,760,1.123,761,1.123,762,1.123,763,1.123,764,1.123,765,1.123,766,1.123,767,1.123,768,1.123,769,1.123,770,1.123,771,1.123,772,1.123,773,1.123,774,1.123,775,1.123,776,1.123,777,1.123,778,1.123,779,1.123,780,1.123,781,1.123,782,1.123,783,1.123,784,1.123,785,3.152,786,3.152,787,3.152,895,2.475,896,2.475,897,2.475]],["title/classes/OAuthSuccessEvent.html",[0,0.169,834,1.981]],["body/classes/OAuthSuccessEvent.html",[0,0.306,2,0.869,3,0.526,4,0.353,5,0.278,10,0.759,30,0.518,37,0.759,38,0.025,39,0.813,40,0.414,41,0.475,46,1.504,64,1.352,72,0.526,115,0.019,116,0.019,129,3.315,230,2.501,296,2.479,588,1.646,802,2.479,803,2.479,804,3.692,805,4.07,806,4.16,807,2.956,809,2.695,810,2.695,811,2.695,812,2.695,813,2.695,814,2.695,815,2.695,816,2.695,817,2.695,818,2.695,819,2.695,820,2.695,821,2.695,822,2.695,823,2.695,824,2.695,825,2.695,826,2.695,827,2.695,828,2.695,829,2.293,830,2.695,831,2.695,832,2.695,833,2.956,834,3.12,835,4.272,836,4.07,837,2.479,898,4.38]],["title/interfaces/OidcDiscoveryDoc.html",[73,0.898,754,1.39]],["body/interfaces/OidcDiscoveryDoc.html",[0,0.243,3,0.273,4,0.177,5,0.139,9,0.677,10,1.04,11,0.767,12,0.677,14,0.598,15,0.767,18,1.061,21,0.217,28,1.646,33,1.28,34,0.767,38,0.025,40,0.437,41,0.238,44,0.637,46,1.372,51,1.113,54,1.261,62,1.733,63,0.72,64,0.677,68,0.329,72,0.474,73,1.29,74,1.261,75,0.817,76,0.817,77,0.817,82,0.817,83,1.359,93,1.211,104,0.354,110,0.435,115,0.011,116,0.011,125,0.924,126,0.766,127,0.562,167,1.437,199,1.755,207,0.93,209,0.93,213,0.93,227,0.871,228,1.733,232,1.848,253,0.93,262,0.677,263,0.72,267,0.72,268,1.627,278,1.345,292,1.447,311,0.817,318,1.113,333,0.767,344,2.425,467,1.733,470,0.767,519,0.871,553,1.436,575,0.817,579,0.72,580,1.184,588,0.598,591,0.871,600,1.447,606,0.767,608,1.627,619,0.871,620,0.93,621,0.93,622,0.93,623,1.537,624,0.871,625,0.995,626,0.995,627,0.995,628,0.995,629,0.995,630,0.995,632,1.261,633,2.111,634,1.88,635,0.995,636,1.436,637,0.995,638,0.93,639,0.995,640,1.436,641,1.436,642,0.995,643,1.98,644,1.537,645,0.995,646,0.871,647,0.995,648,0.995,649,0.93,650,0.871,652,0.93,653,0.93,654,0.995,655,1.537,656,0.871,658,1.436,659,1.436,660,1.877,661,1.537,662,0.995,663,1.537,664,0.995,665,0.995,666,0.995,667,0.995,669,0.93,670,0.93,671,0.93,672,1.877,673,0.995,674,0.93,676,1.537,677,0.995,678,0.871,679,0.93,680,0.995,681,1.877,682,1.537,684,0.93,685,1.537,687,0.995,688,0.93,689,0.93,690,0.871,691,0.995,692,0.995,693,0.995,694,0.995,695,0.995,696,0.995,697,0.995,699,0.93,700,0.995,701,1.997,702,0.93,703,1.537,704,0.995,705,0.93,706,0.995,707,0.871,708,0.995,709,2.282,710,0.995,711,0.995,712,0.995,713,0.995,714,0.995,715,0.93,716,0.995,717,0.93,718,0.93,719,0.995,720,0.93,721,0.995,722,1.345,723,1.537,724,1.537,725,1.537,726,0.871,727,0.995,728,0.995,729,0.995,730,2.412,731,0.93,732,0.871,733,0.995,734,0.871,735,0.995,736,0.995,737,0.995,738,1.436,739,1.345,740,1.537,741,1.973,742,0.995,743,0.817,744,0.995,745,0.995,746,0.93,747,0.93,748,0.995,749,0.767,750,0.995,751,1.436,752,1.436,753,1.345,754,1.345,755,1.973,756,2.111,757,2.111,758,2.111,759,2.111,760,2.111,761,2.111,762,2.111,763,2.111,764,2.111,765,2.111,766,2.111,767,2.111,768,2.111,769,2.111,770,2.111,771,2.111,772,2.111,773,2.111,774,2.111,775,2.111,776,2.111,777,2.111,778,2.111,779,2.111,780,2.111,781,2.111,782,2.111,783,2.111,784,2.111,899,1.241]],["title/interfaces/ParsedIdToken.html",[73,0.898,734,1.39]],["body/interfaces/ParsedIdToken.html",[0,0.259,3,0.305,4,0.205,5,0.161,9,0.783,10,1.08,11,0.887,12,0.783,14,0.692,15,0.887,18,1.16,21,0.251,28,1.63,33,1.355,34,0.887,38,0.025,40,0.357,41,0.275,44,0.737,46,1.67,51,1.486,54,1.685,62,1.868,63,0.834,64,0.783,68,0.381,72,0.494,73,1.375,74,1.998,75,0.945,76,1.868,77,1.868,82,0.945,83,1.486,93,1.292,104,0.41,110,0.504,115,0.013,116,0.013,125,1.368,126,0.855,127,0.651,167,1.548,199,1.918,207,1.076,209,1.076,213,1.076,227,1.008,228,1.868,232,1.991,253,1.076,262,0.783,263,0.834,267,0.834,268,1.323,278,1.502,292,1.582,311,0.945,318,1.243,333,0.887,344,2.511,467,1.868,470,0.887,519,1.008,553,1.604,575,0.945,579,0.834,580,1.323,588,0.692,591,1.008,600,1.582,606,0.887,608,1.753,619,1.008,620,1.076,621,1.076,622,1.076,623,1.716,624,1.008,625,1.151,626,1.151,627,1.151,628,1.151,629,1.151,630,1.151,632,1.409,633,2.275,634,1.967,635,1.151,636,1.604,637,1.151,638,1.076,639,1.151,640,1.604,641,1.604,642,1.151,643,2.095,644,1.716,645,1.151,646,1.008,647,1.151,648,1.151,649,1.076,650,1.008,652,1.076,653,1.076,654,1.151,655,1.716,656,1.008,658,1.604,659,1.604,660,2.052,661,1.716,662,1.151,663,1.716,664,1.151,665,1.151,666,1.151,667,1.151,669,1.076,670,1.076,671,1.076,672,2.052,673,1.151,674,1.076,676,1.716,677,1.151,678,1.008,679,1.076,680,1.151,681,2.052,682,1.716,684,1.076,685,2.052,687,1.151,688,1.076,689,1.076,690,1.008,691,1.151,692,1.151,693,1.151,694,1.151,695,1.151,696,1.151,697,1.151,699,1.076,700,1.151,701,2.13,702,1.076,703,1.716,704,1.151,705,1.076,706,1.151,707,1.008,708,1.151,709,2.433,710,1.151,711,1.151,712,1.151,713,1.151,714,1.151,715,1.076,716,1.151,717,1.076,718,1.076,719,1.151,720,1.076,721,1.151,722,1.502,723,1.716,724,1.716,725,1.716,726,1.008,727,1.151,728,1.151,729,1.151,730,2.552,731,1.076,732,1.008,733,1.151,734,1.502,735,2.275,736,2.275,737,2.275,738,1.604,739,1.502,740,1.716,741,1.918,742,1.151,743,0.945,744,1.151,745,1.151,746,1.076,747,1.076,748,1.151,749,0.887,750,1.151,751,1.076,752,1.076,753,1.008,754,1.008,755,1.076,756,1.151,757,1.151,758,1.151,759,1.151,760,1.151,761,1.151,762,1.151,763,1.151,764,1.151,765,1.151,766,1.151,767,1.151,768,1.151,769,1.151,770,1.151,771,1.151,772,1.151,773,1.151,774,1.151,775,1.151,776,1.151,777,1.151,778,1.151,779,1.151,780,1.151,781,1.151,782,1.151,783,1.151,784,1.151,899,1.436]],["title/classes/ReceivedTokens.html",[0,0.169,701,1.39]],["body/classes/ReceivedTokens.html",[0,0.26,2,0.506,3,0.306,4,0.206,5,0.162,9,0.787,10,1.081,11,0.891,12,0.787,14,0.696,15,0.891,18,1.163,21,0.252,28,1.627,30,0.595,33,1.357,34,0.891,38,0.025,40,0.319,41,0.583,44,0.74,46,1.537,51,1.247,54,1.69,62,2.098,63,0.837,64,0.787,68,0.383,72,0.495,73,1.378,74,1.872,75,1.69,76,0.949,77,0.949,82,0.949,83,1.651,93,1.294,104,0.412,110,0.506,115,0.013,116,0.013,125,1.036,126,0.858,127,0.654,167,1.552,199,1.924,207,1.081,209,1.081,213,1.081,227,1.012,228,1.872,232,1.996,253,1.081,262,0.787,263,0.837,267,0.837,268,1.327,278,1.508,292,1.757,311,0.949,318,1.247,333,0.891,344,2.514,467,2.174,470,0.891,519,1.012,553,1.61,575,0.949,579,0.837,580,1.327,588,0.696,591,1.012,600,1.586,606,0.891,608,1.757,619,1.012,620,1.081,621,1.081,622,1.081,623,1.722,624,1.012,625,1.156,626,1.156,627,1.156,628,1.156,629,1.156,630,1.156,632,1.414,633,2.28,634,1.97,635,1.156,636,1.61,637,1.156,638,1.081,639,1.156,640,1.61,641,1.61,642,1.156,643,2.098,644,1.722,645,1.156,646,1.012,647,1.156,648,1.156,649,1.081,650,1.012,652,1.081,653,1.081,654,1.156,655,1.722,656,1.012,658,1.61,659,1.61,660,2.058,661,1.722,662,1.156,663,1.722,664,1.156,665,1.156,666,1.156,667,1.156,669,1.081,670,1.081,671,1.081,672,2.058,673,1.156,674,1.081,676,1.722,677,1.156,678,1.012,679,1.081,680,1.156,681,2.058,682,1.722,684,1.081,685,1.722,687,1.156,688,1.081,689,1.081,690,1.012,691,1.156,692,1.156,693,1.156,694,1.156,695,1.156,696,1.156,697,1.156,699,1.081,700,1.156,701,2.237,702,1.081,703,1.722,704,1.156,705,1.081,706,1.156,707,1.012,708,1.156,709,2.438,710,1.156,711,1.156,712,1.156,713,1.156,714,1.156,715,1.081,716,1.156,717,1.081,718,1.081,719,1.156,720,1.081,721,1.156,722,1.508,723,1.722,724,1.722,725,1.722,726,1.012,727,1.156,728,1.156,729,1.156,730,2.556,731,1.61,732,1.508,733,2.058,734,1.012,735,1.156,736,1.156,737,1.156,738,1.61,739,1.508,740,1.722,741,1.924,742,1.156,743,0.949,744,1.156,745,1.156,746,1.081,747,1.081,748,1.156,749,0.891,750,1.156,751,1.081,752,1.081,753,1.012,754,1.012,755,1.081,756,1.156,757,1.156,758,1.156,759,1.156,760,1.156,761,1.156,762,1.156,763,1.156,764,1.156,765,1.156,766,1.156,767,1.156,768,1.156,769,1.156,770,1.156,771,1.156,772,1.156,773,1.156,774,1.156,775,1.156,776,1.156,777,1.156,778,1.156,779,1.156,780,1.156,781,1.156,782,1.156,783,1.156,784,1.156,900,2.549,901,2.549,902,2.549,903,2.549]],["title/injectables/SystemDateTimeProvider.html",[126,0.791,128,2.362]],["body/injectables/SystemDateTimeProvider.html",[0,0.287,3,0.397,4,0.397,5,0.313,10,1.101,21,0.487,22,1.427,30,0.701,38,0.024,43,1.339,68,0.739,72,0.478,104,0.956,110,1.36,115,0.02,116,0.02,117,4.152,118,3.689,119,3.031,120,3.689,121,4.552,123,5.597,125,1.734,126,1.339,127,1.263,128,3.998,129,3.102,130,4.18,132,3.031,585,5.028,904,4.924,905,4.924]],["title/interfaces/TokenResponse.html",[73,0.898,743,1.304]],["body/interfaces/TokenResponse.html",[0,0.258,3,0.303,4,0.202,5,0.159,9,0.774,10,1.077,11,0.877,12,0.774,14,0.684,15,0.877,18,1.152,21,0.248,28,1.633,33,1.349,34,0.877,38,0.025,40,0.369,41,0.487,44,0.728,46,1.456,51,1.753,54,1.396,62,1.857,63,1.638,64,0.774,68,0.376,72,0.492,73,1.368,74,1.396,75,0.934,76,0.934,77,0.934,82,0.934,83,1.476,93,1.285,104,0.405,110,0.498,115,0.013,116,0.013,125,1.36,126,0.848,127,0.643,167,1.539,199,1.905,207,1.063,209,1.063,213,1.063,227,0.996,228,1.857,232,1.98,253,1.063,262,0.774,263,0.824,267,0.824,268,1.311,278,1.784,292,1.743,311,0.934,318,1.232,333,0.877,344,2.505,467,2.162,470,0.877,519,0.996,553,1.59,575,0.934,579,0.824,580,1.311,588,0.684,591,0.996,600,1.571,606,0.877,608,1.743,619,0.996,620,1.063,621,1.063,622,1.063,623,1.701,624,0.996,625,1.137,626,1.137,627,1.137,628,1.137,629,1.137,630,1.137,632,1.396,633,2.261,634,1.961,635,1.137,636,1.59,637,1.137,638,1.063,639,1.137,640,1.59,641,1.59,642,1.137,643,2.086,644,1.701,645,1.137,646,0.996,647,1.137,648,1.137,649,1.063,650,0.996,652,1.063,653,1.063,654,1.137,655,1.701,656,0.996,658,1.59,659,1.59,660,2.038,661,1.701,662,1.137,663,1.701,664,1.137,665,1.137,666,1.137,667,1.137,669,1.063,670,1.063,671,1.063,672,2.038,673,1.137,674,1.063,676,1.701,677,1.137,678,0.996,679,1.063,680,1.137,681,2.038,682,1.701,684,1.063,685,1.701,687,1.137,688,1.063,689,1.063,690,0.996,691,1.137,692,1.137,693,1.137,694,1.137,695,1.137,696,1.137,697,1.137,699,1.063,700,1.137,701,2.119,702,1.063,703,1.701,704,1.137,705,1.063,706,1.137,707,0.996,708,1.137,709,2.421,710,1.137,711,1.137,712,1.137,713,1.137,714,1.137,715,1.063,716,1.137,717,1.063,718,1.063,719,1.137,720,1.063,721,1.137,722,1.489,723,1.701,724,1.701,725,1.701,726,0.996,727,1.137,728,1.137,729,1.137,730,2.54,731,1.063,732,0.996,733,1.137,734,0.996,735,1.137,736,1.137,737,1.137,738,1.905,739,1.784,740,2.038,741,2.114,742,1.701,743,1.396,744,2.261,745,2.261,746,2.114,747,2.114,748,1.137,749,0.877,750,1.137,751,1.063,752,1.063,753,0.996,754,0.996,755,1.063,756,1.137,757,1.137,758,1.137,759,1.137,760,1.137,761,1.137,762,1.137,763,1.137,764,1.137,765,1.137,766,1.137,767,1.137,768,1.137,769,1.137,770,1.137,771,1.137,772,1.137,773,1.137,774,1.137,775,1.137,776,1.137,777,1.137,778,1.137,779,1.137,780,1.137,781,1.137,782,1.137,783,1.137,784,1.137,899,1.419]],["title/injectables/UrlHelperService.html",[126,0.791,906,2.623]],["body/injectables/UrlHelperService.html",[0,0.216,3,0.36,4,0.36,5,0.283,21,0.441,22,1.342,28,1.512,30,0.66,33,1.534,35,1.771,37,0.966,38,0.025,39,1.035,40,0.354,41,0.605,43,1.26,46,1.738,68,0.669,72,0.36,84,4.117,85,2.415,104,0.982,115,0.019,116,0.019,126,1.26,127,1.143,132,2.744,162,2.919,167,1.721,333,1.559,484,3.43,588,1.217,624,2.214,646,2.214,844,3.34,906,4.176,907,5.161,908,3.784,909,5.574,910,5.574,911,5.574,912,4.458,913,5.574,914,4.458,915,4.458,916,4.458,917,5.574,918,5.574,919,4.458,920,4.458,921,4.458,922,4.458,923,4.458,924,4.458,925,4.458,926,4.458,927,4.458]],["title/interfaces/UserInfo.html",[73,0.898,749,1.224]],["body/interfaces/UserInfo.html",[0,0.262,3,0.37,4,0.21,5,0.165,9,0.802,10,1.086,11,0.908,12,0.802,14,0.709,15,0.908,18,1.176,21,0.257,28,1.629,30,0.307,33,1.366,34,0.908,38,0.025,40,0.165,41,0.282,44,0.754,46,1.478,51,1.265,54,1.434,62,1.889,63,0.853,64,0.802,68,0.39,72,0.497,73,1.389,74,1.434,75,0.967,76,0.967,77,0.967,82,0.967,83,1.507,93,1.305,104,0.419,110,0.516,115,0.013,116,0.013,125,1.051,126,0.87,127,0.666,167,1.566,199,1.945,207,1.102,209,1.102,213,1.102,227,1.529,228,1.889,232,2.014,253,1.102,262,0.802,263,0.853,267,0.853,268,1.346,278,1.822,292,1.604,311,0.967,318,1.265,333,1.346,344,2.525,467,1.889,470,0.908,519,1.032,553,1.633,575,0.967,579,0.853,580,1.346,588,0.709,591,1.032,600,1.604,606,0.908,608,1.774,619,1.032,620,1.102,621,1.102,622,1.102,623,1.747,624,1.032,625,1.178,626,1.178,627,1.178,628,1.178,629,1.178,630,1.178,632,1.434,633,2.301,634,1.981,635,1.178,636,1.633,637,1.178,638,1.102,639,1.178,640,1.633,641,1.633,642,1.178,643,2.113,644,1.747,645,1.178,646,1.032,647,1.178,648,1.178,649,1.102,650,1.032,652,1.102,653,1.102,654,1.178,655,1.747,656,1.032,658,1.633,659,1.633,660,2.081,661,1.747,662,1.178,663,1.747,664,1.178,665,1.178,666,1.178,667,1.178,669,1.102,670,1.102,671,1.102,672,2.081,673,1.178,674,1.102,676,1.747,677,1.178,678,1.032,679,1.102,680,1.178,681,2.081,682,1.747,684,1.102,685,1.747,687,1.178,688,1.102,689,1.102,690,1.032,691,1.178,692,1.178,693,1.178,694,1.178,695,1.178,696,1.178,697,1.178,699,1.102,700,1.178,701,2.151,702,1.102,703,1.747,704,1.178,705,1.102,706,1.178,707,1.032,708,1.178,709,2.457,710,1.178,711,1.178,712,1.178,713,1.178,714,1.178,715,1.102,716,1.178,717,1.102,718,1.102,719,1.178,720,1.102,721,1.178,722,1.529,723,1.747,724,1.747,725,1.747,726,1.032,727,1.178,728,1.178,729,1.178,730,2.574,731,1.102,732,1.032,733,1.178,734,1.032,735,1.178,736,1.178,737,1.178,738,1.945,739,1.822,740,2.081,741,2.151,742,1.178,743,0.967,744,1.178,745,1.178,746,1.102,747,1.102,748,1.747,749,1.346,750,2.301,751,1.102,752,1.102,753,1.032,754,1.032,755,1.102,756,1.178,757,1.178,758,1.178,759,1.178,760,1.178,761,1.178,762,1.178,763,1.178,764,1.178,765,1.178,766,1.178,767,1.178,768,1.178,769,1.178,770,1.178,771,1.178,772,1.178,773,1.178,774,1.178,775,1.178,776,1.178,777,1.178,778,1.178,779,1.178,780,1.178,781,1.178,782,1.178,783,1.178,784,1.178,899,1.47,928,2.597,929,2.597]],["title/classes/ValidationHandler.html",[0,0.169,12,1.081]],["body/classes/ValidationHandler.html",[0,0.227,1,2.108,2,0.68,3,0.276,4,0.276,5,0.218,6,1.992,7,3.608,8,1.275,9,1.057,10,1.164,11,1.197,12,1.776,13,1.793,14,1.279,15,1.64,16,3.539,17,2.108,18,1.202,19,2.566,20,2.886,21,0.339,22,1.129,23,3.513,25,2.311,26,3.291,28,1.406,29,3.539,30,0.555,32,2.566,33,1.288,34,1.64,35,1.36,36,1.793,37,0.813,38,0.025,39,0.993,40,0.298,41,0.509,42,2.886,43,1.06,44,1.882,45,2.566,46,1.569,48,2.566,49,4.006,50,2.566,51,2.092,52,2.566,53,2.566,54,1.275,55,2.311,56,2.566,57,3.571,59,4.66,60,4.513,61,4.006,62,1.992,63,1.757,65,2.886,67,3.608,68,0.514,69,2.108,70,2.311,71,2.566,72,0.431,73,1.371,74,1.275,75,1.275,76,1.275,77,1.275,78,1.666,79,2.566,80,3.513,81,3.513,82,1.746,83,1.54,84,3.828,85,2.47,86,3.513,87,2.566,88,2.566,89,2.108,90,2.566,91,2.566,92,2.566,93,0.825,94,2.566,95,2.566,96,2.566,97,1.938,98,4.308,99,2.566,100,4.308,101,2.566,102,2.566,103,2.566,104,0.757,105,4.006,106,2.566,107,2.566,108,2.566,109,2.108,110,0.68,111,2.566,112,2.311,113,1.938,114,2.566,115,0.016,116,0.016,584,2.566,930,3.424,931,3.424]],["title/interfaces/ValidationParams.html",[57,1.833,73,0.898]],["body/interfaces/ValidationParams.html",[0,0.23,1,2.153,3,0.282,4,0.282,5,0.222,6,1.303,7,2.361,8,1.303,10,1.11,11,1.224,12,1.67,13,1.832,14,1.298,15,1.664,16,2.928,17,2.153,18,1.22,19,2.622,20,2.928,21,0.346,23,3.565,25,2.361,26,2.153,28,1.51,29,3.571,32,2.622,33,1.302,34,1.664,35,1.39,36,1.832,38,0.025,39,0.65,40,0.398,42,2.928,44,1.817,45,2.622,46,1.823,48,2.622,49,4.051,50,2.622,51,1.994,52,2.622,53,2.622,54,1.303,55,2.361,56,2.622,57,3.413,59,4.347,60,4.347,61,3.565,62,1.772,63,1.563,65,2.153,67,3.211,68,0.525,69,2.153,70,2.361,71,2.622,72,0.436,73,1.22,74,2.161,75,2.161,76,2.161,77,2.161,78,2.823,79,4.347,80,2.622,81,2.622,82,1.303,83,1.15,84,2.928,85,2.486,86,3.565,87,2.622,88,2.622,89,2.153,90,2.622,91,2.622,92,2.622,93,0.843,94,2.622,95,2.622,96,2.622,97,1.98,98,4.347,99,2.622,100,4.347,101,2.622,102,2.622,103,2.622,104,0.768,105,4.051,106,2.622,107,2.622,108,2.622,109,2.153,110,0.695,111,2.622,112,2.361,113,1.98,114,2.622,115,0.016,116,0.016,154,1.89,318,1.563,899,1.98]],["title/classes/WebHttpUrlEncodingCodec.html",[0,0.169,932,2.623]],["body/classes/WebHttpUrlEncodingCodec.html",[0,0.214,2,0.876,3,0.356,4,0.356,5,0.28,9,1.363,14,1.512,21,0.437,22,1.334,28,1.619,30,0.751,37,1.1,38,0.025,39,1.178,40,0.403,41,0.689,43,1.435,68,0.663,72,0.356,104,1.025,115,0.019,116,0.019,163,3.738,248,2.717,356,3.409,424,3.738,632,2.063,634,1.82,932,4.15,933,3.747,934,5.54,935,5.54,936,5.54,937,6.054,938,5.54,939,5.54,940,5.54,941,5.54,942,5.54,943,4.415,944,5.54,945,4.415,946,5.54,947,4.415,948,5.54,949,4.415,950,4.415,951,4.415,952,4.415,953,4.415]],["title/changelog.html",[954,2.197,955,2.197,956,2.489]],["body/changelog.html",[5,0.291,13,1.73,17,2.495,18,1.452,33,1.193,36,2.868,37,0.368,38,0.018,40,0.21,41,0.23,51,0.698,64,1.62,78,1.607,83,1.085,93,0.795,110,0.656,113,1.202,115,0.011,116,0.011,117,1.307,119,2.033,121,2.229,145,2.229,146,2.736,154,0.843,159,1.307,182,2.033,200,1.869,202,3.037,206,2.803,218,3.427,228,1.23,230,0.963,258,3.086,260,4.453,262,0.656,263,1.085,264,2.033,267,1.628,268,1.155,275,2.475,292,2.079,329,3.344,334,1.839,354,1.591,430,2.229,452,2.033,454,2.229,467,2.215,470,1.155,481,1.433,483,2.475,501,3.037,570,1.869,579,1.86,590,1.433,594,2.495,599,3.344,600,2.297,603,2.229,606,1.599,608,2.282,622,1.401,624,0.843,632,1.845,636,2.101,638,2.401,640,2.225,646,1.312,649,1.401,656,2.084,658,1.401,659,1.401,674,0.9,678,0.843,689,1.401,690,1.61,715,0.9,732,1.312,738,0.9,739,1.968,743,0.791,746,1.401,749,0.742,753,1.312,829,2.595,877,2.475,956,2.803,957,4.453,958,3.303,959,2.123,960,4.648,961,4.453,962,3.303,963,3.303,964,6.056,965,3.303,966,3.303,967,3.303,968,3.303,969,3.303,970,3.303,971,2.123,972,2.123,973,2.123,974,4.054,975,3.303,976,3.303,977,3.303,978,3.303,979,2.123,980,2.123,981,2.123,982,3.303,983,3.303,984,3.303,985,5.246,986,3.303,987,3.303,988,3.303,989,3.303,990,3.303,991,3.303,992,2.123,993,3.882,994,2.123,995,2.123,996,2.123,997,2.123,998,4.574,999,2.123,1000,2.123,1001,2.123,1002,3.427,1003,3.303,1004,3.303,1005,3.303,1006,3.303,1007,3.303,1008,3.303,1009,2.803,1010,3.303,1011,2.803,1012,3.303,1013,3.303,1014,5.476,1015,3.303,1016,3.303,1017,3.303,1018,3.303,1019,3.303,1020,2.803,1021,3.303,1022,4.574,1023,3.303,1024,3.303,1025,3.303,1026,3.303,1027,2.123,1028,2.123,1029,2.123,1030,2.123,1031,2.123,1032,2.123,1033,1.802,1034,2.123,1035,2.803,1036,2.123,1037,2.123,1038,2.123,1039,2.123,1040,4.453,1041,2.123,1042,2.123,1043,2.123,1044,2.123,1045,1.802,1046,2.123,1047,5.476,1048,2.123,1049,2.123,1050,2.123,1051,2.123,1052,2.123,1053,1.802,1054,2.123,1055,2.123,1056,2.123,1057,2.123,1058,2.123,1059,2.123,1060,1.802,1061,2.123,1062,2.123,1063,4.054,1064,5.476,1065,4.054,1066,4.054,1067,3.303,1068,2.123,1069,2.123,1070,2.123,1071,2.123,1072,2.123,1073,2.123,1074,3.303,1075,3.303,1076,2.123,1077,2.123,1078,2.123,1079,2.123,1080,2.123,1081,2.123,1082,2.123,1083,2.123,1084,4.054,1085,3.303,1086,2.123,1087,3.303,1088,2.123,1089,2.123,1090,2.123,1091,4.054,1092,2.123,1093,2.123,1094,2.123,1095,2.123,1096,1.802,1097,2.123,1098,2.123,1099,2.123,1100,3.303,1101,4.054,1102,4.054,1103,4.054,1104,2.123,1105,1.802,1106,2.123,1107,4.574,1108,2.123,1109,2.123,1110,2.123,1111,2.123,1112,2.123,1113,2.123,1114,2.123,1115,4.054,1116,3.303,1117,2.123,1118,2.123,1119,2.123,1120,3.303,1121,2.123,1122,2.123,1123,1.802,1124,2.123,1125,2.123,1126,2.123,1127,2.123,1128,2.123,1129,3.303,1130,2.123,1131,4.054,1132,3.441,1133,4.054,1134,2.123,1135,4.054,1136,3.037,1137,4.054,1138,2.123,1139,2.123,1140,2.123,1141,3.441,1142,2.123,1143,2.123,1144,1.802,1145,3.303,1146,3.303,1147,3.303,1148,3.303,1149,3.303,1150,3.303,1151,2.803,1152,3.303,1153,3.303,1154,4.648,1155,2.803,1156,3.441,1157,2.803,1158,3.303,1159,3.303,1160,4.574,1161,2.803,1162,2.123,1163,2.803,1164,3.303,1165,3.303,1166,2.803,1167,3.882,1168,3.303,1169,2.123,1170,2.123,1171,2.123,1172,2.123,1173,3.303,1174,3.303,1175,2.803,1176,3.303,1177,3.303,1178,3.303,1179,3.303,1180,3.303,1181,3.303,1182,4.054,1183,2.803,1184,3.303,1185,3.303,1186,2.803,1187,3.303,1188,3.303,1189,3.303,1190,3.303,1191,3.303,1192,3.303,1193,3.303,1194,3.303,1195,3.303,1196,2.803,1197,3.303,1198,3.303,1199,3.303,1200,3.303,1201,2.123,1202,2.123,1203,2.123,1204,3.303,1205,2.123,1206,3.303,1207,2.123,1208,1.802,1209,1.802,1210,1.802,1211,1.802,1212,1.802,1213,1.802,1214,1.802,1215,1.802,1216,1.802,1217,2.123,1218,2.123,1219,2.123,1220,2.123,1221,2.123,1222,2.123,1223,2.123,1224,2.123,1225,2.123,1226,2.123,1227,2.123,1228,3.303,1229,2.123,1230,2.123,1231,3.303,1232,2.123,1233,2.123,1234,2.123,1235,3.303,1236,2.123,1237,2.123,1238,2.123,1239,2.123,1240,2.123,1241,2.123,1242,1.802,1243,1.802,1244,2.123,1245,2.123,1246,2.123,1247,2.123,1248,2.123,1249,2.123,1250,2.123,1251,2.123,1252,2.123,1253,2.123]],["title/coverage.html",[1254,4.04]],["body/coverage.html",[0,0.338,1,1.92,5,0.198,6,2.605,7,3.434,8,2.483,12,0.963,33,1.058,38,0.025,40,0.198,57,1.634,69,1.92,73,1.493,110,0.619,115,0.015,116,0.015,117,1.92,118,3.293,119,2.705,120,3.293,126,1.316,128,2.105,131,2.337,133,3.728,153,2.105,154,2.687,162,3.744,194,2.105,195,2.966,197,3.293,198,3.293,232,1.239,234,1.92,236,1.634,262,1.357,263,1.444,315,2.705,316,4.102,317,4.102,319,2.105,320,2.105,356,1.92,421,2.105,451,2.337,452,1.92,455,3.812,510,1.92,514,2.105,568,1.92,569,3.293,570,2.88,582,1.766,589,1.92,619,1.239,620,2.732,701,1.239,707,1.239,722,1.239,726,1.239,734,1.239,743,1.162,749,1.091,754,1.239,792,2.337,802,1.766,803,3.126,804,1.766,834,1.766,837,1.766,864,2.105,871,3.812,872,3.293,874,2.105,884,2.105,885,3.293,906,2.337,907,2.648,908,2.648,932,2.337,933,2.648,1096,2.648,1254,2.648,1255,2.337,1256,3.119,1257,3.119,1258,3.119,1259,2.648,1260,3.119,1261,3.119,1262,3.73,1263,3.73,1264,2.648,1265,6.952,1266,5.088,1267,3.73,1268,4.395,1269,6.207,1270,3.73,1271,2.648,1272,2.648,1273,4.395,1274,4.395,1275,5.088,1276,3.119,1277,3.119,1278,3.119,1279,2.648,1280,3.119,1281,3.119,1282,2.648,1283,2.648,1284,6.041,1285,4.395,1286,4.395,1287,3.119,1288,2.648,1289,2.648,1290,5.088,1291,3.119,1292,3.119,1293,3.119,1294,2.648,1295,2.648,1296,3.119,1297,3.119,1298,3.119,1299,3.119,1300,2.648,1301,3.119,1302,2.648,1303,3.119,1304,3.119]],["title/dependencies.html",[210,2.197,1305,3.151]],["body/dependencies.html",[38,0.025,70,3.264,78,2.354,115,0.02,116,0.02,127,1.24,145,3.264,146,3.264,148,3.624,163,3.264,200,3.317,250,3.955,579,1.925,580,2.049,863,4.106,1002,3.624,1305,3.624,1306,4.837,1307,7.015,1308,4.837,1309,4.837,1310,4.837,1311,4.974,1312,4.974,1313,4.837,1314,4.837,1315,4.837,1316,4.837,1317,4.837,1318,4.837,1319,4.837,1320,5.861,1321,4.837,1322,3.624,1323,4.837,1324,4.837,1325,4.837,1326,5.861,1327,4.837,1328,4.837,1329,4.837,1330,4.837,1331,4.837,1332,4.837,1333,4.837,1334,4.837]],["title/miscellaneous/functions.html",[1335,1.66,1336,3.57]],["body/miscellaneous/functions.html",[3,0.481,6,1.853,8,2.083,21,0.37,28,0.845,33,1.198,35,1.976,37,1.19,38,0.024,39,1.275,40,0.42,41,0.745,43,1.347,69,3.062,115,0.017,116,0.017,125,1.861,133,2.523,140,2.523,155,2.801,157,2.801,167,1.727,195,3.357,197,2.801,198,3.727,236,2.605,239,4.223,240,4.223,246,4.223,281,2.801,315,3.928,316,2.301,317,4.009,331,5.34,333,1.74,334,2.257,352,2.523,421,3.357,422,2.801,423,4.466,424,3.357,425,3.727,426,3.727,427,3.727,499,3.727,510,2.301,514,3.357,515,4.466,516,3.727,582,2.116,588,1.02,844,2.801,857,4.223,859,3.173,864,3.357,870,3.173,1262,3.173,1263,4.746,1264,4.223,1270,3.173,1271,4.746,1272,4.746,1279,3.173,1282,4.223,1283,4.223,1288,4.223,1289,4.223,1335,2.116,1336,3.173,1337,4.975,1338,4.975,1339,4.975,1340,3.738,1341,5.417,1342,3.738,1343,3.738,1344,4.975,1345,3.738,1346,3.738,1347,3.738,1348,3.738,1349,3.738,1350,3.738,1351,3.738,1352,3.738,1353,3.738,1354,3.738,1355,4.975,1356,4.975,1357,3.173,1358,3.738]],["title/index.html",[21,0.29,954,2.197,955,2.197]],["body/index.html",[0,0.084,4,0.14,5,0.11,11,0.605,13,0.907,15,1.239,17,1.729,18,1.684,30,0.205,34,0.605,36,2.647,37,0.3,38,0.024,51,0.569,67,1.169,68,0.915,72,0.227,78,0.843,83,0.569,85,0.688,93,0.982,97,1.59,110,0.344,112,1.895,115,0.012,116,0.01,119,1.066,121,1.895,127,0.444,154,1.407,194,1.169,200,3.942,202,1.297,205,2.384,211,1.47,212,3.461,214,1.47,215,2.384,218,1.297,227,2.008,228,0.645,248,2.181,258,3.239,262,1.681,267,0.923,275,1.297,276,1.47,278,1.115,281,2.104,286,2.391,292,2,329,1.169,334,1.274,348,2.181,430,1.169,444,1.297,445,1.297,446,2.104,448,2.104,449,1.297,450,1.297,452,1.729,453,2.655,454,1.169,456,1.297,470,0.605,481,1.895,484,1.066,506,1.066,522,1.297,525,1.297,568,2.181,575,1.32,576,1.297,577,4.872,579,1.977,580,2.074,590,1.895,593,1.297,594,3.59,595,2.655,596,3.596,597,1.297,599,3.554,600,2.197,601,2.104,602,3.358,603,1.169,604,2.655,605,1.297,606,0.605,607,2.104,608,2.104,609,2.104,611,2.104,612,2.655,613,2.104,614,2.104,615,2.104,616,1.297,621,0.734,632,1.046,634,1.164,641,0.734,643,1.32,650,1.407,652,0.734,653,0.734,656,1.619,669,1.191,670,0.734,671,1.191,678,2.008,684,0.734,688,1.503,690,1.115,699,0.734,702,1.901,705,1.191,717,1.191,718,0.734,720,0.734,731,0.734,732,1.115,739,1.619,741,1.191,747,1.503,749,0.605,751,1.503,752,1.503,753,1.619,755,1.191,794,2.384,829,1.856,850,1.895,855,1.47,861,1.47,864,3.411,865,2.384,866,1.47,867,1.297,869,2.655,873,2.104,876,1.297,882,2.655,957,2.384,960,2.384,961,1.47,993,1.47,1002,1.297,1009,2.384,1011,3.461,1020,3.008,1033,1.47,1035,2.384,1040,1.47,1053,1.47,1060,2.384,1105,2.384,1132,1.47,1141,3.461,1144,1.47,1151,2.384,1154,3.461,1155,1.47,1156,1.47,1157,1.47,1161,4.856,1163,4.074,1166,1.47,1167,1.47,1175,2.384,1183,1.47,1186,2.384,1196,1.47,1208,1.47,1209,1.47,1210,1.47,1211,1.47,1212,3.804,1213,1.47,1214,1.47,1215,2.384,1216,1.47,1255,3.596,1259,2.384,1267,1.47,1300,3.461,1302,1.47,1311,2.384,1312,2.384,1322,1.297,1357,2.384,1359,1.732,1360,3.544,1361,3.544,1362,1.732,1363,1.732,1364,2.809,1365,1.732,1366,1.732,1367,2.809,1368,1.732,1369,2.809,1370,4.482,1371,1.732,1372,1.732,1373,3.544,1374,1.732,1375,2.809,1376,1.47,1377,1.732,1378,1.732,1379,4.077,1380,1.732,1381,2.809,1382,1.732,1383,2.809,1384,1.732,1385,1.732,1386,1.732,1387,4.482,1388,1.732,1389,1.732,1390,1.732,1391,2.809,1392,1.732,1393,1.732,1394,4.077,1395,2.809,1396,1.732,1397,2.809,1398,1.732,1399,1.732,1400,1.732,1401,1.732,1402,2.809,1403,2.809,1404,6.227,1405,1.732,1406,2.809,1407,3.544,1408,1.732,1409,1.732,1410,4.077,1411,2.809,1412,1.732,1413,6.536,1414,5.833,1415,1.732,1416,1.732,1417,1.732,1418,1.732,1419,1.732,1420,1.732,1421,1.732,1422,2.809,1423,1.732,1424,1.732,1425,1.732,1426,2.809,1427,1.732,1428,1.732,1429,2.809,1430,1.732,1431,1.732,1432,2.809,1433,1.732,1434,1.732,1435,1.732,1436,1.732,1437,3.544,1438,2.809,1439,1.732,1440,1.732,1441,1.732,1442,1.732,1443,1.732,1444,1.47,1445,1.732,1446,1.732,1447,1.732,1448,1.732,1449,1.732,1450,1.732,1451,1.732,1452,1.732,1453,1.732,1454,1.732,1455,1.732,1456,4.482,1457,1.732,1458,1.732,1459,2.809,1460,1.732,1461,1.732,1462,1.732,1463,1.732,1464,1.732,1465,2.809,1466,1.732,1467,2.809,1468,1.732,1469,1.732,1470,2.809,1471,1.732,1472,1.732,1473,1.732,1474,1.732,1475,1.732,1476,1.732,1477,1.732,1478,2.809,1479,1.732,1480,1.732,1481,1.732,1482,1.732,1483,1.732,1484,1.732,1485,1.732,1486,4.077,1487,1.732,1488,3.544,1489,1.732,1490,1.732,1491,1.732,1492,1.732,1493,1.732,1494,4.799,1495,1.732,1496,3.544,1497,1.732,1498,4.482,1499,3.544,1500,2.809,1501,1.732,1502,2.809,1503,4.077,1504,2.809,1505,2.809,1506,1.732,1507,1.732,1508,1.732,1509,1.732,1510,1.732,1511,1.732,1512,1.732,1513,1.732,1514,1.732,1515,3.544,1516,1.732,1517,1.732,1518,3.544,1519,2.809,1520,1.732,1521,1.732,1522,1.732,1523,1.732,1524,2.809,1525,1.732,1526,1.732,1527,1.732,1528,1.732,1529,1.732,1530,1.732,1531,1.732,1532,1.732,1533,1.732,1534,1.732,1535,1.732,1536,2.809,1537,1.732,1538,1.732,1539,2.809,1540,2.809,1541,2.809,1542,1.732,1543,1.732,1544,1.732,1545,1.732,1546,1.732,1547,1.732,1548,1.732,1549,1.732,1550,1.732,1551,1.732,1552,2.809,1553,1.732,1554,1.732,1555,1.732,1556,1.732,1557,1.732,1558,1.732,1559,2.809,1560,1.732,1561,1.732,1562,1.732,1563,2.809,1564,1.732,1565,1.732,1566,1.732,1567,1.732,1568,1.732,1569,1.732,1570,1.732,1571,1.732,1572,1.732,1573,2.809,1574,1.732,1575,1.732,1576,1.732,1577,2.809,1578,1.732,1579,1.732,1580,1.732,1581,1.732,1582,2.809,1583,1.732,1584,1.732,1585,1.732,1586,1.732,1587,1.732,1588,1.732,1589,1.732,1590,2.809,1591,1.732,1592,2.809,1593,2.809,1594,1.732,1595,1.732,1596,1.732,1597,1.732,1598,2.809,1599,1.732,1600,1.732,1601,1.732,1602,1.732,1603,1.732,1604,1.732,1605,1.47,1606,1.732,1607,1.732,1608,1.47,1609,2.809,1610,1.732,1611,1.732,1612,1.732,1613,1.732,1614,2.809,1615,2.809,1616,1.732,1617,1.732,1618,1.732,1619,1.732,1620,1.732,1621,1.732,1622,1.732,1623,1.732,1624,1.732,1625,1.732,1626,1.732,1627,1.732,1628,1.732,1629,1.732,1630,1.732,1631,1.732,1632,1.732,1633,1.732,1634,1.47,1635,1.732,1636,3.544,1637,1.732,1638,1.732,1639,1.732,1640,1.732,1641,1.732]],["title/license.html",[954,2.197,955,2.197,1136,2.197]],["body/license.html",[18,1.487,38,0.02,115,0.02,116,0.02,249,4.034,348,2.925,428,3.561,650,1.888,679,2.016,1045,4.034,1123,4.922,1242,4.034,1243,4.034,1255,3.561,1376,4.034,1444,4.034,1605,4.034,1608,4.034,1642,6.257,1643,4.753,1644,5.798,1645,4.753,1646,4.753,1647,4.753,1648,4.753,1649,4.753,1650,5.798,1651,6.995,1652,4.753,1653,4.753,1654,4.753,1655,6.257,1656,4.753,1657,4.753,1658,4.753,1659,4.753,1660,4.753,1661,4.753,1662,4.753,1663,4.753,1664,4.753,1665,5.798,1666,4.753,1667,4.753,1668,4.753,1669,4.753,1670,4.753,1671,5.798,1672,5.798,1673,4.753,1674,4.753,1675,4.753,1676,4.753,1677,4.753,1678,4.753,1679,4.753,1680,4.753,1681,4.753,1682,4.753,1683,4.753,1684,4.753,1685,4.753,1686,4.753,1687,4.753,1688,4.753,1689,4.753,1690,4.753,1691,4.753,1692,4.753,1693,4.753,1694,4.753,1695,4.753,1696,4.753,1697,4.753,1698,4.753]],["title/modules.html",[851,3.566]],["body/modules.html",[38,0.022,115,0.022,116,0.022,850,3.772,851,4.188,1634,4.744,1699,5.589,1700,5.589]],["title/overview.html",[1701,4.04]],["body/overview.html",[2,1.076,38,0.021,115,0.021,116,0.021,132,3.337,328,4.063,348,3.337,457,4.063,482,4.698,484,3.337,849,5.323,867,4.063,868,4.603,869,4.063,899,3.069,1305,4.063,1322,4.063,1701,4.603,1702,5.423,1703,6.271]],["title/properties.html",[210,2.197,318,1.382]],["body/properties.html",[38,0.023,115,0.022,116,0.022,318,1.829,594,3.426,1136,4.17,1704,5.566,1705,5.566]],["title/miscellaneous/typealiases.html",[1335,1.66,1706,4.205]],["body/miscellaneous/typealiases.html",[21,0.5,38,0.025,40,0.321,115,0.02,116,0.02,296,2.859,803,2.859,806,3.702,809,3.109,810,3.109,811,3.109,812,3.109,813,3.109,814,3.109,815,3.109,816,3.109,817,3.109,818,3.109,819,3.109,820,3.109,821,3.109,822,3.109,823,3.109,824,3.109,825,3.109,826,3.109,827,3.109,828,3.109,829,2.645,830,3.109,831,3.109,832,3.109,1335,2.859,1707,5.052,1708,5.052]],["title/miscellaneous/variables.html",[1335,1.66,1709,3.57]],["body/miscellaneous/variables.html",[6,1.962,8,1.962,21,0.403,35,2.596,36,2.136,38,0.024,40,0.335,68,0.79,78,2.563,110,1.158,115,0.02,116,0.018,125,1.437,200,3.302,316,2.51,317,3.929,319,3.555,320,3.555,334,2.966,340,3.056,352,2.753,353,3.056,356,3.242,357,3.056,358,3.056,359,3.056,360,3.056,361,3.056,362,3.056,363,3.056,364,3.056,365,3.056,366,3.056,367,3.056,368,3.056,369,3.056,370,3.056,371,3.056,372,3.056,373,3.056,374,3.056,375,3.056,376,3.056,377,3.056,378,3.056,379,3.056,380,3.056,381,3.056,382,3.056,383,3.056,384,3.056,385,3.056,386,3.056,387,3.056,388,3.056,389,3.056,390,3.056,391,3.056,392,3.056,393,3.056,394,3.056,395,3.056,396,3.056,397,3.056,398,3.056,399,3.056,400,3.056,401,3.056,402,3.056,403,3.056,404,3.056,405,3.056,406,3.056,407,3.056,408,3.056,409,3.056,410,3.056,411,3.056,412,3.056,413,3.056,414,3.056,415,3.056,416,3.056,417,3.056,418,3.056,419,3.056,420,3.056,510,3.242,511,3.056,568,3.242,569,3.056,570,2.981,575,1.519,576,3.056,577,3.056,579,1.917,580,2.04,589,3.242,590,3.937,591,1.62,592,3.462,593,3.056,594,2.51,595,3.056,596,3.056,597,3.056,598,3.462,599,2.753,600,1.842,601,3.056,602,3.946,603,2.753,604,3.056,605,3.056,606,1.426,607,3.056,608,1.426,609,3.056,610,3.462,611,3.056,612,3.056,613,3.056,614,3.056,615,3.056,616,3.056,1294,3.462,1295,4.471,1335,2.309,1341,5.233,1709,3.462,1710,4.079,1711,4.079,1712,4.079]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":162,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"injectables/UrlHelperService.html":{},"coverage.html":{}}}],["0.1.3",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["0.1.4",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["026dcb3",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["07bb62d",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["0c0a4a7",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["0f03d39",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["0x06ca6351",{"_index":387,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x0fc19dc6",{"_index":375,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x106aa070",{"_index":404,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x12835b01",{"_index":366,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x14292967",{"_index":388,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x19a4c116",{"_index":405,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x1e376c08",{"_index":406,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x20000000",{"_index":476,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["0x240ca1cc",{"_index":376,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x243185be",{"_index":367,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x2748774c",{"_index":407,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x27b70a85",{"_index":389,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x2de92c6f",{"_index":377,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x2e1b2138",{"_index":390,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x34b0bcb5",{"_index":408,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x391c0cb3",{"_index":409,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x3956c25b",{"_index":361,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x428a2f98",{"_index":357,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x4a7484aa",{"_index":378,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x4d2c6dfc",{"_index":391,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x4ed8aa4a",{"_index":410,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x53380d13",{"_index":392,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x550c7dc3",{"_index":368,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x59f111f1",{"_index":362,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x5b9cca4f",{"_index":411,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x5cb0a9dc",{"_index":379,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x650a7354",{"_index":393,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x682e6ff3",{"_index":412,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x71374491",{"_index":358,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x72be5d74",{"_index":369,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x748f82ee",{"_index":413,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x766a0abb",{"_index":394,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x76f988da",{"_index":380,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x78a5636f",{"_index":414,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x80deb1fe",{"_index":370,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x81c2c92e",{"_index":395,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x84c87814",{"_index":415,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x8cc70208",{"_index":416,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x90befffa",{"_index":417,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x923f82a4",{"_index":363,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x92722c85",{"_index":396,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x983e5152",{"_index":381,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x9bdc06a7",{"_index":371,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa2bfe8a1",{"_index":397,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa4506ceb",{"_index":418,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa81a664b",{"_index":398,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa831c66d",{"_index":382,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xab1c5ed5",{"_index":364,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xb00327c8",{"_index":383,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xb5c0fbcf",{"_index":359,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xbef9a3f7",{"_index":419,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xbf597fc7",{"_index":384,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc19bf174",{"_index":372,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc24b8b70",{"_index":399,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc67178f2",{"_index":420,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc6e00bf3",{"_index":385,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc76c51a3",{"_index":400,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd192e819",{"_index":401,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd5a79147",{"_index":386,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd6990624",{"_index":402,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd807aa98",{"_index":365,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xe49b69c1",{"_index":373,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xe9b5dba5",{"_index":360,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xefbe4786",{"_index":374,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xf40e3585",{"_index":403,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xff",{"_index":479,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["1",{"_index":484,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"injectables/UrlHelperService.html":{},"index.html":{},"overview.html":{}}}],["1.3.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["1/31",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":446,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["10.0.0",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["10.x",{"_index":1422,"title":{},"body":{"index.html":{}}}],["100",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["1061",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":454,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["11.1.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["1120",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":1302,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["12.0.0",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["12.x",{"_index":1421,"title":{},"body":{"index.html":{}}}],["13",{"_index":456,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["13.x",{"_index":1420,"title":{},"body":{"index.html":{}}}],["132c624",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1300,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["14.x",{"_index":1419,"title":{},"body":{"index.html":{}}}],["15",{"_index":448,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["15.x",{"_index":1418,"title":{},"body":{"index.html":{}}}],["16",{"_index":452,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["16.x",{"_index":1417,"title":{},"body":{"index.html":{}}}],["169d749",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":444,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["17.0.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["17.x",{"_index":1416,"title":{},"body":{"index.html":{}}}],["18",{"_index":450,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["18.x",{"_index":1415,"title":{},"body":{"index.html":{}}}],["1816e7b",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":445,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["19.0.0",{"_index":1704,"title":{},"body":{"properties.html":{}}}],["19.0.1",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["19.x",{"_index":1412,"title":{},"body":{"index.html":{}}}],["1_0.html#tokenendpoint",{"_index":742,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1_0.html#userinfo",{"_index":748,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1cae011",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":97,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["2.0",{"_index":1526,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":1361,"title":{},"body":{"index.html":{}}}],["2.5.2",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["2.9.2",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["2/oidc",{"_index":1610,"title":{},"body":{"index.html":{}}}],["20",{"_index":1267,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["2017",{"_index":1643,"title":{},"body":{"license.html":{}}}],["2020",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":457,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"overview.html":{}}}],["2204c5a",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":478,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["25",{"_index":455,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{}}}],["256",{"_index":354,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{}}}],["28",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":451,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{}}}],["3.4.1",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["31c6273",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":352,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["38c7c3f",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["3d331f2",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["3f44eca",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":483,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{}}}],["4.3",{"_index":1381,"title":{},"body":{"index.html":{}}}],["4.x",{"_index":1426,"title":{},"body":{"index.html":{}}}],["40f5ae5",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["415e053",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["4202",{"_index":1489,"title":{},"body":{"index.html":{}}}],["4202]/index.html",{"_index":1490,"title":{},"body":{"index.html":{}}}],["4202]/silent",{"_index":1491,"title":{},"body":{"index.html":{}}}],["429ed2c",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["45/54",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["4607d55",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["48",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["4bf8901",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["4def1c1",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":482,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"overview.html":{}}}],["5.x",{"_index":1429,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["51e438a",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["58a8132",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["58c6354",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["59f65d2",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["5c5288c",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":453,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["6.6.7",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":353,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["65c2b95",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["678ff95",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["68238fb",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["687",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":449,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["7.x",{"_index":1425,"title":{},"body":{"index.html":{}}}],["7009",{"_index":1210,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["70fd826",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["71b705c",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["728",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["735",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["741",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["755",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["773",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["77cb37a",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["7a15194",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["7eac8ae",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":481,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["8.0.12",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["8.0.19",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["8.x",{"_index":1424,"title":{},"body":{"index.html":{}}}],["808969225",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["825",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["84d95a7",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["85/176",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["8ab853b",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["8fa99ff",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":595,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1630,"title":{},"body":{"index.html":{}}}],["9.1.0",{"_index":1211,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["9.2",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["9.3.0",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["9.x",{"_index":1423,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["92ee76d",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["93902a5",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["970",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["972",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["9761bad",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["9]{3",{"_index":108,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["9e257d0",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["9e95c73",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["_restorestate",{"_index":544,"title":{},"body":{"classes/Hash.html":{}}}],["_restorestate(from",{"_index":558,"title":{},"body":{"classes/Hash.html":{}}}],["_savestate",{"_index":545,"title":{},"body":{"classes/Hash.html":{}}}],["_savestate(out",{"_index":493,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["a05bd8a",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1608,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["abstraction",{"_index":150,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["abstractvalidationhandler",{"_index":1,"title":{"classes/AbstractValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{}}}],["accept",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":1175,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["access_token",{"_index":63,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["accesstoken",{"_index":75,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["according",{"_index":1208,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["acr_values_supported",{"_index":767,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["action",{"_index":1693,"title":{},"body":{"license.html":{}}}],["active",{"_index":1398,"title":{},"body":{"index.html":{}}}],["actual",{"_index":635,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ad",{"_index":1400,"title":{},"body":{"index.html":{}}}],["add",{"_index":218,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["added",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":621,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["ae26fba",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":61,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alert(1",{"_index":180,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["alg",{"_index":49,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.match(/^.s[0",{"_index":107,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.substr(2",{"_index":114,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithm",{"_index":29,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithms",{"_index":152,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["aliases",{"_index":1707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice/alice",{"_index":1484,"title":{},"body":{"index.html":{}}}],["align",{"_index":1523,"title":{},"body":{"index.html":{}}}],["allocate",{"_index":529,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["allow",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["allowedurls",{"_index":882,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["allows",{"_index":934,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["already",{"_index":13,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["ambient",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["analyzing",{"_index":1253,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1663,"title":{},"body":{"license.html":{}}}],["angular",{"_index":200,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":863,"title":{},"body":{"modules/OAuthModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":248,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["angular/compiler",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":127,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"index.html":{}}}],["angular/elements",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1311,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["any).array(valuetohash",{"_index":173,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["anymore",{"_index":693,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["api",{"_index":1498,"title":{},"body":{"index.html":{}}}],["apis",{"_index":1495,"title":{},"body":{"index.html":{}}}],["app",{"_index":1215,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app/app.component",{"_index":1504,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1503,"title":{},"body":{"index.html":{}}}],["application",{"_index":604,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":613,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1521,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1622,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1696,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":506,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["arraybuffer",{"_index":138,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["associated",{"_index":1652,"title":{},"body":{"license.html":{}}}],["asstring",{"_index":92,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["assumes",{"_index":1477,"title":{},"body":{"index.html":{}}}],["async",{"_index":25,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["at_hash",{"_index":60,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["athash",{"_index":98,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["attacks",{"_index":663,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["auth",{"_index":678,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["auth0",{"_index":1370,"title":{},"body":{"index.html":{}}}],["auth_config",{"_index":1295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcodeflowconfig",{"_index":1530,"title":{},"body":{"index.html":{}}}],["authconfig",{"_index":1259,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["authentication",{"_index":1636,"title":{},"body":{"index.html":{}}}],["authorization_endpoint",{"_index":756,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["authors",{"_index":1686,"title":{},"body":{"license.html":{}}}],["automate",{"_index":1587,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1461,"title":{},"body":{"index.html":{}}}],["available",{"_index":1634,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":661,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["await",{"_index":89,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["awesome",{"_index":1250,"title":{},"body":{"changelog.html":{}}}],["azure",{"_index":1397,"title":{},"body":{"index.html":{}}}],["b",{"_index":160,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{}}}],["b44e19a",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["b486546",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["b64decodeunicode",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["b64decodeunicode(str",{"_index":1343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b999024",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1366,"title":{},"body":{"index.html":{}}}],["base64",{"_index":70,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"dependencies.html":{}}}],["base64urlencode",{"_index":69,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["base64urlencode(leftmosthalf",{"_index":99,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["base64urlencode(str",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["bases",{"_index":1516,"title":{},"body":{"index.html":{}}}],["bbff95b",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["bearer",{"_index":303,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["beeing",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1011,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["beginning",{"_index":593,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["benefit",{"_index":217,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["best",{"_index":669,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["big",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":222,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["bitlenhi",{"_index":475,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["bitlenlo",{"_index":477,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["black",{"_index":223,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["blocked",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["blockers",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["blocksize",{"_index":319,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blog",{"_index":1402,"title":{},"body":{"index.html":{}}}],["bob/bob",{"_index":1483,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":268,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["bootstrap",{"_index":1322,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrapapplication",{"_index":1502,"title":{},"body":{"index.html":{}}}],["bootstrapapplication(app",{"_index":1596,"title":{},"body":{"index.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1505,"title":{},"body":{"index.html":{}}}],["bootstrapping",{"_index":1566,"title":{},"body":{"index.html":{}}}],["box",{"_index":224,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["breaking",{"_index":1614,"title":{},"body":{"index.html":{}}}],["brecht",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1700,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1312,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["browsers",{"_index":1475,"title":{},"body":{"index.html":{}}}],["buffer",{"_index":140,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["buffer.length",{"_index":532,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["bufferlength",{"_index":541,"title":{},"body":{"classes/Hash.html":{}}}],["bufpos",{"_index":531,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["bug",{"_index":960,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bugfixes",{"_index":1440,"title":{},"body":{"index.html":{}}}],["build",{"_index":993,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bump",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["bundle",{"_index":615,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bundling",{"_index":1386,"title":{},"body":{"index.html":{}}}],["button",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["bytearray",{"_index":143,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["bytearray].map(value",{"_index":187,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["byteshashed",{"_index":472,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["c",{"_index":428,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"license.html":{}}}],["c2b2753",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["c799ead",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["c9a2c55",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["ca435c0",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["cae715e",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["calchash",{"_index":20,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calchash(valuetohash",{"_index":27,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["calculates",{"_index":32,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["call",{"_index":205,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{}}}],["called",{"_index":676,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["calling",{"_index":1586,"title":{},"body":{"index.html":{}}}],["calls",{"_index":877,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"changelog.html":{}}}],["cand",{"_index":179,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["candhash",{"_index":171,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["carefully",{"_index":592,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{}}}],["carlier",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":1592,"title":{},"body":{"index.html":{}}}],["catch",{"_index":1601,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":251,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["catcherror((err",{"_index":289,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["change",{"_index":1615,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":956,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["charactes",{"_index":935,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["charge",{"_index":1647,"title":{},"body":{"license.html":{}}}],["check",{"_index":660,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["check_session_iframe",{"_index":761,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["checks",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["checkurl(moduleconfig",{"_index":266,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["chore",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["chore(release",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1689,"title":{},"body":{"license.html":{}}}],["claim_types_supported",{"_index":779,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims",{"_index":731,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["claims_parameter_supported",{"_index":781,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims_supported",{"_index":780,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claimsathash",{"_index":100,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"overview.html":{}}}],["clean",{"_index":325,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["clear",{"_index":689,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["clears",{"_index":1570,"title":{},"body":{"index.html":{}}}],["click",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":717,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["clientid",{"_index":1536,"title":{},"body":{"index.html":{}}}],["clientids",{"_index":1485,"title":{},"body":{"index.html":{}}}],["clock",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["clockskew",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":608,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code_challenge",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["code_error",{"_index":817,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["codeflow",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":526,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["commands",{"_index":1454,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":1385,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":862,"title":{},"body":{"modules/OAuthModule.html":{}}}],["community",{"_index":1375,"title":{},"body":{"index.html":{}}}],["compat",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["compatibility",{"_index":1514,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":703,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["compodoc/compodoc",{"_index":1455,"title":{},"body":{"index.html":{}}}],["components",{"_index":1496,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1670,"title":{},"body":{"license.html":{}}}],["config",{"_index":859,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["configuration",{"_index":1467,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1528,"title":{},"body":{"index.html":{}}}],["configured",{"_index":1060,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["connect",{"_index":741,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["connection",{"_index":1697,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1626,"title":{},"body":{"index.html":{}}}],["console",{"_index":704,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["console.debug('hash",{"_index":177,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["console.error('actual",{"_index":103,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('exptected",{"_index":102,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error(err",{"_index":618,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["const",{"_index":85,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["constants",{"_index":355,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["constructor",{"_index":230,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/JwksValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{}}}],["constructor(key",{"_index":330,"title":{},"body":{"classes/HMAC.html":{}}}],["constructor(oauthservice",{"_index":231,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["constructor(readonly",{"_index":833,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["constructor(type",{"_index":805,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["contain",{"_index":1437,"title":{},"body":{"index.html":{}}}],["context",{"_index":208,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["contract",{"_index":1694,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1448,"title":{},"body":{"index.html":{}}}],["contributer",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["contributers",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["contributions",{"_index":1442,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":1641,"title":{},"body":{"index.html":{}}}],["controls",{"_index":694,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["convenience",{"_index":1559,"title":{},"body":{"index.html":{}}}],["cookies",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1665,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1650,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1642,"title":{},"body":{"license.html":{}}}],["core",{"_index":278,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["correctly",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["corrupted",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["counter",{"_index":499,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["counter[0",{"_index":509,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["counterparts",{"_index":1624,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1254,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":209,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["created",{"_index":1408,"title":{},"body":{"index.html":{}}}],["createdefaultlogger",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdefaultstorage",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["credits",{"_index":1362,"title":{},"body":{"index.html":{}}}],["critical",{"_index":1439,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":151,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["ctr[1",{"_index":534,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["ctr[2",{"_index":535,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["ctr[3",{"_index":536,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["current",{"_index":1524,"title":{},"body":{"index.html":{}}}],["currently",{"_index":216,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["cust",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":632,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{}}}],["customhashfragment",{"_index":624,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["customparameters",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["customredirecturi",{"_index":625,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["customurlvalidation",{"_index":883,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["cycle",{"_index":1433,"title":{},"body":{"index.html":{}}}],["d",{"_index":159,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"changelog.html":{}}}],["da16494",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1690,"title":{},"body":{"license.html":{}}}],["daniel",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":167,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{}}}],["data.length",{"_index":566,"title":{},"body":{"classes/Hash.html":{}}}],["data[datapos",{"_index":460,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["datalength",{"_index":461,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["datapos",{"_index":465,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["date",{"_index":123,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["date.now",{"_index":130,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["datetimeprovider",{"_index":117,"title":{"classes/DateTimeProvider.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"coverage.html":{}}}],["datetimeprovider:10",{"_index":905,"title":{},"body":{"injectables/SystemDateTimeProvider.html":{}}}],["datetimeprovider:14",{"_index":904,"title":{},"body":{"injectables/SystemDateTimeProvider.html":{}}}],["deal",{"_index":1654,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1698,"title":{},"body":{"license.html":{}}}],["debug",{"_index":840,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["debug(message",{"_index":708,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["declarations",{"_index":867,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{}}}],["decodekey",{"_index":938,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodekey(k",{"_index":942,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(hash",{"_index":916,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(k",{"_index":952,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(v",{"_index":953,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeutf8",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decodeutf8(s",{"_index":155,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"miscellaneous/functions.html":{}}}],["decodevalue",{"_index":939,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue(v",{"_index":944,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["default",{"_index":334,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulthashhandler",{"_index":131,"title":{"injectables/DefaultHashHandler.html":{}},"body":{"injectables/DefaultHashHandler.html":{},"coverage.html":{}}}],["defaultoauthinterceptor",{"_index":195,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultoauthinterceptor(request",{"_index":1348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["defines",{"_index":672,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["demand",{"_index":1441,"title":{},"body":{"index.html":{}}}],["demands",{"_index":1538,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1155,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dep",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["dependancy",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":1305,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":606,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["depending",{"_index":1561,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":199,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["destroy",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["detects",{"_index":677,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["digest",{"_index":326,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["digestlength",{"_index":320,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directly",{"_index":1583,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1399,"title":{},"body":{"index.html":{}}}],["disable",{"_index":658,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["disableathashcheck",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["disablenoncecheck",{"_index":626,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["disableoauth2statecheck",{"_index":627,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["discovery",{"_index":752,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["discovery_document_load_error",{"_index":812,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_loaded",{"_index":809,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_validation_error",{"_index":813,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":1578,"title":{},"body":{"index.html":{}}}],["display_values_supported",{"_index":778,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["displayed",{"_index":692,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["distribute",{"_index":1661,"title":{},"body":{"license.html":{}}}],["dklen",{"_index":1356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["docs",{"_index":1163,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docs(readme",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":753,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["documentation",{"_index":1255,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation/refreshing",{"_index":1599,"title":{},"body":{"index.html":{}}}],["documentation/using",{"_index":1612,"title":{},"body":{"index.html":{}}}],["documented",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":674,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["don't",{"_index":211,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{}}}],["draft",{"_index":1525,"title":{},"body":{"index.html":{}}}],["dummy",{"_index":571,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["dummyclientsecret",{"_index":1547,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":182,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"changelog.html":{}}}],["e.type",{"_index":295,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["e2599e0",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["e89aa6d",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1436,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1466,"title":{},"body":{"index.html":{}}}],["elements",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":1556,"title":{},"body":{"index.html":{}}}],["encode",{"_index":1631,"title":{},"body":{"index.html":{}}}],["encodekey",{"_index":940,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey(k",{"_index":946,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encoder",{"_index":163,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"dependencies.html":{}}}],["encoder.encode(valuetohash",{"_index":168,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["encodeuricomponent",{"_index":1621,"title":{},"body":{"index.html":{}}}],["encodeuricomponent(k",{"_index":950,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(v",{"_index":951,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeutf8",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encodeutf8(arr",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodeutf8(fsha256(decodeutf8(valuetohash",{"_index":172,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["encodevalue",{"_index":941,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue(v",{"_index":948,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["end",{"_index":1406,"title":{},"body":{"index.html":{}}}],["end_session_endpoint",{"_index":762,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["endpoint",{"_index":739,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["enforce",{"_index":1543,"title":{},"body":{"index.html":{}}}],["enhancements",{"_index":1446,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":525,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["enters",{"_index":1460,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1380,"title":{},"body":{"index.html":{}}}],["environmentproviders",{"_index":1358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["environments",{"_index":667,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["erazerbrecht",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":589,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":263,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"coverage.html":{}}}],["error('algorithm",{"_index":111,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["error(message",{"_index":713,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["errorhandler",{"_index":233,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["errorhandler.handleerror(err",{"_index":290,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["escapedkey",{"_index":924,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["escapedvalue",{"_index":925,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["esm",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":1518,"title":{},"body":{"index.html":{}}}],["event",{"_index":1045,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":682,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["eventtype",{"_index":806,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":1404,"title":{},"body":{"index.html":{}}}],["examples",{"_index":1476,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1565,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1515,"title":{},"body":{"index.html":{}}}],["exists",{"_index":497,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["expanding",{"_index":523,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["expires",{"_index":1464,"title":{},"body":{"index.html":{}}}],["expires_in",{"_index":745,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["explicit",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":72,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["exports",{"_index":868,"title":{},"body":{"modules/OAuthModule.html":{},"overview.html":{}}}],["express",{"_index":1677,"title":{},"body":{"license.html":{}}}],["extends",{"_index":129,"title":{},"body":{"classes/DateTimeProvider.html":{},"classes/JwksValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["extensions",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":518,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["extracted",{"_index":524,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["extraction",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":429,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["f30098d",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["f42f943",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["f5bd96c",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":203,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["factory",{"_index":144,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["false",{"_index":553,"title":{},"body":{"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["fast",{"_index":148,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"dependencies.html":{}}}],["fb3afe4",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["feat(oauth",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":957,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":1443,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1567,"title":{},"body":{"index.html":{}}}],["ff7d1d9",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["fhash",{"_index":169,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["field",{"_index":50,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1653,"title":{},"body":{"license.html":{}}}],["fillbuffer",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fillbuffer(buffer",{"_index":1349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filled",{"_index":512,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["filter",{"_index":252,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter((e",{"_index":294,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["final",{"_index":488,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finalized",{"_index":469,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finalizes",{"_index":466,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["fine",{"_index":1604,"title":{},"body":{"index.html":{}}}],["finish",{"_index":327,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finish(out",{"_index":346,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finished",{"_index":542,"title":{},"body":{"classes/Hash.html":{}}}],["first",{"_index":1549,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1682,"title":{},"body":{"license.html":{}}}],["fix",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["fix(lib",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":961,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":664,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["flow",{"_index":600,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["flow.html",{"_index":1613,"title":{},"body":{"index.html":{}}}],["flow.md",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["flows",{"_index":641,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["focusing",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1450,"title":{},"body":{"index.html":{}}}],["followed",{"_index":645,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["following",{"_index":650,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"license.html":{}}}],["force",{"_index":226,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["form",{"_index":1577,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":855,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{}}}],["forroot(config",{"_index":856,"title":{},"body":{"modules/OAuthModule.html":{}}}],["forwards",{"_index":1572,"title":{},"body":{"index.html":{}}}],["foundation",{"_index":1527,"title":{},"body":{"index.html":{}}}],["four",{"_index":1550,"title":{},"body":{"index.html":{}}}],["fragment",{"_index":633,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["free",{"_index":1444,"title":{},"body":{"index.html":{},"license.html":{}}}],["fsha256",{"_index":147,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["fsha256(valuetohash",{"_index":170,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["function",{"_index":154,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":1336,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1668,"title":{},"body":{"license.html":{}}}],["further",{"_index":1470,"title":{},"body":{"index.html":{}}}],["g",{"_index":430,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["general",{"_index":1540,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1453,"title":{},"body":{"index.html":{}}}],["gethashfragmentparams",{"_index":909,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["gethashfragmentparams(customhashfragment",{"_index":911,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["getitem",{"_index":785,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["getitem(key",{"_index":723,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["gets",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":954,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github.com/manfredsteyer/angular",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1506,"title":{},"body":{"index.html":{}}}],["grant",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["grant_types_supported",{"_index":769,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["granted",{"_index":1646,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1699,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["guards",{"_index":1378,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1144,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["h",{"_index":431,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["handle",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":886,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handleerror(err",{"_index":887,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handler",{"_index":264,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{}}}],["handler(request",{"_index":285,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["handler(request).pipe",{"_index":288,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["handler.ts",{"_index":8,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handler.ts:11",{"_index":798,"title":{},"body":{"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{}}}],["handler.ts:12",{"_index":567,"title":{},"body":{"classes/HashHandler.html":{}}}],["handler.ts:20",{"_index":931,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:25",{"_index":583,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:27",{"_index":930,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:31",{"_index":136,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:41",{"_index":66,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:46",{"_index":58,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:5",{"_index":894,"title":{},"body":{"classes/OAuthResourceServerErrorHandler.html":{}}}],["handler.ts:50",{"_index":142,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:58",{"_index":139,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:71",{"_index":47,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:8",{"_index":799,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:88",{"_index":31,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handlers",{"_index":80,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hash",{"_index":33,"title":{"classes/Hash.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hash().update(key).finish(pad).clean",{"_index":495,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hash(data",{"_index":1350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash.indexof",{"_index":917,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(1",{"_index":920,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(questionmarkposition",{"_index":919,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hashalg",{"_index":86,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hasharray",{"_index":165,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hashblocks",{"_index":421,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashblocks(this.temp",{"_index":462,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hashblocks(w",{"_index":1351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashhandler",{"_index":153,"title":{"classes/HashHandler.html":{}},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"coverage.html":{}}}],["hashing",{"_index":1363,"title":{},"body":{"index.html":{}}}],["hashlocationstrategy",{"_index":1384,"title":{},"body":{"index.html":{}}}],["hashstrategy",{"_index":1607,"title":{},"body":{"index.html":{}}}],["hashstring",{"_index":174,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hasvalid[access|id]token",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":55,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["headers",{"_index":304,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["helper",{"_index":71,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["helper.service.ts",{"_index":908,"title":{},"body":{"injectables/UrlHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:25",{"_index":914,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:5",{"_index":912,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.ts",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hence",{"_index":1457,"title":{},"body":{"index.html":{}}}],["here",{"_index":1396,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1645,"title":{},"body":{"license.html":{}}}],["hexcode",{"_index":188,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexcode.padstart(2",{"_index":191,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexcodes",{"_index":186,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexcodes.join",{"_index":192,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexstring(buffer",{"_index":185,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hkdf",{"_index":514,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hkdf(key",{"_index":1352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hkdfsalt",{"_index":510,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hmac",{"_index":315,"title":{"classes/HMAC.html":{}},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hmac(key",{"_index":1353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hmac(okm",{"_index":528,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac(salt",{"_index":521,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.finish(buffer",{"_index":503,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.update(buffer",{"_index":496,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.update(counter",{"_index":500,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.update(info",{"_index":498,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac_",{"_index":527,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["holders",{"_index":1687,"title":{},"body":{"license.html":{}}}],["homecomponent",{"_index":1520,"title":{},"body":{"index.html":{}}}],["hook",{"_index":699,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["hooked",{"_index":81,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["http://localhost:4200",{"_index":1480,"title":{},"body":{"index.html":{}}}],["http://openid.net/specs/openid",{"_index":740,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["http://www.angular.at/api",{"_index":1593,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":214,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{}}}],["httpclientmodule",{"_index":212,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":245,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["httphandler",{"_index":241,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["httphandlerfn",{"_index":246,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["httpinterceptor",{"_index":247,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["httpmodule",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["httpparametercodec",{"_index":937,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["httprequest",{"_index":239,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["httpresponse",{"_index":888,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["https://github.com/jeroenheijmans/sample",{"_index":1377,"title":{},"body":{"index.html":{}}}],["https://github.com/manfredsteyer/angular",{"_index":1040,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["https://idsvr4.azurewebsites.net",{"_index":1531,"title":{},"body":{"index.html":{}}}],["https://manfredsteyer.github.io/angular",{"_index":1373,"title":{},"body":{"index.html":{}}}],["id",{"_index":732,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["id_token",{"_index":51,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["id_token's",{"_index":53,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["id_token_encryption_alg_values_supported",{"_index":775,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_encryption_enc_values_supported",{"_index":776,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_signing_alg_values_supported",{"_index":774,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idclaims",{"_index":733,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ideas",{"_index":1445,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1212,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["identityserver",{"_index":1390,"title":{},"body":{"index.html":{}}}],["idsvr",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["idtoken",{"_index":74,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaims",{"_index":77,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaimsjson",{"_index":735,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenexpiresat",{"_index":737,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenheader",{"_index":76,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenheaderjson",{"_index":736,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ie",{"_index":1183,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["iframes",{"_index":639,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ignore",{"_index":265,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["implementation",{"_index":11,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["implementations",{"_index":721,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["implementing",{"_index":597,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["implicit",{"_index":599,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["implied",{"_index":1678,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["important",{"_index":1551,"title":{},"body":{"index.html":{}}}],["importprovidersfrom",{"_index":1508,"title":{},"body":{"index.html":{}}}],["importprovidersfrom(httpclientmodule",{"_index":1509,"title":{},"body":{"index.html":{}}}],["imports",{"_index":866,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{}}}],["included",{"_index":679,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"license.html":{}}}],["includes",{"_index":673,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["including",{"_index":1123,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["increment",{"_index":504,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1533,"title":{},"body":{"index.html":{}}}],["indexable",{"_index":928,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["inferhashalgorithm",{"_index":24,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["inferhashalgorithm(jwtheader",{"_index":45,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["infers",{"_index":48,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{}}}],["info(message",{"_index":710,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["information",{"_index":1411,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":585,"title":{},"body":{"classes/JwksValidationHandler.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["initialize",{"_index":522,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["initializes",{"_index":1560,"title":{},"body":{"index.html":{}}}],["initimplicitflow",{"_index":1623,"title":{},"body":{"index.html":{}}}],["initloginflow",{"_index":1132,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["initloginflowinpopup",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":204,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["inject(oauthmoduleconfig",{"_index":309,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["inject(oauthresourceservererrorhandler",{"_index":308,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["inject(oauthservice",{"_index":307,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["injectable",{"_index":126,"title":{"injectables/DefaultHashHandler.html":{},"injectables/MemoryStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"injectables/MemoryStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"overview.html":{}}}],["injection",{"_index":207,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["injectiontoken",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["injectiontoken('auth_config",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["inner",{"_index":321,"title":{},"body":{"classes/HMAC.html":{}}}],["inside",{"_index":279,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{}}}],["install",{"_index":601,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["installing",{"_index":1492,"title":{},"body":{"index.html":{}}}],["instance",{"_index":502,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["instead",{"_index":228,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["int32array",{"_index":423,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["int32array(64",{"_index":556,"title":{},"body":{"classes/Hash.html":{}}}],["int32array(8",{"_index":554,"title":{},"body":{"classes/Hash.html":{}}}],["intercept",{"_index":229,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["intercept(req",{"_index":238,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["intercepted",{"_index":878,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["interceptfn",{"_index":280,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["interceptfn(oauthservice",{"_index":310,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["interceptor",{"_index":194,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["interceptors",{"_index":196,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["interface",{"_index":73,"title":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":899,"title":{},"body":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"overview.html":{}}}],["internal",{"_index":491,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["internally",{"_index":655,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["introduce",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":1497,"title":{},"body":{"index.html":{}}}],["invalid_nonce_in_state",{"_index":811,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["ionic",{"_index":1639,"title":{},"body":{"index.html":{}}}],["isn't",{"_index":793,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["issue",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":755,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["issues",{"_index":1156,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["istate",{"_index":322,"title":{},"body":{"classes/HMAC.html":{}}}],["iterations",{"_index":1355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ivy",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["j",{"_index":433,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["java",{"_index":1369,"title":{},"body":{"index.html":{}}}],["jeroenheijmans",{"_index":1249,"title":{},"body":{"changelog.html":{}}}],["jie",{"_index":1240,"title":{},"body":{"changelog.html":{}}}],["job",{"_index":1251,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":145,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"changelog.html":{},"dependencies.html":{}}}],["jsrsasign",{"_index":1002,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["jwks",{"_index":78,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jwks';instead",{"_index":1619,"title":{},"body":{"index.html":{}}}],["jwks_load_error",{"_index":810,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["jwks_uri",{"_index":763,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["jwksvalidationhandler",{"_index":568,"title":{"classes/JwksValidationHandler.html":{}},"body":{"classes/JwksValidationHandler.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["jwtheader",{"_index":52,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["jwtheader['alg",{"_index":106,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["k",{"_index":356,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":333,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{}}}],["keycloak",{"_index":1367,"title":{},"body":{"index.html":{}}}],["kind",{"_index":1676,"title":{},"body":{"license.html":{}}}],["labat",{"_index":1248,"title":{},"body":{"changelog.html":{}}}],["labels",{"_index":1447,"title":{},"body":{"index.html":{}}}],["laing",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":474,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["leftmosthalf",{"_index":94,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["legend",{"_index":1702,"title":{},"body":{"overview.html":{}}}],["len",{"_index":427,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["length",{"_index":516,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["liability",{"_index":1691,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1688,"title":{},"body":{"license.html":{}}}],["lib",{"_index":690,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["library",{"_index":577,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":1136,"title":{"license.html":{}},"body":{"changelog.html":{},"properties.html":{}}}],["limitation",{"_index":1657,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1679,"title":{},"body":{"license.html":{}}}],["lin",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["linjie997",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":1405,"title":{},"body":{"index.html":{}}}],["links",{"_index":1409,"title":{},"body":{"index.html":{}}}],["listen",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["lite",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":221,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["loaddiscoverydocumentandlogin",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["loadkeys",{"_index":79,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["localhost:[4200",{"_index":1488,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":719,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["location",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["location.hash",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":841,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["log(message",{"_index":711,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logging",{"_index":702,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["logic",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":1020,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loginhint",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["loginoptions",{"_index":619,"title":{"classes/LoginOptions.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["logout",{"_index":829,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["look",{"_index":1394,"title":{},"body":{"index.html":{}}}],["looks",{"_index":220,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["lookup",{"_index":1611,"title":{},"body":{"index.html":{}}}],["lower",{"_index":1591,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":1499,"title":{},"body":{"index.html":{}}}],["major",{"_index":1435,"title":{},"body":{"index.html":{}}}],["make",{"_index":17,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["mandatory",{"_index":1625,"title":{},"body":{"index.html":{}}}],["manfred",{"_index":1242,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["manner",{"_index":642,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["manually",{"_index":1574,"title":{},"body":{"index.html":{}}}],["map",{"_index":253,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["mark",{"_index":648,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["matching",{"_index":116,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max/geheim",{"_index":1482,"title":{},"body":{"index.html":{}}}],["mccloghry",{"_index":1245,"title":{},"body":{"changelog.html":{}}}],["memorystorage",{"_index":726,"title":{"injectables/MemoryStorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["merchantability",{"_index":1681,"title":{},"body":{"license.html":{}}}],["merge",{"_index":249,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"license.html":{}}}],["mergemap",{"_index":254,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["mergemap((token",{"_index":302,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["message",{"_index":680,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["method",{"_index":15,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["mind",{"_index":1542,"title":{},"body":{"index.html":{}}}],["minutes",{"_index":1637,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1335,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1705,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["moderating",{"_index":1252,"title":{},"body":{"changelog.html":{}}}],["modern",{"_index":1474,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1659,"title":{},"body":{"license.html":{}}}],["module",{"_index":849,"title":{"modules/OAuthModule.html":{}},"body":{"overview.html":{}}}],["module.config",{"_index":259,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{}}}],["module.config.ts",{"_index":872,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"coverage.html":{}}}],["module.config.ts:11",{"_index":891,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:12",{"_index":893,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:13",{"_index":892,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:2",{"_index":875,"title":{},"body":{"classes/OAuthModuleConfig.html":{}}}],["moduleconfig",{"_index":235,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moduleconfig.resourceserver",{"_index":284,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moduleconfig.resourceserver.allowedurls",{"_index":271,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moduleconfig.resourceserver.allowedurls.find((u",{"_index":272,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moduleconfig.resourceserver.customurlvalidation",{"_index":269,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moduleconfig.resourceserver.customurlvalidation(url",{"_index":270,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moduleconfig.resourceserver.sendaccesstoken",{"_index":287,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["modules",{"_index":851,"title":{"modules.html":{}},"body":{"modules/OAuthModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":860,"title":{},"body":{"modules/OAuthModule.html":{}}}],["moos",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":1410,"title":{},"body":{"index.html":{}}}],["moreover",{"_index":225,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["move",{"_index":277,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["moved",{"_index":576,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":1430,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["multiplying",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":39,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{}}}],["namely",{"_index":578,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["need",{"_index":596,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":607,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["net",{"_index":1391,"title":{},"body":{"index.html":{}}}],["net/.net",{"_index":1365,"title":{},"body":{"index.html":{}}}],["never",{"_index":665,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["new",{"_index":110,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newer",{"_index":1428,"title":{},"body":{"index.html":{}}}],["next",{"_index":240,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/functions.html":{}}}],["next.handle",{"_index":282,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["ngmodule",{"_index":861,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{}}}],["ngmodules",{"_index":1517,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["nonce",{"_index":659,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["noninfringement",{"_index":1685,"title":{},"body":{"license.html":{}}}],["normally",{"_index":687,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["notable",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":605,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":795,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["notice",{"_index":1671,"title":{},"body":{"license.html":{}}}],["now",{"_index":121,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"index.html":{}}}],["nowadays",{"_index":609,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":602,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":588,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{}}}],["nullvalidationhandler",{"_index":582,"title":{"classes/NullValidationHandler.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nullvalidationhandler:11",{"_index":586,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["nullvalidationhandler:8",{"_index":587,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["number",{"_index":125,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["oauth",{"_index":258,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{}}}],["oauth.interceptor.ts",{"_index":198,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["oauth.interceptor.ts:122",{"_index":237,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:129",{"_index":242,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth2",{"_index":579,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["oauth2/oidc",{"_index":598,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{}}}],["oauthclient",{"_index":1501,"title":{},"body":{"index.html":{}}}],["oautherrorevent",{"_index":802,"title":{"classes/OAuthErrorEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"coverage.html":{}}}],["oauthevent",{"_index":804,"title":{"classes/OAuthEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"coverage.html":{}}}],["oauthinfoevent",{"_index":837,"title":{"classes/OAuthInfoEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"coverage.html":{}}}],["oauthlogger",{"_index":707,"title":{"classes/OAuthLogger.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["oauthmodule",{"_index":850,"title":{"modules/OAuthModule.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"modules.html":{}}}],["oauthmodule.forroot",{"_index":1519,"title":{},"body":{"index.html":{}}}],["oauthmoduleconfig",{"_index":236,"title":{"classes/OAuthModuleConfig.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["oauthnoopresourceservererrorhandler",{"_index":884,"title":{"classes/OAuthNoopResourceServerErrorHandler.html":{}},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"coverage.html":{}}}],["oauthresourceserverconfig",{"_index":874,"title":{"classes/OAuthResourceServerConfig.html":{}},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"coverage.html":{}}}],["oauthresourceservererrorhandler",{"_index":234,"title":{"classes/OAuthResourceServerErrorHandler.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"coverage.html":{}}}],["oauthservice",{"_index":232,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["oauthservice.events.pipe",{"_index":293,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauthservice.getaccesstoken",{"_index":299,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauthstorage",{"_index":722,"title":{"classes/OAuthStorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["oauthsuccessevent",{"_index":834,"title":{"classes/OAuthSuccessEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"coverage.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["observable",{"_index":244,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["obtaining",{"_index":1649,"title":{},"body":{"license.html":{}}}],["of(null",{"_index":298,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["of(oauthservice.getaccesstoken()).pipe(filter((token",{"_index":291,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["officially",{"_index":1393,"title":{},"body":{"index.html":{}}}],["offline_access",{"_index":1552,"title":{},"body":{"index.html":{}}}],["oidc",{"_index":580,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["oidc';please",{"_index":1620,"title":{},"body":{"index.html":{}}}],["oidc.module.ts",{"_index":853,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidc.module.ts:14",{"_index":858,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidc/docs",{"_index":1374,"title":{},"body":{"index.html":{}}}],["oidc/docs/additional",{"_index":1598,"title":{},"body":{"index.html":{}}}],["oidc/issues/728#issuecomment",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/1020",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/919",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/935",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/936",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/938",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/965",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["oidcdiscoverydoc",{"_index":754,"title":{"interfaces/OidcDiscoveryDoc.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["okm",{"_index":520,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["okta",{"_index":1407,"title":{},"body":{"index.html":{}}}],["older",{"_index":1414,"title":{},"body":{"index.html":{}}}],["one",{"_index":575,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["online",{"_index":1635,"title":{},"body":{"index.html":{}}}],["onloginerror",{"_index":628,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ontokenreceived",{"_index":629,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["opened",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["openid",{"_index":751,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["opens",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":492,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["optimizer",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1053,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["optional",{"_index":41,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":709,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["options",{"_index":622,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["orig",{"_index":178,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["ostate",{"_index":323,"title":{},"body":{"classes/HMAC.html":{}}}],["otherwise",{"_index":1605,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":348,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out[i",{"_index":486,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["outer",{"_index":324,"title":{},"body":{"classes/HMAC.html":{}}}],["output",{"_index":501,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{}}}],["outside",{"_index":206,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"changelog.html":{}}}],["override",{"_index":19,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["overview",{"_index":1701,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":425,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["package",{"_index":210,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["package.json",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["paddedhexcode",{"_index":190,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["padlength",{"_index":485,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["page",{"_index":612,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pair",{"_index":922,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pairs",{"_index":926,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["param",{"_index":105,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parameter",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":64,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["params.idtokenclaims['at_hash'].replace(/=/g",{"_index":101,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parsed",{"_index":54,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parsedidtoken",{"_index":734,"title":{"interfaces/ParsedIdToken.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["parsequerystring",{"_index":910,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["parsequerystring(querystring",{"_index":913,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["particular",{"_index":1683,"title":{},"body":{"license.html":{}}}],["pass",{"_index":638,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["passed",{"_index":34,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["passing",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["password",{"_index":1357,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["passwords",{"_index":936,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["path",{"_index":1603,"title":{},"body":{"index.html":{}}}],["pathlocationstrategy",{"_index":1383,"title":{},"body":{"index.html":{}}}],["pbkdf2",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["pbkdf2(password",{"_index":1354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permission",{"_index":1644,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1548,"title":{},"body":{"index.html":{}}}],["permit",{"_index":1666,"title":{},"body":{"license.html":{}}}],["person",{"_index":1648,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1667,"title":{},"body":{"license.html":{}}}],["phil",{"_index":1244,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":300,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pkce",{"_index":1456,"title":{},"body":{"index.html":{}}}],["place",{"_index":1512,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1434,"title":{},"body":{"index.html":{}}}],["please",{"_index":590,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pls",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["plus",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["pmccloghrylaing",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["popperjs/core",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":640,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["popup_blocked",{"_index":831,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["popup_closed",{"_index":830,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["portions",{"_index":1674,"title":{},"body":{"license.html":{}}}],["pos",{"_index":426,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["post",{"_index":1403,"title":{},"body":{"index.html":{}}}],["postlogoutredirecturi",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":670,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["practices",{"_index":1544,"title":{},"body":{"index.html":{}}}],["predefined",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["prefixes",{"_index":1590,"title":{},"body":{"index.html":{}}}],["prepared",{"_index":1359,"title":{},"body":{"index.html":{}}}],["present",{"_index":649,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["prevent",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["preventclearhashafterlogin",{"_index":630,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prf.finish(u",{"_index":540,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["prf.reset",{"_index":537,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["prf.update(ctr",{"_index":539,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["prf.update(salt",{"_index":538,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["private",{"_index":311,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prod",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":666,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["profile",{"_index":1555,"title":{},"body":{"index.html":{}}}],["project",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["projects/.../base64",{"_index":1337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":1340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../events.ts",{"_index":1708,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../factories.ts",{"_index":1338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fast",{"_index":1341,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../hash",{"_index":1339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../jwks",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../provider.ts",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../tokens.ts",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/angular",{"_index":852,"title":{},"body":{"modules/OAuthModule.html":{}}}],["projects/lib/src/auth.config.ts",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["projects/lib/src/base64",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/lib/src/date",{"_index":118,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"coverage.html":{}}}],["projects/lib/src/encoder.ts",{"_index":933,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"coverage.html":{}}}],["projects/lib/src/encoder.ts:10",{"_index":949,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:14",{"_index":943,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:18",{"_index":945,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:6",{"_index":947,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/events.ts",{"_index":803,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/events.ts:28",{"_index":838,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:32",{"_index":898,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:38",{"_index":839,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:44",{"_index":808,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/factories.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/lib/src/interceptors/default",{"_index":197,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/lib/src/interceptors/resource",{"_index":885,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"coverage.html":{}}}],["projects/lib/src/oauth",{"_index":871,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"coverage.html":{}}}],["projects/lib/src/provider.ts",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/lib/src/token",{"_index":6,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/tokens.ts",{"_index":1294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/types.ts",{"_index":620,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["projects/lib/src/types.ts:100",{"_index":897,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:105",{"_index":791,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:107",{"_index":788,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:111",{"_index":789,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:115",{"_index":790,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:125",{"_index":902,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:126",{"_index":900,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:127",{"_index":901,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:128",{"_index":903,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:13",{"_index":683,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:162",{"_index":929,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:20",{"_index":698,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:28",{"_index":675,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:40",{"_index":631,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:50",{"_index":668,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:59",{"_index":657,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:67",{"_index":686,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:74",{"_index":651,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:84",{"_index":843,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:85",{"_index":846,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:86",{"_index":847,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:87",{"_index":848,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:88",{"_index":845,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:98",{"_index":895,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:99",{"_index":896,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/url",{"_index":907,"title":{},"body":{"injectables/UrlHelperService.html":{},"coverage.html":{}}}],["promise",{"_index":44,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["promise.resolve(null",{"_index":800,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["promise.resolve(true",{"_index":801,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["properly",{"_index":508,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["properties",{"_index":318,"title":{"properties.html":{}},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"properties.html":{}}}],["property",{"_index":681,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["protected",{"_index":23,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["provide",{"_index":213,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["provided",{"_index":1376,"title":{},"body":{"index.html":{},"license.html":{}}}],["providehttpclient",{"_index":215,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{}}}],["providehttpclient(withinterceptorfromdi",{"_index":219,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["providehttpclient(withinterceptors([defaultoauthinterceptor",{"_index":1597,"title":{},"body":{"index.html":{}}}],["providehttpclientwithdefaultoauthinterceptor",{"_index":1595,"title":{},"body":{"index.html":{}}}],["provideoauthclient",{"_index":864,"title":{},"body":{"modules/OAuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provideoauthclient(config",{"_index":870,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["provider",{"_index":865,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{}}}],["provider.ts",{"_index":120,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"coverage.html":{}}}],["provider.ts:4",{"_index":124,"title":{},"body":{"classes/DateTimeProvider.html":{}}}],["provider.ts:5",{"_index":122,"title":{},"body":{"classes/DateTimeProvider.html":{}}}],["providers",{"_index":869,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{}}}],["prs",{"_index":1438,"title":{},"body":{"index.html":{}}}],["public",{"_index":84,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["publish",{"_index":1660,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["purpose",{"_index":1684,"title":{},"body":{"license.html":{}}}],["puts",{"_index":468,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["pwa",{"_index":1638,"title":{},"body":{"index.html":{}}}],["query",{"_index":696,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["querying",{"_index":1465,"title":{},"body":{"index.html":{}}}],["querystring",{"_index":646,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["querystring.split",{"_index":927,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["question",{"_index":647,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["questionmarkposition",{"_index":918,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["read",{"_index":591,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1564,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":835,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["ready",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["real",{"_index":574,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["reason",{"_index":807,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["receive",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["received",{"_index":62,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["receivedtokens",{"_index":701,"title":{"classes/ReceivedTokens.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["recommend",{"_index":1401,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":1609,"title":{},"body":{"index.html":{}}}],["recommented",{"_index":610,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{}}}],["redhat",{"_index":1368,"title":{},"body":{"index.html":{}}}],["redhat's",{"_index":1392,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":652,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["redirected",{"_index":1459,"title":{},"body":{"index.html":{}}}],["redirecting",{"_index":1472,"title":{},"body":{"index.html":{}}}],["redirects",{"_index":1584,"title":{},"body":{"index.html":{}}}],["redirecturi",{"_index":1033,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["redirecturis",{"_index":1487,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":656,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["refresh.html",{"_index":1216,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["refresh_token",{"_index":746,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["refreshes",{"_index":637,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["refreshing",{"_index":1462,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":1468,"title":{},"body":{"index.html":{}}}],["regards",{"_index":1616,"title":{},"body":{"index.html":{}}}],["registerd",{"_index":1535,"title":{},"body":{"index.html":{}}}],["registered",{"_index":880,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["registration_endpoint",{"_index":764,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["release",{"_index":1432,"title":{},"body":{"index.html":{}}}],["removal",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":275,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["removed",{"_index":276,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{}}}],["removeitem",{"_index":786,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["removeitem(key",{"_index":724,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["removing",{"_index":695,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["replace",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["replacements",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["replay",{"_index":662,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["represents",{"_index":730,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["req",{"_index":243,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["request",{"_index":281,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["request.clone",{"_index":306,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["request.headers.set('authorization",{"_index":305,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["request.url.tolowercase",{"_index":283,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["request_object_signing_alg_values_supported",{"_index":777,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["requests",{"_index":1214,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reset",{"_index":328,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"overview.html":{}}}],["resource",{"_index":261,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["resources",{"_index":1371,"title":{},"body":{"index.html":{}}}],["resourceserver",{"_index":873,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["resourceservererrorhandler",{"_index":879,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["respective",{"_index":1395,"title":{},"body":{"index.html":{}}}],["response",{"_index":738,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["response_modes_supported",{"_index":768,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_types",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["response_types_supported",{"_index":766,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["responsetype",{"_index":1105,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["restriction",{"_index":1656,"title":{},"body":{"license.html":{}}}],["result",{"_index":181,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{}}}],["results",{"_index":115,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":654,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["return",{"_index":104,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1627,"title":{},"body":{"index.html":{}}}],["revocation",{"_index":1166,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["revocation_endpoint",{"_index":784,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["revocationendpoint",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["revoke",{"_index":1167,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["revoketokenandlogout",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["rfc",{"_index":1209,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rights",{"_index":1658,"title":{},"body":{"license.html":{}}}],["risk",{"_index":797,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["robin",{"_index":1247,"title":{},"body":{"changelog.html":{}}}],["roblabat",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":1602,"title":{},"body":{"index.html":{}}}],["router",{"_index":1382,"title":{},"body":{"index.html":{}}}],["routing",{"_index":1186,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["run",{"_index":1196,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["running",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["runs",{"_index":1479,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":250,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":257,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["s",{"_index":157,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"miscellaneous/functions.html":{}}}],["safe",{"_index":1458,"title":{},"body":{"index.html":{}}}],["sake",{"_index":1513,"title":{},"body":{"index.html":{}}}],["salt",{"_index":515,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["same",{"_index":470,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["sample",{"_index":1154,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["save",{"_index":603,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["saveoption",{"_index":1493,"title":{},"body":{"index.html":{}}}],["scope",{"_index":747,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["scope/state",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["scopes_supported",{"_index":765,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["script",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["secret",{"_index":1539,"title":{},"body":{"index.html":{}}}],["section",{"_index":1606,"title":{},"body":{"index.html":{}}}],["security",{"_index":671,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["see",{"_index":1141,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sell",{"_index":1664,"title":{},"body":{"license.html":{}}}],["send",{"_index":881,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["sendaccesstoken",{"_index":286,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["sending",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["sense",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["separatorindex",{"_index":923,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["server",{"_index":262,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["server's",{"_index":1473,"title":{},"body":{"index.html":{}}}],["server.code",{"_index":1537,"title":{},"body":{"index.html":{}}}],["servers",{"_index":1573,"title":{},"body":{"index.html":{}}}],["service",{"_index":260,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"changelog.html":{}}}],["service.ts",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["service_documentation",{"_index":782,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["session",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["session_changed",{"_index":825,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_error",{"_index":826,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_state",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["session_terminated",{"_index":827,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_unchanged",{"_index":828,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["sessionstorage",{"_index":720,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["set",{"_index":643,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["setitem",{"_index":787,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["setitem(key",{"_index":725,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["setting",{"_index":1151,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup",{"_index":1500,"title":{},"body":{"index.html":{}}}],["sha",{"_index":113,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{}}}],["sha256",{"_index":146,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"changelog.html":{},"dependencies.html":{}}}],["sha256(accesstoken",{"_index":91,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["sha256js",{"_index":149,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["sha256js.ts",{"_index":317,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sha256js.ts:139",{"_index":552,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:140",{"_index":547,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:143",{"_index":555,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:144",{"_index":557,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:145",{"_index":549,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:146",{"_index":550,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:147",{"_index":551,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:149",{"_index":546,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:157",{"_index":564,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:173",{"_index":561,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:190",{"_index":565,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:220",{"_index":563,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:257",{"_index":562,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:264",{"_index":560,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:271",{"_index":559,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:283",{"_index":339,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:284",{"_index":342,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:286",{"_index":336,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:287",{"_index":338,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:291",{"_index":341,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:292",{"_index":332,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:327",{"_index":349,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:334",{"_index":343,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:343",{"_index":351,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:349",{"_index":347,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:360",{"_index":345,"title":{},"body":{"classes/HMAC.html":{}}}],["shaking",{"_index":1618,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1672,"title":{},"body":{"license.html":{}}}],["showdebuginformation",{"_index":1557,"title":{},"body":{"index.html":{}}}],["shown",{"_index":1563,"title":{},"body":{"index.html":{}}}],["side",{"_index":718,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["sign",{"_index":1009,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["signature",{"_index":67,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["silent",{"_index":636,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["silent_refresh_error",{"_index":820,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silent_refresh_timeout",{"_index":822,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silently_refreshed",{"_index":821,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["simple",{"_index":714,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["single",{"_index":611,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["site",{"_index":1157,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1431,"title":{},"body":{"index.html":{}}}],["sizes",{"_index":616,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["skew",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":796,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["smaller",{"_index":614,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":1651,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1529,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["sources",{"_index":1372,"title":{},"body":{"index.html":{}}}],["spa",{"_index":1486,"title":{},"body":{"index.html":{}}}],["spa's",{"_index":1534,"title":{},"body":{"index.html":{}}}],["spas",{"_index":1541,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1554,"title":{},"body":{"index.html":{}}}],["specs",{"_index":1469,"title":{},"body":{"index.html":{}}}],["src",{"_index":1449,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":1494,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":955,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":467,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["statements",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":854,"title":{},"body":{"modules/OAuthModule.html":{}}}],["steyer",{"_index":1243,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["still",{"_index":1511,"title":{},"body":{"index.html":{}}}],["stopautomaticrefresh",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":715,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["store",{"_index":1571,"title":{},"body":{"index.html":{}}}],["storing",{"_index":716,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["str",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{}}}],["string.fromcharcode(e",{"_index":183,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["sub",{"_index":750,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["subject",{"_index":1669,"title":{},"body":{"license.html":{}}}],["subject_types_supported",{"_index":770,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sublicense",{"_index":1662,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1673,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":684,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["such",{"_index":1546,"title":{},"body":{"index.html":{}}}],["summary.json",{"_index":1452,"title":{},"body":{"index.html":{}}}],["super",{"_index":617,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["super(type",{"_index":836,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["support",{"_index":1035,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["supported",{"_index":112,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["supports",{"_index":1522,"title":{},"body":{"index.html":{}}}],["sure",{"_index":1451,"title":{},"body":{"index.html":{}}}],["switching",{"_index":1589,"title":{},"body":{"index.html":{}}}],["symbol",{"_index":644,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["systemdatetimeprovider",{"_index":128,"title":{"injectables/SystemDateTimeProvider.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"coverage.html":{}}}],["t1",{"_index":434,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["t2",{"_index":435,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["table",{"_index":1096,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":255,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["take(1",{"_index":301,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["takes",{"_index":1510,"title":{},"body":{"index.html":{}}}],["task",{"_index":1588,"title":{},"body":{"index.html":{}}}],["telling",{"_index":572,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["tells",{"_index":1579,"title":{},"body":{"index.html":{}}}],["temp",{"_index":543,"title":{},"body":{"classes/Hash.html":{}}}],["tested",{"_index":1379,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1364,"title":{},"body":{"index.html":{}}}],["tests",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["textencoder",{"_index":164,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["thanks",{"_index":202,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["this.blocksize",{"_index":494,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.buffer",{"_index":464,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.buffer[padlength",{"_index":480,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.buffer[this.bufferlength",{"_index":459,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.bufferlength",{"_index":458,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.byteshashed",{"_index":473,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.calchash(params.accesstoken",{"_index":90,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.data.delete(key",{"_index":728,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.data.get(key",{"_index":727,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.data.set(key",{"_index":729,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.document",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["this.errorhandler",{"_index":313,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.finish(out",{"_index":490,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.finished",{"_index":471,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.inferhashalgorithm(params.idtokenheader",{"_index":87,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.inner.blocksize",{"_index":335,"title":{},"body":{"classes/HMAC.html":{}}}],["this.inner.digestlength",{"_index":337,"title":{},"body":{"classes/HMAC.html":{}}}],["this.moduleconfig",{"_index":314,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice",{"_index":312,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":1568,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initcodeflow();there",{"_index":1558,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initloginflow();also",{"_index":1562,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandlogin",{"_index":1580,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin",{"_index":1581,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin();logging",{"_index":1569,"title":{},"body":{"index.html":{}}}],["this.oauthservice.logout();if",{"_index":1575,"title":{},"body":{"index.html":{}}}],["this.oauthservice.revoketokenandlogout();skipping",{"_index":1576,"title":{},"body":{"index.html":{}}}],["this.parsequerystring(hash",{"_index":921,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["this.state",{"_index":463,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.state[i",{"_index":487,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.tohashstring(hasharray",{"_index":175,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["this.tohashstring2(hasharray",{"_index":176,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["through",{"_index":706,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["throw",{"_index":109,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["throwerror",{"_index":889,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["throwerror(err",{"_index":890,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["time",{"_index":119,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["timeout",{"_index":256,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["timeout(oauthservice.waitfortokeninmsec",{"_index":297,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["timers",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":274,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["tohashstring",{"_index":134,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring(buffer",{"_index":137,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["tohashstring(hexstring",{"_index":193,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["tohashstring2",{"_index":135,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring2(bytearray",{"_index":141,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["token",{"_index":292,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["token(s",{"_index":691,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token.html",{"_index":1600,"title":{},"body":{"index.html":{}}}],["token_endpoint",{"_index":757,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_methods_supported",{"_index":758,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_signing_alg_values_supported",{"_index":759,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_error",{"_index":816,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_expires",{"_index":824,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_received",{"_index":296,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refresh_error",{"_index":819,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refreshed",{"_index":818,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_revoke_error",{"_index":832,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_type",{"_index":744,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_validation_error",{"_index":823,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tokenhash",{"_index":88,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.length",{"_index":96,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.substr(0",{"_index":95,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenresponse",{"_index":743,"title":{"interfaces/TokenResponse.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"coverage.html":{}}}],["tokens",{"_index":83,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["tokensetup",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["tokenvalidationhandler",{"_index":700,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tort",{"_index":1695,"title":{},"body":{"license.html":{}}}],["traditional",{"_index":1507,"title":{},"body":{"index.html":{}}}],["tree",{"_index":1617,"title":{},"body":{"index.html":{}}}],["true",{"_index":93,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["try",{"_index":1427,"title":{},"body":{"index.html":{}}}],["trylogin",{"_index":623,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["trylogincodeflow",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":1633,"title":{},"body":{"index.html":{}}}],["tutorials",{"_index":1632,"title":{},"body":{"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1706,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":505,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["typeerror('expected",{"_index":158,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["typeof",{"_index":156,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{}}}],["typo",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["u",{"_index":432,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["ui_locales_supported",{"_index":783,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["uint32array",{"_index":340,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["uint8array",{"_index":331,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["uint8array(128",{"_index":548,"title":{},"body":{"classes/Hash.html":{}}}],["uint8array([1",{"_index":517,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["uint8array(buffer",{"_index":184,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["uint8array(d.length",{"_index":161,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["uint8array(digestlength",{"_index":511,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["uint8array(hmac_.digestlength",{"_index":530,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["uint8array(length",{"_index":533,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["uint8array(this.digestlength",{"_index":489,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["unchanged",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["universal",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1582,"title":{},"body":{"index.html":{}}}],["upcoming",{"_index":1360,"title":{},"body":{"index.html":{}}}],["update",{"_index":329,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["update(data",{"_index":350,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["upgrade",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":1629,"title":{},"body":{"index.html":{}}}],["uri",{"_index":653,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["url",{"_index":267,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["url.tolowercase().startswith(u.tolowercase",{"_index":273,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["url?x=1",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["urlhelperservice",{"_index":906,"title":{"injectables/UrlHelperService.html":{}},"body":{"injectables/UrlHelperService.html":{},"coverage.html":{}}}],["urls",{"_index":876,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["usage",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":18,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1553,"title":{},"body":{"index.html":{}}}],["used",{"_index":634,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["user",{"_index":227,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["user_profile_load_error",{"_index":815,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["user_profile_loaded",{"_index":814,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["userinfo",{"_index":749,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["userinfo_encryption_alg_values_supported",{"_index":772,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_encryption_enc_values_supported",{"_index":773,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_endpoint",{"_index":760,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_signing_alg_values_supported",{"_index":771,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["username/password",{"_index":1481,"title":{},"body":{"index.html":{}}}],["users",{"_index":573,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["uses",{"_index":519,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["usesilentrefresh",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":36,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["utils",{"_index":581,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["v",{"_index":424,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{}}}],["v14",{"_index":201,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["v[0",{"_index":436,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[1",{"_index":437,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[2",{"_index":438,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[3",{"_index":439,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[4",{"_index":440,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[5",{"_index":441,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[6",{"_index":442,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[7",{"_index":443,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["valid",{"_index":1585,"title":{},"body":{"index.html":{}}}],["validate",{"_index":82,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash",{"_index":16,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(params",{"_index":56,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(validationparams",{"_index":584,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{}}}],["validated",{"_index":685,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["validates",{"_index":59,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignature",{"_index":26,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignature(validationparams",{"_index":65,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validating",{"_index":794,"title":{},"body":{"classes/NullValidationHandler.html":{},"index.html":{}}}],["validation",{"_index":570,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation/fast",{"_index":316,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validation/hash",{"_index":133,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validation/jwks",{"_index":569,"title":{},"body":{"classes/JwksValidationHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation/null",{"_index":792,"title":{},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"coverage.html":{}}}],["validation/validation",{"_index":7,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{}}}],["validationhandler",{"_index":12,"title":{"classes/ValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{}}}],["validationhandlerclass",{"_index":857,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["validationparams",{"_index":57,"title":{"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"coverage.html":{}}}],["validations",{"_index":1471,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tostring(16",{"_index":189,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["values",{"_index":697,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["valuetohash",{"_index":42,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["variable",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1709,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vdveer",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["versatility",{"_index":1594,"title":{},"body":{"index.html":{}}}],["version",{"_index":594,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1413,"title":{},"body":{"index.html":{}}}],["via",{"_index":1387,"title":{},"body":{"index.html":{}}}],["vital",{"_index":1545,"title":{},"body":{"index.html":{}}}],["void",{"_index":344,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["w",{"_index":422,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["w[i",{"_index":447,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["want",{"_index":688,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["warn",{"_index":842,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["warn(message",{"_index":712,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["warranties",{"_index":1680,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1675,"title":{},"body":{"license.html":{}}}],["way",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["we've",{"_index":1389,"title":{},"body":{"index.html":{}}}],["web",{"_index":1478,"title":{},"body":{"index.html":{}}}],["webcomponents/custom",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["webhttpurlencodingcodec",{"_index":932,"title":{"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"coverage.html":{}}}],["webpack",{"_index":1388,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":705,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["when/some",{"_index":1463,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1692,"title":{},"body":{"license.html":{}}}],["window",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["window.crypto.subtle.digest(algorithm",{"_index":166,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["window.location.hash",{"_index":915,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["window.location.origin",{"_index":1532,"title":{},"body":{"index.html":{}}}],["windowref",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":1655,"title":{},"body":{"license.html":{}}}],["work",{"_index":1161,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["working",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":507,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["workshops",{"_index":1640,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":844,"title":{},"body":{"classes/OAuthLogger.html":{},"injectables/UrlHelperService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":1628,"title":{},"body":{"index.html":{}}}],["zeroes",{"_index":513,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["zone.js",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1703,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Async\n                                validateAtHash\n                            \n                            \n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:88\n                        \n                    \n\n\n            \n                \n                        Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valueToHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                algorithm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inferHashAlgorithm\n                        \n                    \n                \n            \n            \n                \n                        \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:71\n                        \n                    \n\n\n            \n                \n                        Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                jwtHeader\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the id_token's parsed header\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:46\n                        \n                    \n\n\n            \n                \n                        Validates the at_hash in an id_token against the received access_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:41\n                        \n                    \n\n\n            \n                \n                        Validates the signature of an id_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(\n    validationParams: ValidationParams\n  ): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    const atHash = base64UrlEncode(leftMostHalf);\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(\n    valueToHash: string,\n    algorithm: string\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeProvider.html":{"url":"classes/DateTimeProvider.html","title":"class - DateTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/date-time-provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                new\n                            \n                            \n                                    Abstract\n                                now\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        new\n                        \n                    \n                \n            \n            \n                \n                        \n                    new()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/date-time-provider.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Date\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        now\n                        \n                    \n                \n            \n            \n                \n                        \n                    now()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/date-time-provider.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport abstract class DateTimeProvider {\n  abstract now(): number;\n  abstract new(): Date;\n}\n\n@Injectable()\nexport class SystemDateTimeProvider extends DateTimeProvider {\n  now(): number {\n    return Date.now();\n  }\n\n  new(): Date {\n    return new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultHashHandler.html":{"url":"injectables/DefaultHashHandler.html","title":"injectable - DefaultHashHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DefaultHashHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/hash-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calcHash\n                            \n                            \n                                toHashString\n                            \n                            \n                                toHashString2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valueToHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                algorithm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHashString\n                        \n                    \n                \n            \n            \n                \ntoHashString(buffer: ArrayBuffer)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        ArrayBuffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHashString2\n                        \n                    \n                \n            \n            \n                \ntoHashString2(byteArray: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                byteArray\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { factory } from './js-sha256';\n// const sha256 = factory();\n\nimport fsha256 from './fast-sha256js';\n\n/**\n * Abstraction for crypto algorithms\n */\nexport abstract class HashHandler {\n  abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  const d = s,\n    b = new Uint8Array(d.length);\n  for (let i = 0; i  {\n    // const encoder = new TextEncoder();\n    // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n    // const data = encoder.encode(valueToHash);\n\n    // const fhash = fsha256(valueToHash);\n\n    const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\n\n    // const hashArray = (sha256 as any).array(valueToHash);\n    // // const hashString = this.toHashString(hashArray);\n    // const hashString = this.toHashString2(hashArray);\n\n    // console.debug('hash orig - cand', candHash, hashString);\n    // alert(1);\n\n    return candHash;\n  }\n\n  toHashString2(byteArray: number[]) {\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  toHashString(buffer: ArrayBuffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  // hexString(buffer) {\n  //     const byteArray = new Uint8Array(buffer);\n  //     const hexCodes = [...byteArray].map(value => {\n  //       const hexCode = value.toString(16);\n  //       const paddedHexCode = hexCode.padStart(2, '0');\n  //       return paddedHexCode;\n  //     });\n\n  //     return hexCodes.join('');\n  //   }\n\n  // toHashString(hexString: string) {\n  //   let result = '';\n  //   for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/DefaultOAuthInterceptor.html":{"url":"interceptors/DefaultOAuthInterceptor.html","title":"interceptor - DefaultOAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  DefaultOAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/default-oauth.interceptor.ts\n        \n\n            \n                Deprecated\n            \n            \n                Since Angular v14, and thanks to the fact that inject function can be call outside an injection context\nwe can create interceptor as a function\n\nAs the package don't import the HttpClientModule or provide the HttpClient thanks to provideHttpClient.\n\nCurrently, to benefit of the DefaultOAuthInterceptor we must add provideHttpClient(withInterceptorFromDI()).\nThis looks like a little bit as a \"Black Box\"\n\nMoreover HttpClientModule is deprecated, that force the user to use provideHttpClient function\n\nUse the function defaultOAuthInterceptor instead\n            \n\n            \n                Description\n            \n            \n                Since Angular v14, and thanks to the fact that inject function can be call outside an injection context\nwe can create interceptor as a function\nAs the package don't import the HttpClientModule or provide the HttpClient thanks to provideHttpClient.\nCurrently, to benefit of the DefaultOAuthInterceptor we must add provideHttpClient(withInterceptorFromDI()).\nThis looks like a little bit as a \"Black Box\"\nMoreover HttpClientModule is deprecated, that force the user to use provideHttpClient function\nUse the function defaultOAuthInterceptor instead\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oAuthService: OAuthService, errorHandler: OAuthResourceServerErrorHandler, moduleConfig: OAuthModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oAuthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        OAuthResourceServerErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleConfig\n                                                  \n                                                        \n                                                                        OAuthModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                        \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Optional } from '@angular/core';\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  type HttpHandlerFn,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { merge, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  take,\n  timeout,\n} from 'rxjs/operators';\nimport { OAuthModuleConfig } from '../oauth-module.config';\nimport { OAuthService } from '../oauth-service';\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\n\n/**\n * @ignore\n */\nfunction checkUrl(moduleConfig: OAuthModuleConfig, url: string): boolean {\n  if (moduleConfig.resourceServer.customUrlValidation) {\n    return moduleConfig.resourceServer.customUrlValidation(url);\n  }\n\n  if (moduleConfig.resourceServer.allowedUrls) {\n    return !!moduleConfig.resourceServer.allowedUrls.find((u) =>\n      url.toLowerCase().startsWith(u.toLowerCase())\n    );\n  }\n\n  return true;\n}\n\n/**\n * @ignore\n * TODO: Remove this function when class DefaultOAuthInterceptor is removed\\\n * move the core of this function inside the function defaultOAuthInterceptor\n */\nfunction interceptFn(\n  oAuthService: OAuthService,\n  errorHandler: OAuthResourceServerErrorHandler,\n  moduleConfig: OAuthModuleConfig,\n  request: HttpRequest,\n  next: HttpHandlerFn | HttpHandler\n) {\n  const handler = typeof next === 'function' ? next : next.handle;\n  const url = request.url.toLowerCase();\n\n  if (\n    !moduleConfig ||\n    !moduleConfig.resourceServer ||\n    !checkUrl(moduleConfig, url)\n  ) {\n    return handler(request);\n  }\n\n  const sendAccessToken = moduleConfig.resourceServer.sendAccessToken;\n\n  if (!sendAccessToken) {\n    return handler(request).pipe(\n      catchError((err) => errorHandler.handleError(err))\n    );\n  }\n\n  return merge(\n    of(oAuthService.getAccessToken()).pipe(filter((token) => !!token)),\n    oAuthService.events.pipe(\n      filter((e) => e.type === 'token_received'),\n      timeout(oAuthService.waitForTokenInMsec || 0),\n      catchError(() => of(null)), // timeout is not an error\n      map(() => oAuthService.getAccessToken())\n    )\n  ).pipe(\n    take(1),\n    mergeMap((token) => {\n      if (token) {\n        const header = 'Bearer ' + token;\n        const headers = request.headers.set('Authorization', header);\n        request = request.clone({ headers });\n      }\n\n      return handler(request).pipe(\n        catchError((err) => errorHandler.handleError(err))\n      );\n    })\n  );\n}\n\nexport function defaultOAuthInterceptor(\n  request: HttpRequest,\n  next: HttpHandlerFn\n) {\n  const oAuthService = inject(OAuthService);\n  const errorHandler = inject(OAuthResourceServerErrorHandler);\n  const moduleConfig = inject(OAuthModuleConfig, { optional: true });\n\n  return interceptFn(oAuthService, errorHandler, moduleConfig, request, next);\n}\n\n/**\n * @deprecated\n *\n * Since Angular v14, and thanks to the fact that inject function can be call outside an injection context\n * we can create interceptor as a function\n *\n * As the package don't import the HttpClientModule or provide the HttpClient thanks to provideHttpClient.\n *\n * Currently, to benefit of the DefaultOAuthInterceptor we must add provideHttpClient(withInterceptorFromDI()).\n * This looks like a little bit as a \"Black Box\"\n *\n * Moreover HttpClientModule is deprecated, that force the user to use provideHttpClient function\n *\n * Use the function defaultOAuthInterceptor instead\n */\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n  constructor(\n    private oAuthService: OAuthService,\n    private errorHandler: OAuthResourceServerErrorHandler,\n    @Optional() private moduleConfig: OAuthModuleConfig\n  ) {}\n\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return interceptFn(\n      this.oAuthService,\n      this.errorHandler,\n      this.moduleConfig,\n      req,\n      next\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HMAC.html":{"url":"classes/HMAC.html","title":"class - HMAC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HMAC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/fast-sha256js.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                            \n                                digestLength\n                            \n                            \n                                    Private\n                                inner\n                            \n                            \n                                    Private\n                                istate\n                            \n                            \n                                    Private\n                                ostate\n                            \n                            \n                                    Private\n                                outer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clean\n                            \n                            \n                                digest\n                            \n                            \n                                finish\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: Uint8Array)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:292\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                    Uint8Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.inner.blockSize\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:286\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digestLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.inner.digestLength\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:287\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hash\n\n                    \n                \n                \n                    \n                        Default value : new Hash()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:283\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        istate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint32Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:291\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ostate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint32Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:292\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        outer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Hash\n\n                    \n                \n                \n                    \n                        Default value : new Hash()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:284\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digest\n                        \n                    \n                \n            \n            \n                \ndigest()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:360\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Uint8Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finish\n                        \n                    \n                \n            \n            \n                \nfinish(out: Uint8Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:349\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                out\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:327\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Uint8Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:343\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const digestLength = 32;\nexport const blockSize = 64;\n\n// SHA-256 constants\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n]);\n\nfunction hashBlocks(\n  w: Int32Array,\n  v: Int32Array,\n  p: Uint8Array,\n  pos: number,\n  len: number\n): number {\n  let a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number,\n    g: number,\n    h: number,\n    u: number,\n    i: number,\n    j: number,\n    t1: number,\n    t2: number;\n  while (len >= 64) {\n    a = v[0];\n    b = v[1];\n    c = v[2];\n    d = v[3];\n    e = v[4];\n    f = v[5];\n    g = v[6];\n    h = v[7];\n\n    for (i = 0; i >> 17) | (u >> 19) | (u >> 10);\n\n      u = w[i - 15];\n      t2 =\n        ((u >>> 7) | (u >> 18) | (u >> 3);\n\n      w[i] = ((t1 + w[i - 7]) | 0) + ((t2 + w[i - 16]) | 0);\n    }\n\n    for (i = 0; i >> 6) | (e >> 11) | (e >> 25) | (e >> 2) | (a >> 13) | (a >> 22) | (a  0) {\n      while (this.bufferLength  0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n        this.bufferLength = 0;\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n      dataLength %= 64;\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  }\n\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  finish(out: Uint8Array): this {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed;\n      const left = this.bufferLength;\n      const bitLenHi = (bytesHashed / 0x20000000) | 0;\n      const bitLenLo = bytesHashed >> 24) & 0xff;\n      this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n      this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n      this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n      this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n      this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n      this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n      this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n\n      this.finished = true;\n    }\n\n    for (let i = 0; i >> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return this;\n  }\n\n  // Returns the final hash digest.\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n\n  // Internal function for use in HMAC for optimization.\n  _saveState(out: Uint32Array) {\n    for (let i = 0; i  this.blockSize) {\n      new Hash().update(key).finish(pad).clean();\n    } else {\n      for (let i = 0; i  1) {\n    hmac.update(buffer);\n  }\n\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info);\n  }\n\n  // Hash in the counter.\n  hmac.update(counter);\n\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer);\n\n  // Increment counter inside typed array, this works properly.\n  counter[0]++;\n}\n\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nexport function hkdf(\n  key: Uint8Array,\n  salt: Uint8Array = hkdfSalt,\n  info?: Uint8Array,\n  length = 32\n) {\n  const counter = new Uint8Array([1]);\n\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key);\n\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm);\n\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength);\n  let bufpos = buffer.length;\n\n  const out = new Uint8Array(length);\n  for (let i = 0; i >> 24) & 0xff;\n    ctr[1] = (c >>> 16) & 0xff;\n    ctr[2] = (c >>> 8) & 0xff;\n    ctr[3] = (c >>> 0) & 0xff;\n    prf.reset();\n    prf.update(salt);\n    prf.update(ctr);\n    prf.finish(u);\n    for (let j = 0; j \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hash.html":{"url":"classes/Hash.html","title":"class - Hash","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hash\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/fast-sha256js.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                            \n                                    Private\n                                buffer\n                            \n                            \n                                    Private\n                                bufferLength\n                            \n                            \n                                    Private\n                                bytesHashed\n                            \n                            \n                                digestLength\n                            \n                            \n                                finished\n                            \n                            \n                                    Private\n                                state\n                            \n                            \n                                    Private\n                                temp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _restoreState\n                            \n                            \n                                _saveState\n                            \n                            \n                                clean\n                            \n                            \n                                digest\n                            \n                            \n                                finish\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:149\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : blockSize\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buffer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n                \n                    \n                        Default value : new Uint8Array(128)\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bufferLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bytesHashed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digestLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : digestLength\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Int32Array\n\n                    \n                \n                \n                    \n                        Default value : new Int32Array(8)\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        temp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Int32Array\n\n                    \n                \n                \n                    \n                        Default value : new Int32Array(64)\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:144\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _restoreState\n                        \n                    \n                \n            \n            \n                \n_restoreState(from: Uint32Array, bytesHashed: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:271\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                from\n                                            \n                                                        Uint32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bytesHashed\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _saveState\n                        \n                    \n                \n            \n            \n                \n_saveState(out: Uint32Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:264\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                out\n                                            \n                                                        Uint32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digest\n                        \n                    \n                \n            \n            \n                \ndigest()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:257\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Uint8Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finish\n                        \n                    \n                \n            \n            \n                \nfinish(out: Uint8Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                out\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Uint8Array, dataLength: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                dataLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    data.length\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const digestLength = 32;\nexport const blockSize = 64;\n\n// SHA-256 constants\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n]);\n\nfunction hashBlocks(\n  w: Int32Array,\n  v: Int32Array,\n  p: Uint8Array,\n  pos: number,\n  len: number\n): number {\n  let a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number,\n    g: number,\n    h: number,\n    u: number,\n    i: number,\n    j: number,\n    t1: number,\n    t2: number;\n  while (len >= 64) {\n    a = v[0];\n    b = v[1];\n    c = v[2];\n    d = v[3];\n    e = v[4];\n    f = v[5];\n    g = v[6];\n    h = v[7];\n\n    for (i = 0; i >> 17) | (u >> 19) | (u >> 10);\n\n      u = w[i - 15];\n      t2 =\n        ((u >>> 7) | (u >> 18) | (u >> 3);\n\n      w[i] = ((t1 + w[i - 7]) | 0) + ((t2 + w[i - 16]) | 0);\n    }\n\n    for (i = 0; i >> 6) | (e >> 11) | (e >> 25) | (e >> 2) | (a >> 13) | (a >> 22) | (a  0) {\n      while (this.bufferLength  0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n        this.bufferLength = 0;\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n      dataLength %= 64;\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  }\n\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  finish(out: Uint8Array): this {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed;\n      const left = this.bufferLength;\n      const bitLenHi = (bytesHashed / 0x20000000) | 0;\n      const bitLenLo = bytesHashed >> 24) & 0xff;\n      this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n      this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n      this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n      this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n      this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n      this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n      this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n\n      this.finished = true;\n    }\n\n    for (let i = 0; i >> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return this;\n  }\n\n  // Returns the final hash digest.\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n\n  // Internal function for use in HMAC for optimization.\n  _saveState(out: Uint32Array) {\n    for (let i = 0; i  this.blockSize) {\n      new Hash().update(key).finish(pad).clean();\n    } else {\n      for (let i = 0; i  1) {\n    hmac.update(buffer);\n  }\n\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info);\n  }\n\n  // Hash in the counter.\n  hmac.update(counter);\n\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer);\n\n  // Increment counter inside typed array, this works properly.\n  counter[0]++;\n}\n\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nexport function hkdf(\n  key: Uint8Array,\n  salt: Uint8Array = hkdfSalt,\n  info?: Uint8Array,\n  length = 32\n) {\n  const counter = new Uint8Array([1]);\n\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key);\n\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm);\n\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength);\n  let bufpos = buffer.length;\n\n  const out = new Uint8Array(length);\n  for (let i = 0; i >> 24) & 0xff;\n    ctr[1] = (c >>> 16) & 0xff;\n    ctr[2] = (c >>> 8) & 0xff;\n    ctr[3] = (c >>> 0) & 0xff;\n    prf.reset();\n    prf.update(salt);\n    prf.update(ctr);\n    prf.finish(u);\n    for (let j = 0; j \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHandler.html":{"url":"classes/HashHandler.html","title":"class - HashHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/hash-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstraction for crypto algorithms\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                calcHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valueToHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                algorithm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { factory } from './js-sha256';\n// const sha256 = factory();\n\nimport fsha256 from './fast-sha256js';\n\n/**\n * Abstraction for crypto algorithms\n */\nexport abstract class HashHandler {\n  abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  const d = s,\n    b = new Uint8Array(d.length);\n  for (let i = 0; i  {\n    // const encoder = new TextEncoder();\n    // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n    // const data = encoder.encode(valueToHash);\n\n    // const fhash = fsha256(valueToHash);\n\n    const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\n\n    // const hashArray = (sha256 as any).array(valueToHash);\n    // // const hashString = this.toHashString(hashArray);\n    // const hashString = this.toHashString2(hashArray);\n\n    // console.debug('hash orig - cand', candHash, hashString);\n    // alert(1);\n\n    return candHash;\n  }\n\n  toHashString2(byteArray: number[]) {\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  toHashString(buffer: ArrayBuffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  // hexString(buffer) {\n  //     const byteArray = new Uint8Array(buffer);\n  //     const hexCodes = [...byteArray].map(value => {\n  //       const hexCode = value.toString(16);\n  //       const paddedHexCode = hexCode.padStart(2, '0');\n  //       return paddedHexCode;\n  //     });\n\n  //     return hexCodes.join('');\n  //   }\n\n  // toHashString(hexString: string) {\n  //   let result = '';\n  //   for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwksValidationHandler.html":{"url":"classes/JwksValidationHandler.html","title":"class - JwksValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwksValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/jwks-validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                This is just a dummy of the JwksValidationHandler\ntelling the users that the real one has been moved\nto an library of its own, namely angular-oauth2-oidc-utils\n\n            \n\n            \n                Extends\n            \n            \n                            NullValidationHandler\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:25\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \nvalidateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         NullValidationHandler\n\n                        \n                    \n                    \n                        \n                                Defined in         NullValidationHandler:11\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateSignature\n                        \n                    \n                \n            \n            \n                \nvalidateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         NullValidationHandler\n\n                        \n                    \n                    \n                        \n                                Defined in         NullValidationHandler:8\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NullValidationHandler } from './null-validation-handler';\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n\n/**\n * This is just a dummy of the JwksValidationHandler\n * telling the users that the real one has been moved\n * to an library of its own, namely angular-oauth2-oidc-utils\n */\nexport class JwksValidationHandler extends NullValidationHandler {\n  constructor() {\n    super();\n    console.error(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options that can be passed to tryLogin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customHashFragment\n                            \n                            \n                                    Optional\n                                customRedirectUri\n                            \n                            \n                                    Optional\n                                disableNonceCheck\n                            \n                            \n                                    Optional\n                                disableOAuth2StateCheck\n                            \n                            \n                                    Optional\n                                onLoginError\n                            \n                            \n                                    Optional\n                                onTokenReceived\n                            \n                            \n                                    Optional\n                                preventClearHashAfterLogin\n                            \n                            \n                                    Optional\n                                validationHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customHashFragment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:40\n                        \n                    \n\n            \n                \n                    A custom hash fragment to be used instead of the\nactual one. This is used for silent refreshes, to\npass the iframes hash fragment to this method, and\nis also used by popup flows in the same manner.\nThis can be used with code flow, where is must be set\nto a hash symbol followed by the querystring. The\nquestion mark is optional, but may be present following\nthe hash symbol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customRedirectUri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:74\n                        \n                    \n\n            \n                \n                    Set this for code flow if you used a custom redirect Uri\nwhen retrieving the code. This is used internally for silent\nrefresh and popup flows.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        disableNonceCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:59\n                        \n                    \n\n            \n                \n                    Set this to true to disable the nonce\ncheck which is used to avoid\nreplay attacks.\nThis flag should never be true in\nproduction environments.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        disableOAuth2StateCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:50\n                        \n                    \n\n            \n                \n                    Set this to true to disable the oauth2 state\ncheck which is a best practice to avoid\nsecurity attacks.\nAs OIDC defines a nonce check that includes\nthis, this can be set to true when only doing\nOIDC.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onLoginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:28\n                        \n                    \n\n            \n                \n                    Called when tryLogin detects that the auth server\nincluded an error message into the hash fragment.\nDeprecated:  Use property events on OAuthService instead.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onTokenReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:13\n                        \n                    \n\n            \n                \n                    Is called, after a token has been received and\nsuccessfully validated.\nDeprecated:  Use property events on OAuthService instead.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        preventClearHashAfterLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:67\n                        \n                    \n\n            \n                \n                    Normally, you want to clear your hash fragment after\nthe lib read the token(s) so that they are not displayed\nanymore in the url. If not, set this to true. For code flow\nthis controls removing query string values.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        validationHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:20\n                        \n                    \n\n            \n                \n                    Hook, to validate the received tokens.\nDeprecated:  Use property tokenValidationHandler on OAuthService instead.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:105\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/null-validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (at your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \nvalidateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/null-validation-handler.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateSignature\n                        \n                    \n                \n            \n            \n                \nvalidateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/null-validation-handler.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationHandler, ValidationParams } from './validation-handler';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  validateSignature(validationParams: ValidationParams): Promise {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams: ValidationParams): Promise {\n    return Promise.resolve(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, reason: object, params: object)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthLogger.html":{"url":"classes/OAuthLogger.html","title":"class - OAuthLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the logging interface the OAuthService uses\ninternally. Is compatible with the console object,\nbut you can provide your own implementation as well\nthrough dependency injection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                debug\n                            \n                            \n                                    Abstract\n                                error\n                            \n                            \n                                    Abstract\n                                info\n                            \n                            \n                                    Abstract\n                                log\n                            \n                            \n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    OAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/angular-oauth-oidc.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/angular-oauth-oidc.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            OAuthModuleConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                validationHandlerClass\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    NullValidationHandler\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OAuthModuleConfig } from './oauth-module.config';\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\nimport { provideOAuthClient } from './provider';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: [],\n})\nexport class OAuthModule {\n  static forRoot(\n    config: OAuthModuleConfig = null,\n    validationHandlerClass = NullValidationHandler\n  ): ModuleWithProviders {\n    return {\n      ngModule: OAuthModule,\n      providers: [provideOAuthClient(config, validationHandlerClass)],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthModuleConfig.html":{"url":"classes/OAuthModuleConfig.html","title":"class - OAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resourceServer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        resourceServer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuthResourceServerConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthNoopResourceServerErrorHandler.html":{"url":"classes/OAuthNoopResourceServerErrorHandler.html","title":"class - OAuthNoopResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthNoopResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OAuthResourceServerErrorHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(err: HttpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        HttpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler\n{\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerConfig.html":{"url":"classes/OAuthResourceServerConfig.html","title":"class - OAuthResourceServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allowedUrls\n                            \n                            \n                                    Optional\n                                customUrlValidation\n                            \n                            \n                                sendAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        allowedUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:11\n                        \n                    \n\n            \n                \n                    Urls for which calls should be intercepted.\nIf there is an ResourceServerErrorHandler registered, it is used for them.\nIf sendAccessToken is set to true, the access_token is send to them too.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customUrlValidation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendAccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerErrorHandler.html":{"url":"classes/OAuthResourceServerErrorHandler.html","title":"class - OAuthResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(err: HttpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        HttpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler\n{\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for\nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getItem\n                            \n                            \n                                    Abstract\n                                removeItem\n                            \n                            \n                                    Abstract\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        setItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    setItem(key: string, data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OidcDiscoveryDoc.html":{"url":"interfaces/OidcDiscoveryDoc.html","title":"interface - OidcDiscoveryDoc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OidcDiscoveryDoc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an OpenID Connect discovery document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acr_values_supported\n                                        \n                                \n                                \n                                        \n                                            authorization_endpoint\n                                        \n                                \n                                \n                                        \n                                            check_session_iframe\n                                        \n                                \n                                \n                                        \n                                            claim_types_supported\n                                        \n                                \n                                \n                                        \n                                            claims_parameter_supported\n                                        \n                                \n                                \n                                        \n                                            claims_supported\n                                        \n                                \n                                \n                                        \n                                            display_values_supported\n                                        \n                                \n                                \n                                        \n                                            end_session_endpoint\n                                        \n                                \n                                \n                                        \n                                            grant_types_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_encryption_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_encryption_enc_values_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            jwks_uri\n                                        \n                                \n                                \n                                        \n                                            registration_endpoint\n                                        \n                                \n                                \n                                        \n                                            request_object_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            response_modes_supported\n                                        \n                                \n                                \n                                        \n                                            response_types_supported\n                                        \n                                \n                                \n                                        \n                                            revocation_endpoint\n                                        \n                                \n                                \n                                        \n                                            scopes_supported\n                                        \n                                \n                                \n                                        \n                                            service_documentation\n                                        \n                                \n                                \n                                        \n                                            subject_types_supported\n                                        \n                                \n                                \n                                        \n                                            token_endpoint\n                                        \n                                \n                                \n                                        \n                                            token_endpoint_auth_methods_supported\n                                        \n                                \n                                \n                                        \n                                            token_endpoint_auth_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            ui_locales_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_encryption_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_encryption_enc_values_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_endpoint\n                                        \n                                \n                                \n                                        \n                                            userinfo_signing_alg_values_supported\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acr_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acr_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorization_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorization_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        check_session_iframe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check_session_iframe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claim_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claim_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_parameter_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims_parameter_supported:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_session_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_session_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grant_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grant_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_enc_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks_uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwks_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registration_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_object_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request_object_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_modes_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_modes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revocation_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revocation_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_documentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service_documentation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_methods_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_methods_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ui_locales_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ui_locales_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_enc_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParsedIdToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            idTokenClaims\n                                        \n                                \n                                \n                                        \n                                            idTokenClaimsJson\n                                        \n                                \n                                \n                                        \n                                            idTokenExpiresAt\n                                        \n                                \n                                \n                                        \n                                            idTokenHeader\n                                        \n                                \n                                \n                                        \n                                            idTokenHeaderJson\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Optional\n                                idClaims\n                            \n                            \n                                idToken\n                            \n                            \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        idClaims\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:128\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SystemDateTimeProvider.html":{"url":"injectables/SystemDateTimeProvider.html","title":"injectable - SystemDateTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SystemDateTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/date-time-provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DateTimeProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                new\n                            \n                            \n                                now\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        new\n                        \n                    \n                \n            \n            \n                \nnew()\n                \n            \n\n\n                    \n                        \n                            Inherited from         DateTimeProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         DateTimeProvider:14\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Date\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        now\n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n                    \n                        \n                            Inherited from         DateTimeProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         DateTimeProvider:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport abstract class DateTimeProvider {\n  abstract now(): number;\n  abstract new(): Date;\n}\n\n@Injectable()\nexport class SystemDateTimeProvider extends DateTimeProvider {\n  now(): number {\n    return Date.now();\n  }\n\n  new(): Date {\n    return new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response from the token endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            id_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/url-helper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHashFragmentParams\n                            \n                            \n                                    Public\n                                parseQueryString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getHashFragmentParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHashFragmentParams(customHashFragment?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/url-helper.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customHashFragment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseQueryString\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseQueryString(queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/url-helper.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash;\n\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    const questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  public parseQueryString(queryString: string): object {\n    const data = {};\n    let pair, separatorIndex, escapedKey, escapedValue, key, value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    const pairs = queryString.split('&');\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response from the user info endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/types.ts:162\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to\nvalidate tokens.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                validateAtHash\n                            \n                            \n                                    Public\n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:27\n                        \n                    \n\n\n            \n                \n                        Validates the at_hash in an id_token against the received access_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:20\n                        \n                    \n\n\n            \n                \n                        Validates the signature of an id_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(\n    validationParams: ValidationParams\n  ): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    const atHash = base64UrlEncode(leftMostHalf);\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(\n    valueToHash: string,\n    algorithm: string\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            idTokenClaims\n                                        \n                                \n                                \n                                        \n                                            idTokenHeader\n                                        \n                                \n                                \n                                        \n                                            jwks\n                                        \n                                \n                                \n                                        \n                                            loadKeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwks:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadKeys:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(\n    validationParams: ValidationParams\n  ): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    const atHash = base64UrlEncode(leftMostHalf);\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(\n    valueToHash: string,\n    algorithm: string\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebHttpUrlEncodingCodec.html":{"url":"classes/WebHttpUrlEncodingCodec.html","title":"class - WebHttpUrlEncodingCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebHttpUrlEncodingCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/encoder.ts\n        \n\n\n            \n                Description\n            \n            \n                This custom encoder allows charactes like +, % and / to be used in passwords\n\n            \n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string) {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nFeatures\n\nupdate project to Angular 16 (b999024)\n\nBug Fixes\n\n#728 (51e438a), closes /github.com/manfredsteyer/angular-oauth2-oidc/issues/728#issuecomment-808969225\nclear location.hash only if it is present (c2b2753), closes #970\nclock skew bug (f30098d)\ncorrectly handle ? and & in location replacements (70fd826)\ncorrectly use clockSkew for hasValid[Access|Id]Token (68238fb)\nDisable nonce validation for id token for e2e tests (f5bd96c)\nfix scope/state removal for implicit flow with hash (9e257d0)\nin code flow pass options to error handler (c9a2c55), closes #972\nissue with sha256 and prod build #1120 (b44e19a)\njs-sha256: wrap logic in a function to prevent optimizer destroy lib (ae26fba)\njwks: update jsrsasign dependency to 10.2.0 (a05bd8a), closes #1061\nmultiplying calls to token endpoint in code flow (59f65d2)\nRefresh tokens with a plus sign get corrupted before sending to token endpoint (2204c5a)\nrevoketokenandlogout: 'customParameters' should accept boolean (9761bad)\nWhile Using POPUP mode, we click on login button multiple time it opens multiple popup instead of focusing already opened (bbff95b)\n\n12.0.0 (2021-07-16)\nBug Fixes\n\n#728 (51e438a), closes /github.com/manfredsteyer/angular-oauth2-oidc/issues/728#issuecomment-808969225\nclear location.hash only if it is present (c2b2753), closes #970\ncorrectly handle ? and & in location replacements (70fd826)\nDisable nonce validation for id token for e2e tests (f5bd96c)\nfix scope/state removal for implicit flow with hash (9e257d0)\nin code flow pass options to error handler (c9a2c55), closes #972\njwks: update jsrsasign dependency to 10.2.0 (a05bd8a), closes #1061\nmultiplying calls to token endpoint in code flow (59f65d2)\nRefresh tokens with a plus sign get corrupted before sending to token endpoint (2204c5a)\nrevoketokenandlogout: 'customParameters' should accept boolean (9761bad)\nWhile Using POPUP mode, we click on login button multiple time it opens multiple popup instead of focusing already opened (bbff95b)\n\nFeatures\n\nintroduce DateTimeProvider (0c0a4a7)\nlogout: postLogoutRedirectUri should not default to redirectUri (ff7d1d9)\nsupport JWT response on userinfo endpoint (da16494)\nCustom grant type added (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/919)\nListen for storage to receive auth hash from popup (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/935)\nAdd event for unchanged session (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/936)\nAdd loginHint to codeFlow (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/938)\nAdd a windowRef option to initLoginFlowInPopup to prevent the window from beeing blocked by popup blockers (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/965)\nUse configured revocationEndpoint by default (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/1020)\n\n10.0.0 (2020-06-30)\n\nchore: increase version in package.json (84d95a7)\nchore: make version 9.2 ready (415e053)\nchore(deps): bump jsrsasign from 8.0.12 to 8.0.19 (4def1c1)\nchore(deps): bump websocket-extensions from 0.1.3 to 0.1.4 (cae715e)\nchore(release): 9.2.1 (7a15194)\nchore(release): 9.2.2 (40f5ae5)\nchore(release): 9.3.0 (f42f943)\nrefactor: inline js-sha256 (ca435c0)\nrefactor: remove dep on contributer-table (b486546)\nrefactor: use esm for sha-256 (92ee76d)\nfeat(oauth-service): pass custom url params to logOut (4607d55)\nfeat(oauth-service): revokeTokenAndLogout with cust params (026dcb3)\n'disableAtHashCheck' by default if responseType is 'id_token' (169d749)\n#825: (38c7c3f), closes #825\n#825: (fb3afe4), closes #825\nFix issue with ambient type in constructor when running Universal with Ivy (9e95c73)\nFix typo in code-flow.md (1816e7b)\nReplaced document by this.document #773 (678ff95), closes #773\nresponse_types including 'code' gets a code_challenge (58a8132)\nUpdate code-flow.md (5c5288c)\ndocs(readme): use our own idsvr (65c2b95)\nfix: loadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nfix(lib): copying LICENSE file to output build (e89aa6d)\n\n10.0.0 (2020-06-30)\nBug Fixes\n\nloadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nlib: copying LICENSE file to output build (e89aa6d)\n\nFeatures\n\noauth-service: pass custom url params to logOut (4607d55)\noauth-service: revokeTokenAndLogout with cust params (026dcb3)\n\n10.0.0 (2020-06-30)\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\nFeatures\n\nautomatic silent refresh: stopAutomaticRefresh stops all timers. (8ab853b)\ncode-flow: allow using implicit flow by setting useSilentRefresh to true (93902a5)\noauth-service: pass custom url params to logOut (4607d55)\noauth-service: revokeTokenAndLogout with cust params (026dcb3)\nsample: also use new idsvr 4 for implicit flow demo to prevent issues with same site cookies (58c6354)\nsession checks: Session checks work now for code flow too. Pls see Docs for details. (4bf8901)\ntoken-revocation: also revoke refresh_token (429ed2c)\nremove jsrsasign dependancy (77cb37a)\nUpgrade to angular 8 (31c6273)\n\nBug Fixes\n\nloadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nlib: copying LICENSE file to output build (e89aa6d)\nrevoketokenandlogout: explicit way to revoke an access token (c799ead)\nsample: make sense of the guard (1cae011)\n#687 (e2599e0)\ncode flow: Fixed code flow for IE 11 (0f03d39)\nsample: use hash-based routing (3f44eca)\nsession state: save session_state also when using code flow (8fa99ff)\nstate: passing an url with a querystring as the state, e. g. url?x=1 (71b705c)\nmissing HttpModule dependency (7eac8ae)\nrun tokensetup outside ngzone (07bb62d)\ntypo (3d331f2)\n\n9.2.2 (2020-05-09)\n9.2.1 (2020-04-23)\n9.2.0 (2020-03-28)\nFeatures\n\nrevoketokenandlogout: explicit way to revoke an access token according to RFC 7009 (c799ead)\n\ntoken-revocation: also revoke refresh_token (429ed2c)\n\n\nBug Fixes\n\nsample: make sense of the guard (1cae011)\n\n9.1.0 (2020-03-23)\nFeatures\n\nautomatic silent refresh: stopAutomaticRefresh stops all timers. (8ab853b)\ncode-flow: allow using silent refresh by setting useSilentRefresh to true (93902a5)\nsample: Also use new Identity Server 4 for implicit flow demo to prevent issues with same site cookies (58c6354)\nsession checks: Session checks work now for code flow too. Please see docs for details. (4bf8901)\n\nBug Fixes\n\ncode flow: Fixed code flow for IE 11 (0f03d39)\nsample: use hash-based routing (3f44eca)\nsession state: save session_state also when using code flow (8fa99ff)\nstate: passing an url with a querystring as the state, e. g. url?x=1 (71b705c)\n#687 (e2599e0)\nmissing HttpModule dependency (7eac8ae)\nrun tokensetup outside ngzone (07bb62d)\ntypo (3d331f2)\n\nPull Requests\n\nUpdate sample app and silent-refresh.html script #755, linjie997\nAdd optional state parameter for logout, pmccloghrylaing\nfix customHashFragment usage in tryLoginCodeFlow, roblabat\nreplace document with injectionToken #741, d-moos\nSupport predefined custom parameters extraction from the TokenResponse, vdveer\nFixed not working silent refresh when using 'code' #735, ErazerBrecht\n\nThanks\nBig Thanks to all contributers: Brecht Carlier, Daniel Moos, Jie Lin, Manfred Steyer, Phil McCloghry-Laing, robin labat, vdveer\nAlso, big thanks to jeroenheijmans for doing an awesome job with moderating and analyzing the issues!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/lib/src/auth.config.ts\n            \n            class\n            AuthConfig\n            \n                83 %\n                (45/54)\n            \n        \n        \n            \n                \n                projects/lib/src/base64-helper.ts\n            \n            function\n            b64DecodeUnicode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/base64-helper.ts\n            \n            function\n            base64UrlEncode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/date-time-provider.ts\n            \n            class\n            DateTimeProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/date-time-provider.ts\n            \n            injectable\n            SystemDateTimeProvider\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/encoder.ts\n            \n            class\n            WebHttpUrlEncodingCodec\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/lib/src/events.ts\n            \n            class\n            OAuthErrorEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/events.ts\n            \n            class\n            OAuthEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/events.ts\n            \n            class\n            OAuthInfoEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/events.ts\n            \n            class\n            OAuthSuccessEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/factories.ts\n            \n            function\n            createDefaultLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/factories.ts\n            \n            function\n            createDefaultStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/interceptors/default-oauth.interceptor.ts\n            \n            interceptor\n            DefaultOAuthInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/lib/src/interceptors/default-oauth.interceptor.ts\n            \n            function\n            defaultOAuthInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/interceptors/resource-server-error-handler.ts\n            \n            class\n            OAuthNoopResourceServerErrorHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/interceptors/resource-server-error-handler.ts\n            \n            class\n            OAuthResourceServerErrorHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/oauth-module.config.ts\n            \n            class\n            OAuthModuleConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/oauth-module.config.ts\n            \n            class\n            OAuthResourceServerConfig\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/lib/src/oauth-service.ts\n            \n            injectable\n            OAuthService\n            \n                48 %\n                (85/176)\n            \n        \n        \n            \n                \n                projects/lib/src/provider.ts\n            \n            function\n            provideOAuthClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            class\n            Hash\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            class\n            HMAC\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            function\n            fillBuffer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            function\n            hash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            function\n            hashBlocks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            function\n            hkdf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            function\n            hmac\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            function\n            pbkdf2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            variable\n            blockSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            variable\n            digestLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            variable\n            hkdfSalt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/fast-sha256js.ts\n            \n            variable\n            K\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/hash-handler.ts\n            \n            class\n            HashHandler\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/hash-handler.ts\n            \n            injectable\n            DefaultHashHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/hash-handler.ts\n            \n            function\n            decodeUTF8\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/hash-handler.ts\n            \n            function\n            encodeUTF8\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/jwks-validation-handler.ts\n            \n            class\n            JwksValidationHandler\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/jwks-validation-handler.ts\n            \n            variable\n            err\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/null-validation-handler.ts\n            \n            class\n            NullValidationHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/validation-handler.ts\n            \n            class\n            AbstractValidationHandler\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/validation-handler.ts\n            \n            class\n            ValidationHandler\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/lib/src/token-validation/validation-handler.ts\n            \n            interface\n            ValidationParams\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/tokens.ts\n            \n            variable\n            AUTH_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            class\n            LoginOptions\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            class\n            OAuthLogger\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            class\n            OAuthStorage\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            class\n            ReceivedTokens\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            injectable\n            MemoryStorage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            interface\n            OidcDiscoveryDoc\n            \n                3 %\n                (1/31)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            interface\n            ParsedIdToken\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            interface\n            TokenResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/lib/src/types.ts\n            \n            interface\n            UserInfo\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/lib/src/url-helper.service.ts\n            \n            injectable\n            UrlHelperService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.0.1\n        \n            @angular/common : ^19.0.1\n        \n            @angular/compiler : ^19.0.1\n        \n            @angular/core : ^19.0.1\n        \n            @angular/elements : ^19.0.1\n        \n            @angular/forms : ^19.0.1\n        \n            @angular/platform-browser : ^19.0.1\n        \n            @angular/platform-browser-dynamic : ^19.0.1\n        \n            @angular/router : ^19.0.1\n        \n            @popperjs/core : ^2.9.2\n        \n            @webcomponents/custom-elements : ^1.4.3\n        \n            angular-oauth2-oidc : ^17.0.0\n        \n            angular-oauth2-oidc-jwks : ^17.0.0\n        \n            base64-js : ^1.5.1\n        \n            bootstrap : ^3.4.1\n        \n            fast-sha256 : ^1.3.0\n        \n            jsrsasign : ^11.1.0\n        \n            rxjs : ^6.6.7\n        \n            rxjs-compat : ^6.6.7\n        \n            text-encoder-lite : ^2.0.0\n        \n            tslib : ^2.5.2\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            b64DecodeUnicode   (projects/.../base64-helper.ts)\n                        \n                        \n                            base64UrlEncode   (projects/.../base64-helper.ts)\n                        \n                        \n                            createDefaultLogger   (projects/.../factories.ts)\n                        \n                        \n                            createDefaultStorage   (projects/.../factories.ts)\n                        \n                        \n                            decodeUTF8   (projects/.../hash-handler.ts)\n                        \n                        \n                            defaultOAuthInterceptor   (projects/.../default-oauth.interceptor.ts)\n                        \n                        \n                            encodeUTF8   (projects/.../hash-handler.ts)\n                        \n                        \n                            fillBuffer   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hash   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hashBlocks   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hkdf   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hmac   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            pbkdf2   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            provideOAuthClient   (projects/.../provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/base64-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        b64DecodeUnicode\n                        \n                    \n                \n            \n            \n                \nb64DecodeUnicode(str)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64UrlEncode\n                        \n                    \n                \n            \n            \n                \nbase64UrlEncode(str)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/factories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDefaultLogger\n                        \n                    \n                \n            \n            \n                \ncreateDefaultLogger()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDefaultStorage\n                        \n                    \n                \n            \n            \n                \ncreateDefaultStorage()\n                \n            \n\n\n\n\n        \n    \n    projects/lib/src/token-validation/hash-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeUTF8\n                        \n                    \n                \n            \n            \n                \ndecodeUTF8(s)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                s\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeUTF8\n                        \n                    \n                \n            \n            \n                \nencodeUTF8(arr)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/interceptors/default-oauth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultOAuthInterceptor\n                        \n                    \n                \n            \n            \n                \ndefaultOAuthInterceptor(request: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/token-validation/fast-sha256js.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fillBuffer\n                        \n                    \n                \n            \n            \n                \nfillBuffer(buffer: Uint8Array, hmac: HMAC, info, counter: Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hmac\n                                            \n                                                            HMAC\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                counter\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(data: Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Uint8Array\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashBlocks\n                        \n                    \n                \n            \n            \n                \nhashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                w\n                                            \n                                                        Int32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                v\n                                            \n                                                        Int32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                p\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pos\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                len\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hkdf\n                        \n                    \n                \n            \n            \n                \nhkdf(key: Uint8Array, salt: Uint8Array, info?: Uint8Array, length: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                salt\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    hkdfSalt\n                                            \n\n                                        \n                                        \n                                                info\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    32\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hmac\n                        \n                    \n                \n            \n            \n                \nhmac(key: Uint8Array, data: Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pbkdf2\n                        \n                    \n                \n            \n            \n                \npbkdf2(password: Uint8Array, salt: Uint8Array, iterations: number, dkLen: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                salt\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                iterations\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dkLen\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideOAuthClient\n                        \n                    \n                \n            \n            \n                \nprovideOAuthClient(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            OAuthModuleConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                validationHandlerClass\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    NullValidationHandler\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     EnvironmentProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular. Already prepared for the upcoming OAuth 2.1.\n\nCredits\n\njsrsasign for validating token signature and for hashing\nIdentity Server for testing with an .NET/.NET Core Backend\nKeycloak (Redhat) for testing with Java\nAuth0\n\nResources\n\nSources and Sample: https://github.com/manfredsteyer/angular-oauth2-oidc\nSource Code Documentation: https://manfredsteyer.github.io/angular-oauth2-oidc/docs\nCommunity-provided sample implementation: https://github.com/jeroenheijmans/sample-angular-oauth2-oidc-with-auth-guards/\n\nTested Environment\nSuccessfully tested with Angular 4.3 to Angular 16 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack.\nOn the server-side we've used IdentityServer (.NET / .NET Core), Redhat's Keycloak (Java), and Auth0 (Auth0 is officially supported since version 10 of this lib). For Auth0, please have a look into the respective documentation page here.\nFor using this library with Azure Active Directory (Azure AD), we recommend an additional look to this blog post and the example linked at the end of this blog post.\nAlso, the Okta community created some guidelines on how to use this lib with Okta. See the links at the end of this page for more information.\nAngular 19: Use 19.x versions of this library (should also work with older Angular versions!).\nAngular 18: Use 18.x versions of this library (should also work with older Angular versions!).\nAngular 17: Use 17.x versions of this library (should also work with older Angular versions!).\nAngular 16: Use 16.x versions of this library (should also work with older Angular versions!).\nAngular 15: Use 15.x versions of this library (should also work with older Angular versions!).\nAngular 14: Use 14.x versions of this library (should also work with older Angular versions!).\nAngular 13: Use 13.x versions of this library (should also work with older Angular versions!).\nAngular 12: Use 12.x versions of this library (should also work with older Angular versions!).\nAngular 11: Use 10.x versions of this library (should also work with older Angular versions!).\nAngular 10: Use 10.x versions of this library (should also work with older Angular versions!).\nAngular 9: Use 9.x versions of this library (should also work with older Angular versions!).\nAngular 8: Use 8.x versions of this library.\nAngular 7: Use 7.x versions of this library.\nAngular 6: Use Version 4.x of this library. Version 4.x was tested with Angular 6. You can also try the newer version 5.x of this library which has a much smaller bundle size.\nAngular 5.x or 4.3: If you need support for Angular \nRelease Cycle\n\nWe plan one major release for each Angular version\nWill contain new features\nWill contain bug fixes and PRs\n\n\nCritical bugfixes on demand\n\nContributions\n\nFeel free to file pull requests\n\nThe issues contain some ideas for PRs and enhancements (see labels)\n\nIf you want to contribute to the docs, you can do so in the docs-src folder. Make sure you update summary.json as well. Then generate the docs with the following commands:\nExample :npm install -g @compodoc/compodoc\nnpm run docs\n\nFeatures\n\nLogging in via Code Flow + PKCE\nHence, you are safe for the upcoming OAuth 2.1\n\n\nLogging in via Implicit Flow (where a user is redirected to Identity Provider)\n\"Logging in\" via Password Flow (where a user enters their password into the client)\nToken Refresh for all supported flows\nAutomatically refreshing a token when/some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\nTested with all modern browsers and IE\nToken Revocation according to RFC 7009\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server used in our examples. It assumes, that your Web-App runs on http://localhost:4200\nUsername/Password:\n\nmax/geheim\nbob/bob\nalice/alice\n\nclientIds:\n\nspa (Code Flow + PKCE)\nimplicit (implicit flow)\n\nredirectUris:\n\nlocalhost:[4200-4202]\nlocalhost:[4200-4202]/index.html\nlocalhost:[4200-4202]/silent-refresh.html\n\nInstalling\nExample :npm i angular-oauth2-oidc --saveOption 1: Standalone APIs\nIf you use Standalone Components introduced with Angular 14, you can use our standalone API (call to provideOAuthClient) in your main.ts to setup the OAuthClient:\nExample :// main.ts -- Angular 15+ version\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { provideHttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app/app.component';\nimport { provideOAuthClient } from 'angular-oauth2-oidc';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    provideOAuthClient()\n  ]\n});As Angular 14 does have Standalone Components but no Standalone API for its HttpClient, you need to go with the traditional HttpClientModule in this version:\nExample :// main.ts -- Angular 14 version\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app/app.component';\nimport { provideOAuthClient } from 'angular-oauth2-oidc';\nimport { importProvidersFrom } from '@angular/core';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(HttpClientModule),\n    provideOAuthClient()\n  ]\n});The provideOAuthClient function takes the same parameters as the forRoot function of the OAuthModule that is still in place for the sake of compatibility with existing code bases.\nOption 2: Using NgModules\nExample :import { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n@NgModule({\n  imports: [\n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}Logging in\nSince Version 8, this library supports code flow and PKCE to align with the current draft of the OAuth 2.0 Security Best Current Practice document. This is also the foundation of the upcoming OAuth 2.1.\nTo configure your solution for code flow + PKCE you have to set the responseType to code:\nExample :  import { AuthConfig } from 'angular-oauth2-oidc';\n\n  export const authCodeFlowConfig: AuthConfig = {\n    // Url of the Identity Provider\n    issuer: 'https://idsvr4.azurewebsites.net',\n\n    // URL of the SPA to redirect the user to after login\n    redirectUri: window.location.origin + '/index.html',\n\n    // The SPA's id. The SPA is registerd with this id at the auth-server\n    // clientId: 'server.code',\n    clientId: 'spa',\n\n    // Just needed if your auth server demands a secret. In general, this\n    // is a sign that the auth server is not configured with SPAs in mind\n    // and it might not enforce further best practices vital for security\n    // such applications.\n    // dummyClientSecret: 'secret',\n\n    responseType: 'code',\n\n    // set the scope for the permissions the client should request\n    // The first four are defined by OIDC.\n    // Important: Request offline_access to get a refresh token\n    // The api scope is a usecase specific one\n    scope: 'openid profile email offline_access api',\n\n    showDebugInformation: true,\n  };After this, you can initialize the code flow using:\nExample :this.oauthService.initCodeFlow();There is also a convenience method initLoginFlow which initializes either the code flow or the implicit flow depending on your configuration.\nExample :this.oauthService.initLoginFlow();Also -- as shown in the readme -- you have to execute the following code when bootstrapping to make the library to fetch the token:\nExample :this.oauthService.configure(authCodeFlowConfig);\nthis.oauthService.loadDiscoveryDocumentAndTryLogin();Logging out\nThe logOut method clears the used token store (by default sessionStorage) and forwards the user to the auth servers logout endpoint if one was configured (manually or via the discovery document).\nExample :this.oauthService.logOut();If you want to revoke the existing access token and the existing refresh token before logging out, use the following method:\nExample :this.oauthService.revokeTokenAndLogout();Skipping the Login Form\nIf you don't want to display a login form that tells the user that they are redirected to the identity server, you can use the convenience function this.oauthService.loadDiscoveryDocumentAndLogin(); instead of this.oauthService.loadDiscoveryDocumentAndTryLogin(); when setting up the library.\nThis directly redirects the user to the identity server if there are no valid tokens. Ensure you have your issuer set to your discovery document endpoint!\nCalling a Web API with an Access Token\nYou can automate this task by switching sendAccessToken on and by setting allowedUrls to an array with prefixes for the respective URLs. Use lower case for the prefixes.\nExample :OAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})If you need more versatility, you can look in the documentation how to setup a custom interceptor.\nIn case you are in a standalone application, you have to use provideHttpClientwithdefaultOAuthInterceptor`.\nExample :bootstrapApplication(App, {\n  providers: [\n    provideOAuthClient({\n      resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n    }),\n    provideHttpClient(withInterceptors([defaultOAuthInterceptor]))\n  ]\n})Token Refresh\nSee docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/refreshing-a-token.html\nRouting\nIf you use the PathLocationStrategy (which is on by default) and have a general catch-all-route (path: '**') you should be fine. Otherwise look up the section Routing with the HashStrategy in the documentation.\nImplicit Flow\nNowadays, using code flow + PKCE -- as shown above -- is the recommended OAuth 2/OIDC flow for SPAs. To use the older implicit flow, lookup this docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/using-implicit-flow.html\nMore Documentation (!)\nSee the documentation for more information about this library.\nBreaking Change in Version 9\nWith regards to tree shaking, beginning with version 9, the JwksValidationHandler has been moved to a library of its own. If you need it for implementing implicit flow, please install it using npm:\nExample :\nnpm i angular-oauth2-oidc-jwks --save\nAfter that, you can import it into your application by using this:\nExample :import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';instead of that:\nExample :import { JwksValidationHandler } from 'angular-oauth2-oidc';Please note, that this dependency is not needed for the code flow, which is nowadays the recommended flow for single page applications. This also results in smaller bundle sizes.\nBreaking change in 9.1.0\nThe use of encodeURIComponent on the argument passed to initImplicitFlow and its Code Flow counterparts was mandatory before this version.\nSince that was considered a bug, the need to do so was removed.\nNow the reverse is true if you're upgrading from before 9.0.0: you need to remove any call to encode URI components in your own application, as the library will now do it for you.\nTutorials\n\nTutorial with Demo Servers available online\nAngular Authentication with OpenID Connect and Okta in 20 Minutes\nAdd Authentication to Your Angular PWA\nBuild an Ionic App with User Authentication\nOn-Site Workshops\nAngular 6 with Auth0 using this library\n\nThanks to all Contributors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Manfred Steyer\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 19.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventType   (projects/.../events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/events.ts\n    \n    \n        \n            \n                \n                    \n                    EventType\n                \n            \n            \n                \n                            \"discovery_document_loaded\" | \"jwks_load_error\" | \"invalid_nonce_in_state\" | \"discovery_document_load_error\" | \"discovery_document_validation_error\" | \"user_profile_loaded\" | \"user_profile_load_error\" | \"token_received\" | \"token_error\" | \"code_error\" | \"token_refreshed\" | \"token_refresh_error\" | \"silent_refresh_error\" | \"silently_refreshed\" | \"silent_refresh_timeout\" | \"token_validation_error\" | \"token_expires\" | \"session_changed\" | \"session_error\" | \"session_terminated\" | \"session_unchanged\" | \"logout\" | \"popup_closed\" | \"popup_blocked\" | \"token_revoke_error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONFIG   (projects/.../tokens.ts)\n                        \n                        \n                            blockSize   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            digestLength   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            err   (projects/.../jwks-validation-handler.ts)\n                        \n                        \n                            hkdfSalt   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            K   (projects/.../fast-sha256js.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AUTH_CONFIG')\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/token-validation/fast-sha256js.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        blockSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 64\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digestLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 32\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hkdfSalt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Uint8Array(digestLength)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        K\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n])\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/token-validation/jwks-validation-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        err\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
