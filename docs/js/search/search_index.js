var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractValidationHandler.html",[0,0.079,1,2.69]],["body/classes/AbstractValidationHandler.html",[0,0.075,1,2.557,2,0.764,3,0.454,4,0.506,5,0.454,6,3.36,7,3.944,8,1.388,9,1.472,10,1.659,11,1.472,12,1.882,13,2.781,14,2.578,15,1.759,16,3.389,17,2.209,18,1.173,19,2.781,20,3.389,21,0.563,22,1.472,23,4.136,24,3.439,25,3.326,26,3.057,27,2.557,28,1.723,29,4.048,30,0.897,31,2.69,32,2.781,33,2.077,34,3.687,35,1.833,36,1.327,37,1.437,38,0.02,39,1.457,40,0.848,41,1.173,42,2.557,43,1.852,44,2.382,45,2.781,46,1.695,47,2.69,48,2.781,49,3.687,50,2.781,51,1.898,52,2.781,53,2.781,54,1.638,55,2.37,56,2.781,57,3.962,58,2.69,59,3.802,60,3.625,61,3.057,62,1.363,63,1.587,64,0.937,65,2.557,66,2.306,67,2.642,68,0.727,69,1.865,70,1.865,71,2.054,72,0.488,73,1.261,74,1.098,75,1.161,76,1.161,77,1.161,78,1.589,79,1.865,80,2.054,81,2.054,82,1.098,83,0.89,84,2.069,85,1.865,86,2.781,87,2.054,88,2.054,89,2.054,90,2.054,91,2.054,92,2.054,93,0.624,94,2.054,95,2.054,96,2.054,97,1.589,98,4.06,99,2.054,100,4.06,101,2.054,102,2.054,103,2.054,104,1.397,105,3.662,106,2.054,107,2.054,108,2.054,109,1.865,110,1.04,111,2.054,112,1.714,113,2.054,114,2.054,115,0.007,116,0.01,117,0.007]],["title/classes/CryptoHandler.html",[0,0.079,118,3.223]],["body/classes/CryptoHandler.html",[0,0.095,2,1.451,3,0.861,4,0.961,5,0.861,6,3.662,8,2.634,9,1.873,10,1.695,20,3.951,21,1.069,22,2.274,27,3.951,28,1.858,29,4.254,30,0.861,37,1.38,38,0.018,39,1.247,40,0.814,41,1.126,42,3.255,43,1.778,44,2.274,72,0.52,115,0.013,116,0.016,117,0.013,118,4.732,119,5.314,120,5.106,121,5.106,122,4.378,123,5.106]],["title/interceptors/DefaultOAuthInterceptor.html",[124,3.619,125,2.927]],["body/interceptors/DefaultOAuthInterceptor.html",[0,0.06,3,0.544,4,0.608,5,0.544,14,1.565,21,0.676,22,1.68,28,0.829,30,0.773,37,1.238,38,0.02,39,1.119,40,0.73,41,1.278,43,1.124,55,2.706,68,1.805,72,0.328,84,2.746,93,1.063,104,2.366,115,0.008,116,0.012,117,0.008,125,3.175,126,2.767,127,4.564,128,2.767,129,5.323,130,2.363,131,3.227,132,2.018,133,2.055,134,4.564,135,3.423,136,4.564,137,3.423,138,3.227,139,3.927,140,2.767,141,4.968,142,4.671,143,4.968,144,3.227,145,4.564,146,3.145,147,3.175,148,1.906,149,2.767,150,3.927,151,1.665,152,3.927,153,2.238,154,3.227,155,3.227,156,2.767,157,2.767,158,3.227,159,2.767,160,3.227,161,2.238,162,0.788,163,1.068,164,2.057,165,2.919,166,2.464,167,2.767,168,2.238,169,3.37,170,2.767,171,2.767,172,4.242,173,2.767,174,1.318,175,3.227,176,3.227,177,3.927,178,2.767,179,2.767,180,0.749,181,2.767,182,2.767,183,4.564,184,2.767,185,2.767,186,2.919,187,2.767,188,4.579,189,4.579,190,3.927,191,3.227,192,3.227,193,1.513,194,1.248,195,3.227,196,3.227,197,2.767,198,1.778,199,3.227,200,3.227,201,3.227,202,3.227,203,3.227,204,3.227,205,2.767,206,3.927,207,3.227,208,2.767]],["title/classes/JwksValidationHandler.html",[0,0.079,209,2.494]],["body/classes/JwksValidationHandler.html",[0,0.036,1,3.504,2,0.555,3,0.329,4,0.367,5,0.329,6,3.091,8,1.007,9,1.148,10,1.094,16,1.994,18,0.43,20,2.855,21,0.409,22,1.148,23,3.106,24,2.682,25,2.169,26,2.855,27,2.496,28,1.747,29,3.641,30,0.994,32,1.353,33,1.364,34,2.169,35,2.047,36,0.646,37,1.486,38,0.02,39,1.396,40,0.939,41,1.212,42,1.994,43,1.914,44,2.017,45,1.353,46,1.273,48,1.353,49,3.628,50,1.353,51,1.564,52,1.353,53,1.353,54,0.797,55,1.848,56,1.353,57,3.482,59,2.855,60,1.244,61,2.496,62,0.555,63,0.646,64,1.364,65,1.244,66,1.673,67,2.701,68,0.846,72,0.199,74,0.797,78,3.247,79,1.353,86,1.353,93,0.453,104,2.106,109,3.4,110,2.024,115,0.01,116,0.013,117,0.005,122,2.682,163,1.482,164,1.244,172,1.353,194,1.21,209,1.848,210,4.487,211,2.665,212,1.231,213,3.841,214,3.128,215,2.169,216,2.92,217,0.764,218,2.169,219,1.171,220,1.058,221,1.994,222,1.21,223,3.916,224,3.916,225,3.128,226,1.933,227,3.128,228,3.128,229,3.128,230,3.128,231,3.128,232,3.128,233,3.128,234,3.128,235,3.128,236,3.128,237,3.128,238,1.951,239,3.128,240,0.892,241,3.128,242,3.106,243,3.128,244,2.682,245,3.128,246,3.128,247,2.169,248,1.951,249,3.128,250,1.951,251,1.951,252,3.128,253,5.713,254,1.951,255,4.479,256,1.951,257,1.951,258,1.951,259,1.951,260,1.951,261,1.951,262,1.951,263,3.128,264,1.951,265,1.49,266,3.128,267,3.916,268,4.204,269,1.951,270,1.951,271,3.128,272,3.128,273,1.951,274,1.951,275,2.99,276,1.951,277,1.951,278,1.951,279,5.713,280,1.951,281,1.951,282,1.951,283,1.951,284,3.128,285,3.128,286,3.916,287,1.951,288,1.951,289,1.951,290,1.673,291,1.951,292,3.916,293,3.106,294,4.479,295,4.479,296,2.169,297,1.244,298,1.075,299,1.951,300,1.951,301,1.951,302,1.951,303,1.951,304,1.951,305,1.951,306,1.09,307,1.49,308,0.614,309,3.128,310,1.951,311,3.128,312,1.951,313,1.951,314,1.951,315,3.128,316,1.951,317,1.951,318,1.951,319,1.673,320,1.951,321,1.951,322,1.951,323,1.723,324,1.951,325,1.951,326,1.49,327,1.951,328,1.951,329,1.951,330,1.951,331,1.951,332,1.951,333,1.951,334,1.951]],["title/classes/LoginOptions.html",[0,0.079,335,2.047]],["body/classes/LoginOptions.html",[0,0.088,2,0.6,3,0.562,4,0.397,5,0.356,9,0.774,10,1.512,11,0.774,12,1.364,15,1.101,18,1.194,21,0.442,28,1.919,30,0.914,33,2.046,35,0.964,38,0.02,40,0.812,41,1.416,44,0.774,46,1.448,51,0.995,54,1.359,62,1.539,63,0.698,64,0.735,72,0.598,73,1.602,74,1.359,75,0.911,76,0.911,77,0.911,82,1.359,83,1.549,93,1.257,115,0.005,116,0.009,117,0.005,132,0.735,133,1.782,162,0.813,163,1.101,174,1.684,180,0.773,193,1.331,194,1.288,212,1.047,216,0.964,217,1.323,219,0.631,220,0.57,222,1.288,226,0.911,240,1.521,306,1.886,308,0.663,335,1.614,336,1.089,337,0.6,338,1.809,339,2.11,340,1.884,341,1.999,342,2.127,343,2.127,344,1.884,345,2.127,346,2.11,347,1.101,348,2.849,349,1.602,350,2.399,351,1.718,352,1.359,353,1.718,354,1.521,355,1.718,356,2.11,357,1.614,358,0.9,359,2.199,360,2.27,361,1.521,362,1.614,363,1.614,364,1.521,365,1.718,366,1.203,367,2.415,368,1.614,369,1.718,370,1.718,371,2.628,372,2.11,373,2.02,374,1.718,375,1.16,376,1.614,377,1.718,378,2.794,379,1.912,380,2.11,381,1.521,382,1.999,383,2.11,384,1.718,385,1.437,386,1.718,387,1.521,388,1.614,389,1.437,390,1.718,391,1.718,392,2.11,393,1.437,394,1.718,395,2.471,396,3.119,397,0.964,398,0.735,399,1.089,400,1.718,401,0.964,402,0.774,403,0.862,404,0.964,405,0.964,406,1.023,407,0.964,408,1.089,409,2.629,410,1.089,411,1.089,412,1.089,413,1.089,414,1.089,415,0.911,416,1.089,417,0.698,418,0.862,419,0.862,420,0.862,421,1.089,422,1.023,423,1.089,424,0.735,425,1.089,426,1.089,427,0.964,428,2.629,429,0.964,430,1.089,431,1.023,432,1.089,433,1.089,434,1.089,435,1.718,436,1.437,437,1.718,438,1.684,439,1.614,440,1.089,441,1.023,442,1.089,443,1.089,444,1.023,445,0.698,446,0.663,447,1.089,448,0.964,449,1.089,450,0.631,451,1.023,452,0.774,453,1.089,454,1.089,455,1.089,456,1.089,457,1.089,458,1.089,459,1.089,460,1.089,461,1.089,462,1.089,463,1.089,464,1.089,465,1.089,466,1.089,467,1.089,468,1.089,469,1.089,470,1.089,471,1.089,472,1.089,473,1.089,474,1.089,475,1.089,476,1.089,477,1.089,478,1.089,479,1.089,480,1.089]],["title/classes/NullValidationHandler.html",[0,0.079,481,2.927]],["body/classes/NullValidationHandler.html",[0,0.083,2,1.268,3,0.753,4,0.84,5,0.753,6,3.71,8,2.302,9,1.637,12,2.077,14,2.764,16,3.633,21,0.934,22,2.091,26,3.633,30,0.962,37,1.54,38,0.019,39,1.392,40,0.909,41,1.257,43,1.985,44,2.427,57,4.292,65,3.633,68,1.206,72,0.454,85,3.952,104,1.985,115,0.012,116,0.015,117,0.012,164,4.002,211,3.489,349,1.792,481,3.952,482,5.384,483,4.887,484,4.352,485,5.699,486,4.352,487,5.699,488,4.462,489,4.462,490,4.462,491,4.462]],["title/classes/OAuthErrorEvent.html",[0,0.079,492,2.494]],["body/classes/OAuthErrorEvent.html",[0,0.12,2,1.164,3,1.017,4,0.771,5,0.691,10,1,30,0.691,37,1.107,38,0.02,39,1,40,1.061,41,0.903,46,1.942,64,2.099,72,0.677,115,0.011,116,0.014,117,0.011,130,2.781,198,2.256,221,4.081,424,2.099,492,3.185,493,2.61,494,4.241,495,4.178,496,4.439,497,4.178,498,4.095,499,2.42,500,2.61,501,2.61,502,2.42,503,2.61,504,2.61,505,2.42,506,2.61,507,2.61,508,2.61,509,2.61,510,2.61,511,2.61,512,2.42,513,2.42,514,2.61,515,2.42,516,2.61,517,2.42,518,2.42,519,2.113,520,2.84,521,2.61,522,4.44,523,4.178,524,2.61]],["title/classes/OAuthEvent.html",[0,0.079,494,2.69]],["body/classes/OAuthEvent.html",[0,0.121,2,1.19,3,1.028,4,0.789,5,0.707,10,1.023,30,0.707,37,1.132,38,0.02,39,1.023,40,1.068,41,0.924,46,1.555,64,1.459,72,0.682,115,0.011,116,0.014,117,0.011,130,2.822,198,2.307,221,3.883,424,2.122,492,2.475,493,2.67,494,4.272,495,4.224,496,4.463,497,2.904,499,2.475,500,2.67,501,2.67,502,2.475,503,2.67,504,2.67,505,2.475,506,2.67,507,2.67,508,2.67,509,2.67,510,2.67,511,2.67,512,2.475,513,2.475,514,2.67,515,2.475,516,2.67,517,2.475,518,2.475,519,2.161,520,2.904,521,2.67,522,4.479,523,4.224,524,2.67,525,4.188]],["title/classes/OAuthInfoEvent.html",[0,0.079,524,2.69]],["body/classes/OAuthInfoEvent.html",[0,0.12,2,1.18,3,1.127,4,0.782,5,0.7,10,1.014,30,0.7,37,1.122,38,0.02,39,1.014,40,1.065,41,0.915,46,1.546,64,1.446,72,0.68,115,0.011,116,0.014,117,0.011,130,2.806,198,2.286,221,4.103,424,2.113,492,2.452,493,2.646,494,4.259,495,4.206,496,4.453,497,2.878,499,2.452,500,2.646,501,2.646,502,2.452,503,2.646,504,2.646,505,2.452,506,2.646,507,2.646,508,2.646,509,2.646,510,2.646,511,2.646,512,2.452,513,2.452,514,2.646,515,2.452,516,2.646,517,2.452,518,2.452,519,2.142,520,2.878,521,2.646,522,4.463,523,4.206,524,3.466,526,4.151]],["title/classes/OAuthLogger.html",[0,0.079,407,1.929]],["body/classes/OAuthLogger.html",[0,0.089,2,0.624,3,0.807,4,0.413,5,0.37,9,0.806,10,1.705,11,1.26,12,0.726,15,0.726,18,0.933,21,0.46,22,1.26,28,1.922,30,0.876,33,1.667,37,1.404,38,0.02,39,1.269,40,0.828,41,1.145,43,1.809,44,0.806,46,1.565,51,1.027,54,1.403,62,1.36,63,0.726,64,0.765,72,0.606,73,1.731,74,1.403,75,0.948,76,0.948,77,0.948,82,0.897,83,1.4,93,0.982,115,0.006,116,0.009,117,0.006,132,0.765,133,1.633,162,0.536,163,1.4,174,1.403,180,0.51,193,1.202,194,0.849,212,0.69,216,1.003,217,1.034,219,0.656,220,0.593,240,1.57,306,1.474,308,0.69,335,1.065,336,1.133,340,1.003,341,1.065,342,1.133,343,1.133,344,1.003,345,1.133,347,0.726,348,2.32,349,1.33,350,1.954,351,1.133,352,0.897,353,1.133,354,1.003,355,1.133,357,1.065,358,0.593,359,2.065,360,1.666,361,1.003,362,1.065,363,1.065,364,1.003,365,1.133,366,0.883,367,2.469,368,1.065,369,1.133,370,1.133,373,1.482,374,1.133,375,0.765,376,1.065,377,2.841,378,2.183,379,1.403,381,1.003,382,1.666,384,1.133,385,0.948,386,1.133,387,1.003,388,1.065,389,0.948,390,1.133,391,1.133,393,0.948,394,1.133,395,2.518,396,3.432,397,1.57,398,1.196,399,1.772,400,2.183,401,1.57,402,1.26,403,1.403,404,1.57,405,1.57,406,1.666,407,1.57,408,1.772,409,3.469,410,1.772,411,1.772,412,1.772,413,1.772,414,1.133,415,0.948,416,1.133,417,0.726,418,0.897,419,0.897,420,0.897,421,1.133,422,1.065,423,1.133,424,0.765,425,1.133,426,1.133,427,1.003,428,2.679,429,1.003,430,1.133,431,1.065,432,1.133,433,1.133,434,1.133,435,1.772,436,1.482,437,1.772,438,1.727,439,1.666,440,1.133,441,1.065,442,1.133,443,1.133,444,1.065,445,0.726,446,0.69,447,1.133,448,1.003,449,1.133,450,0.656,451,1.065,452,0.806,453,1.133,454,1.133,455,1.133,456,1.133,457,1.133,458,1.133,459,1.133,460,1.133,461,1.133,462,1.133,463,1.133,464,1.133,465,1.133,466,1.133,467,1.133,468,1.133,469,1.133,470,1.133,471,1.133,472,1.133,473,1.133,474,1.133,475,1.133,476,1.133,477,1.133,478,1.133,479,1.133,480,1.133,527,3.435,528,2.623,529,3.435,530,2.196,531,4.453,532,2.196,533,2.196,534,2.196,535,2.196]],["title/modules/OAuthModule.html",[536,3.223,537,2.69]],["body/modules/OAuthModule.html",[0,0.067,3,0.605,4,0.675,5,0.605,7,2.486,12,1.631,22,1.315,30,0.605,35,1.638,37,0.969,38,0.02,39,0.876,40,0.571,41,0.791,43,1.249,68,1.963,72,0.365,93,0.832,104,1.249,115,0.009,116,0.013,117,0.009,118,3.763,119,3.074,125,3.418,132,1.717,133,1.55,135,2.912,137,3.757,148,2.118,151,1.85,162,0.876,163,1.186,164,4.053,165,3.866,166,2.737,167,3.074,168,2.486,180,0.832,193,1.724,209,2.912,210,3.074,211,2.39,226,1.547,402,2.47,407,2.252,424,1.717,481,3.906,482,3.074,537,3.59,538,2.737,539,4.929,540,3.585,541,4.929,542,4.929,543,3.585,544,6.065,545,3.585,546,2.906,547,5.632,548,4.301,549,4.929,550,3.074,551,4.929,552,2.737,553,3.763,554,3.585,555,3.142,556,3.585,557,3.585,558,3.585,559,4.226,560,4.226,561,3.585,562,2.737,563,2.486,564,3.074,565,2.285,566,4.226,567,5.201,568,3.585,569,3.585]],["title/classes/OAuthModuleConfig.html",[0,0.079,137,2.494]],["body/classes/OAuthModuleConfig.html",[0,0.115,2,1.428,3,0.847,4,0.946,5,0.847,10,1.499,21,1.052,28,1.291,30,0.847,38,0.019,40,0.801,63,1.662,72,0.624,93,1.166,115,0.013,116,0.016,117,0.013,137,3.625,174,2.505,180,1.166,186,3.911,217,1.227,222,2.374,349,1.579,570,5.261,571,4.306,572,4.594,573,5.059,574,5.022,575,3.483,576,4.306,577,4.306,578,4.306,579,3.835,580,3.201,581,3.483,582,3.483,583,4.306]],["title/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.079,555,2.69]],["body/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.113,2,1.386,3,0.823,4,0.918,5,0.823,8,2.516,10,1.472,14,2.922,21,1.021,22,2.211,30,0.823,37,1.318,38,0.019,39,1.191,40,0.777,41,1.075,43,1.698,68,1.629,72,0.613,104,1.698,115,0.013,116,0.016,117,0.013,135,3.863,146,4.035,151,2.516,153,3.381,162,1.472,163,1.994,555,3.841,584,5.166,585,5.166,586,4.993,587,5.359,588,4.876,589,4.181,590,4.181,591,4.181]],["title/classes/OAuthResourceServerConfig.html",[0,0.079,573,3.223]],["body/classes/OAuthResourceServerConfig.html",[0,0.109,2,1.316,3,0.781,4,0.872,5,0.781,10,1.425,21,0.97,28,1.19,30,1.078,38,0.019,40,1.018,41,1.479,63,1.93,72,0.594,93,1.355,115,0.012,116,0.015,117,0.012,137,2.736,174,2.608,180,1.075,186,4.406,217,1.425,222,2.257,349,1.835,371,2.952,570,5.75,571,3.971,572,3.211,573,4.878,575,4.046,576,5.003,577,5.003,578,5.003,579,4.455,580,3.719,581,4.43,582,4.046,583,5.477,592,4.631,593,4.631,594,4.631]],["title/classes/OAuthResourceServerErrorHandler.html",[0,0.079,135,2.494]],["body/classes/OAuthResourceServerErrorHandler.html",[0,0.113,2,1.386,3,0.823,4,0.918,5,0.823,8,2.516,10,1.669,14,2.364,21,1.021,22,2.211,30,0.823,37,1.318,38,0.019,39,1.191,40,0.777,41,1.075,43,1.698,68,1.629,72,0.613,104,1.698,115,0.013,116,0.016,117,0.013,135,3.863,146,4.035,151,2.516,153,3.381,162,1.472,163,1.994,555,3.108,584,5.166,585,5.166,586,4.993,587,5.359,589,4.181,590,4.181,591,4.181,595,4.876]],["title/classes/OAuthStorage.html",[0,0.079,132,1.47]],["body/classes/OAuthStorage.html",[0,0.092,2,0.653,3,0.6,4,0.433,5,0.388,9,0.843,10,1.672,11,0.843,12,0.76,15,0.76,18,0.96,21,0.481,22,1.305,28,1.943,30,0.735,33,1.708,37,1.177,38,0.02,39,1.064,40,0.694,41,0.96,43,1.516,44,0.843,46,1.508,51,1.063,54,1.453,62,1.394,63,0.76,64,0.8,72,0.615,73,1.668,74,1.453,75,0.991,76,0.991,77,0.991,82,0.938,83,1.622,93,1.011,115,0.006,116,0.009,117,0.006,132,1.239,133,1.542,162,0.561,163,0.76,174,1.453,180,0.533,193,1.238,194,0.889,212,0.722,216,2.24,217,1.064,219,0.687,220,0.621,240,1.626,306,1.516,308,0.722,335,1.114,336,1.185,340,1.05,341,1.114,342,1.185,343,1.185,344,1.05,345,1.185,347,0.76,348,2.377,349,1.542,350,2.002,351,1.185,352,0.938,353,1.185,354,1.05,355,1.185,357,1.114,358,0.621,359,2.116,360,1.725,361,1.05,362,1.114,363,1.114,364,1.05,365,1.185,366,0.914,367,2.53,368,1.114,369,1.185,370,1.185,373,1.535,374,1.185,375,0.8,376,1.114,377,1.185,378,2.246,379,1.453,381,1.05,382,1.725,384,1.185,385,0.991,386,1.185,387,1.05,388,1.114,389,0.991,390,1.185,391,1.185,393,0.991,394,1.185,395,2.572,396,3.331,397,1.05,398,0.8,399,1.185,400,2.246,401,1.05,402,0.843,403,0.938,404,1.05,405,1.05,406,1.114,407,1.05,408,1.185,409,2.736,410,1.185,411,1.185,412,1.185,413,1.185,414,1.835,415,1.535,416,1.835,417,1.177,418,1.453,419,1.453,420,1.453,421,1.835,422,1.725,423,1.835,424,1.239,425,1.835,426,1.835,427,1.99,428,2.736,429,1.05,430,1.185,431,1.114,432,1.185,433,1.185,434,1.185,435,1.835,436,1.535,437,1.835,438,1.778,439,1.725,440,1.185,441,1.114,442,1.185,443,1.185,444,1.114,445,0.76,446,0.722,447,1.185,448,1.05,449,1.185,450,0.687,451,1.114,452,0.843,453,1.185,454,1.185,455,1.185,456,1.185,457,1.185,458,1.185,459,1.185,460,1.185,461,1.185,462,1.185,463,1.185,464,1.185,465,1.185,466,1.185,467,1.185,468,1.185,469,1.185,470,1.185,471,1.185,472,1.185,473,1.185,474,1.185,475,1.185,476,1.185,477,1.185,478,1.185,479,1.185,480,1.185,596,3.558,597,3.558,598,3.558,599,2.297,600,2.297,601,2.297]],["title/classes/OAuthSuccessEvent.html",[0,0.079,521,2.69]],["body/classes/OAuthSuccessEvent.html",[0,0.12,2,1.18,3,1.127,4,0.782,5,0.7,10,1.014,30,0.7,37,1.122,38,0.02,39,1.014,40,1.065,41,0.915,46,1.546,64,1.446,72,0.68,115,0.011,116,0.014,117,0.011,130,2.806,198,2.286,221,4.103,424,2.113,492,2.452,493,2.646,494,4.259,495,4.206,496,4.453,497,2.878,499,2.452,500,2.646,501,2.646,502,2.452,503,2.646,504,2.646,505,2.452,506,2.646,507,2.646,508,2.646,509,2.646,510,2.646,511,2.646,512,2.452,513,2.452,514,2.646,515,2.452,516,2.646,517,2.452,518,2.452,519,2.142,520,2.878,521,3.466,522,4.463,523,4.206,524,2.646,602,4.151]],["title/interfaces/OidcDiscoveryDoc.html",[73,1.327,451,2.047]],["body/interfaces/OidcDiscoveryDoc.html",[0,0.084,3,0.531,4,0.37,5,0.332,9,0.721,10,1.48,11,0.721,12,0.65,15,0.65,18,0.868,21,0.412,28,1.969,33,1.567,38,0.02,40,1.139,44,0.721,46,1.399,51,0.941,54,1.285,62,1.279,63,0.65,64,0.685,72,0.583,73,1.547,74,1.285,75,0.848,76,0.848,77,0.848,82,0.803,83,1.302,93,0.914,115,0.005,116,0.008,117,0.005,132,0.685,133,1.414,162,0.48,163,0.65,174,1.837,180,0.456,193,1.119,194,0.761,212,0.618,216,0.898,217,0.961,219,0.941,220,0.851,222,1.217,240,1.438,306,1.371,308,0.618,335,0.953,336,1.014,340,0.898,341,0.953,342,1.014,343,1.014,344,0.898,345,1.014,347,0.65,348,2.181,349,1.237,350,1.837,351,1.014,352,0.803,353,1.014,354,0.898,355,1.014,357,0.953,358,0.531,359,1.942,360,1.526,361,0.898,362,0.953,363,0.953,364,0.898,365,1.014,366,0.809,367,2.03,368,0.953,369,1.014,370,1.014,373,1.358,374,1.014,375,0.685,376,0.953,377,1.014,378,2.03,379,1.285,381,0.898,382,1.526,384,1.014,385,0.848,386,1.014,387,0.898,388,0.953,389,0.848,390,1.014,391,1.014,393,0.848,394,1.014,395,2.386,396,3.048,397,0.898,398,0.685,399,1.014,400,1.624,401,0.898,402,0.721,403,0.803,404,0.898,405,0.898,406,0.953,407,0.898,408,1.014,409,2.539,410,1.014,411,1.014,412,1.014,413,1.014,414,1.014,415,0.848,416,1.014,417,0.65,418,0.803,419,0.803,420,0.803,421,1.014,422,0.953,423,1.014,424,0.685,425,1.014,426,1.014,427,0.898,428,2.709,429,0.898,430,1.014,431,0.953,432,1.014,433,1.014,434,1.014,435,1.624,436,1.358,437,1.624,438,1.837,439,1.526,440,1.014,441,0.953,442,1.014,443,1.014,444,0.953,445,0.65,446,0.618,447,1.014,448,0.898,449,1.014,450,0.941,451,1.526,452,1.651,453,2.321,454,2.321,455,2.321,456,2.321,457,2.321,458,2.321,459,2.321,460,2.321,461,2.321,462,2.321,463,2.321,464,2.321,465,2.321,466,2.321,467,2.321,468,2.321,469,2.321,470,2.321,471,2.321,472,2.321,473,2.321,474,2.321,475,2.321,476,2.321,477,2.321,478,2.321,479,2.321,480,2.321,603,1.161]],["title/interfaces/ParsedIdToken.html",[73,1.327,431,2.047]],["body/interfaces/ParsedIdToken.html",[0,0.093,3,0.616,4,0.448,5,0.401,9,0.872,10,1.564,11,0.872,12,0.786,15,0.786,18,0.981,21,0.498,28,1.943,33,1.739,38,0.02,40,0.907,44,0.872,46,1.782,51,1.33,54,1.816,62,1.419,63,0.786,64,0.828,72,0.622,73,1.694,74,2.2,75,1.026,76,2.155,77,2.155,82,0.971,83,1.472,93,1.033,115,0.006,116,0.009,117,0.006,132,0.828,133,1.57,162,0.581,163,0.786,174,1.492,180,0.552,193,1.264,194,0.92,212,0.747,216,1.086,217,1.087,219,0.711,220,0.642,222,1.413,240,2.281,306,1.549,308,0.747,335,1.153,336,1.226,340,1.086,341,1.153,342,1.226,343,1.226,344,1.086,345,1.226,347,0.786,348,2.421,349,1.399,350,2.039,351,1.226,352,0.971,353,1.226,354,1.086,355,1.226,357,1.153,358,0.642,359,2.155,360,1.771,361,1.086,362,1.153,363,1.153,364,1.086,365,1.226,366,0.939,367,2.295,368,1.153,369,1.226,370,1.226,373,1.577,374,1.226,375,0.828,376,1.153,377,1.226,378,2.295,379,1.492,381,1.086,382,2.157,384,1.226,385,1.026,386,1.226,387,1.086,388,1.153,389,1.026,390,1.226,391,1.226,393,1.026,394,1.226,395,2.613,396,3.235,397,1.086,398,0.828,399,1.226,400,1.885,401,1.086,402,0.872,403,0.971,404,1.086,405,1.086,406,1.153,407,1.086,408,1.226,409,2.78,410,1.226,411,1.226,412,1.226,413,1.226,414,1.226,415,1.026,416,1.226,417,0.786,418,0.971,419,0.971,420,0.971,421,1.226,422,1.153,423,1.226,424,0.828,425,1.226,426,1.226,427,1.086,428,2.935,429,1.086,430,1.226,431,1.771,432,2.576,433,2.576,434,2.576,435,1.885,436,1.577,437,1.885,438,1.816,439,1.771,440,1.226,441,1.153,442,1.226,443,1.226,444,1.153,445,0.786,446,0.747,447,1.226,448,1.086,449,1.226,450,0.711,451,1.153,452,0.872,453,1.226,454,1.226,455,1.226,456,1.226,457,1.226,458,1.226,459,1.226,460,1.226,461,1.226,462,1.226,463,1.226,464,1.226,465,1.226,466,1.226,467,1.226,468,1.226,469,1.226,470,1.226,471,1.226,472,1.226,473,1.226,474,1.226,475,1.226,476,1.226,477,1.226,478,1.226,479,1.226,480,1.226,603,1.404]],["title/classes/ReceivedTokens.html",[0,0.079,395,2.047]],["body/classes/ReceivedTokens.html",[0,0.094,2,0.68,3,0.619,4,0.451,5,0.404,9,0.878,10,1.566,11,0.878,12,0.792,15,0.792,18,0.985,21,0.501,28,1.939,30,0.845,33,1.745,38,0.02,40,0.799,41,1.105,44,0.878,46,1.621,51,1.097,54,1.824,62,1.621,63,0.792,64,0.833,72,0.623,73,1.699,74,2.045,75,1.928,76,1.033,77,1.033,82,0.977,83,1.657,93,1.037,115,0.006,116,0.01,117,0.006,132,0.833,133,1.575,162,0.585,163,0.792,174,1.499,180,0.555,193,1.424,194,0.926,212,0.752,216,1.093,217,1.091,219,0.715,220,0.647,222,1.42,240,1.678,306,1.556,308,1.154,335,1.16,336,1.234,340,1.093,341,1.16,342,1.234,343,1.234,344,1.093,345,1.234,347,0.792,348,2.429,349,1.404,350,2.045,351,1.234,352,0.977,353,1.234,354,1.093,355,1.234,357,1.16,358,0.647,359,2.562,360,1.78,361,1.093,362,1.16,363,1.16,364,1.093,365,1.234,366,0.943,367,2.305,368,1.16,369,1.234,370,1.234,373,1.584,374,1.234,375,0.833,376,1.16,377,1.234,378,2.305,379,1.499,381,1.093,382,1.78,384,1.234,385,1.033,386,1.234,387,1.093,388,1.16,389,1.033,390,1.234,391,1.234,393,1.033,394,1.234,395,2.765,396,3.241,397,1.093,398,0.833,399,1.234,400,1.894,401,1.093,402,0.878,403,0.977,404,1.093,405,1.093,406,1.16,407,1.093,408,1.234,409,2.788,410,1.234,411,1.234,412,1.234,413,1.234,414,1.234,415,1.033,416,1.234,417,0.792,418,0.977,419,0.977,420,0.977,421,1.234,422,1.16,423,1.234,424,0.833,425,1.234,426,1.234,427,1.093,428,2.942,429,1.678,430,2.305,431,1.16,432,1.234,433,1.234,434,1.234,435,1.894,436,1.584,437,1.894,438,1.824,439,1.78,440,1.234,441,1.16,442,1.234,443,1.234,444,1.16,445,0.792,446,0.752,447,1.234,448,1.093,449,1.234,450,0.715,451,1.16,452,0.878,453,1.234,454,1.234,455,1.234,456,1.234,457,1.234,458,1.234,459,1.234,460,1.234,461,1.234,462,1.234,463,1.234,464,1.234,465,1.234,466,1.234,467,1.234,468,1.234,469,1.234,470,1.234,471,1.234,472,1.234,473,1.234,474,1.234,475,1.234,476,1.234,477,1.234,478,1.234,479,1.234,480,1.234,604,2.393,605,2.393,606,2.393,607,2.393]],["title/interfaces/TokenResponse.html",[73,1.327,441,2.047]],["body/interfaces/TokenResponse.html",[0,0.093,3,0.608,4,0.44,5,0.394,9,0.858,10,1.557,11,0.858,12,0.773,15,0.773,18,0.971,21,0.489,28,1.949,33,1.724,38,0.02,40,0.939,41,0.795,44,0.858,46,1.52,51,1.598,54,1.473,62,1.407,63,1.637,64,0.814,72,0.619,73,1.681,74,1.473,75,1.009,76,1.009,77,1.009,82,0.955,83,1.457,93,1.022,115,0.006,116,0.009,117,0.006,132,0.814,133,1.556,162,0.571,163,0.773,174,1.473,180,0.543,193,1.407,194,0.904,212,0.735,216,1.068,217,1.076,219,0.699,220,0.632,222,1.395,240,2.262,306,1.533,308,0.735,335,1.134,336,1.206,340,1.068,341,1.134,342,1.206,343,1.206,344,1.068,345,1.206,347,0.773,348,2.4,349,1.384,350,2.021,351,1.206,352,0.955,353,1.206,354,1.068,355,1.206,357,1.134,358,0.632,359,2.541,360,1.749,361,1.068,362,1.134,363,1.134,364,1.068,365,1.206,366,0.927,367,2.271,368,1.134,369,1.206,370,1.206,373,1.556,374,1.206,375,0.814,376,1.134,377,1.206,378,2.271,379,1.473,381,1.068,382,1.749,384,1.206,385,1.009,386,1.206,387,1.068,388,1.134,389,1.009,390,1.206,391,1.206,393,1.009,394,1.206,395,2.593,396,3.219,397,1.068,398,0.814,399,1.206,400,1.861,401,1.068,402,0.858,403,0.955,404,1.068,405,1.068,406,1.134,407,1.068,408,1.206,409,2.759,410,1.206,411,1.206,412,1.206,413,1.206,414,1.206,415,1.009,416,1.206,417,0.773,418,0.955,419,0.955,420,0.955,421,1.206,422,1.134,423,1.206,424,0.814,425,1.206,426,1.206,427,1.068,428,2.915,429,1.068,430,1.206,431,1.134,432,1.206,433,1.206,434,1.206,435,2.271,436,1.9,437,2.271,438,2.021,439,2.135,440,1.861,441,1.749,442,2.553,443,2.553,444,2.4,445,1.637,446,0.735,447,1.206,448,1.068,449,1.206,450,0.699,451,1.134,452,0.858,453,1.206,454,1.206,455,1.206,456,1.206,457,1.206,458,1.206,459,1.206,460,1.206,461,1.206,462,1.206,463,1.206,464,1.206,465,1.206,466,1.206,467,1.206,468,1.206,469,1.206,470,1.206,471,1.206,472,1.206,473,1.206,474,1.206,475,1.206,476,1.206,477,1.206,478,1.206,479,1.206,480,1.206,603,1.381]],["title/injectables/UrlHelperService.html",[147,2.927,553,3.223]],["body/injectables/UrlHelperService.html",[0,0.079,3,0.708,4,0.79,5,0.708,21,0.879,22,2.01,28,1.767,30,0.924,33,2.252,35,1.918,37,1.481,38,0.02,39,1.338,40,0.873,41,1.208,43,1.908,46,1.838,68,1.135,72,0.427,84,3.548,104,2.124,115,0.011,116,0.014,117,0.011,147,3.799,148,2.48,169,3.018,216,1.918,275,4.183,296,3.799,341,2.657,424,1.462,427,2.504,531,3.6,553,4.183,608,3.6,609,6.099,610,4.198,611,5.479,612,5.479,613,5.479,614,4.198,615,5.479,616,4.198,617,5.479,618,4.198,619,4.198,620,5.479,621,5.479,622,4.198,623,4.198,624,4.198,625,5.479,626,4.198,627,4.198,628,4.198,629,4.198,630,4.198]],["title/interfaces/UserInfo.html",[73,1.327,448,1.929]],["body/interfaces/UserInfo.html",[0,0.095,3,0.766,4,0.463,5,0.414,9,0.901,10,1.577,11,0.901,12,0.813,15,0.813,18,1.001,21,0.514,28,1.942,30,0.414,33,1.769,38,0.02,40,0.392,44,0.901,46,1.554,51,1.12,54,1.529,62,1.443,63,0.813,64,0.856,72,0.629,73,1.719,74,1.529,75,1.06,76,1.06,77,1.06,82,1.003,83,1.502,93,1.054,115,0.006,116,0.01,117,0.006,132,0.856,133,1.597,162,0.6,163,0.813,174,1.529,180,0.57,193,1.29,194,0.95,212,0.772,216,1.712,217,1.109,219,0.734,220,0.664,222,1.449,240,1.712,306,1.581,308,0.772,335,1.191,336,1.267,340,1.123,341,1.191,342,1.267,343,1.267,344,1.123,345,1.267,347,0.813,348,2.463,349,1.428,350,2.074,351,1.267,352,1.003,353,1.267,354,1.123,355,1.267,357,1.191,358,0.664,359,2.192,360,1.816,361,1.123,362,1.191,363,1.191,364,1.123,365,1.267,366,0.963,367,2.342,368,1.191,369,1.267,370,1.267,373,1.617,374,1.267,375,0.856,376,1.191,377,1.267,378,2.342,379,1.529,381,1.123,382,1.816,384,1.267,385,1.06,386,1.267,387,1.123,388,1.191,389,1.06,390,1.267,391,1.267,393,1.06,394,1.267,395,2.651,396,3.266,397,1.123,398,0.856,399,1.267,400,1.933,401,1.123,402,0.901,403,1.003,404,1.123,405,1.123,406,1.191,407,1.123,408,1.267,409,2.821,410,1.267,411,1.267,412,1.267,413,1.267,414,1.267,415,1.06,416,1.267,417,0.813,418,1.003,419,1.003,420,1.003,421,1.267,422,1.191,423,1.267,424,0.856,425,1.267,426,1.267,427,1.123,428,2.973,429,1.123,430,1.267,431,1.191,432,1.267,433,1.267,434,1.267,435,2.342,436,1.959,437,2.342,438,2.074,439,2.201,440,1.267,441,1.191,442,1.267,443,1.267,444,1.191,445,0.813,446,1.178,447,1.933,448,1.712,449,2.62,450,0.734,451,1.191,452,0.901,453,1.267,454,1.267,455,1.267,456,1.267,457,1.267,458,1.267,459,1.267,460,1.267,461,1.267,462,1.267,463,1.267,464,1.267,465,1.267,466,1.267,467,1.267,468,1.267,469,1.267,470,1.267,471,1.267,472,1.267,473,1.267,474,1.267,475,1.267,476,1.267,477,1.267,478,1.267,479,1.267,480,1.267,603,1.451,631,2.456,632,2.456]],["title/classes/ValidationHandler.html",[0,0.079,12,1.396]],["body/classes/ValidationHandler.html",[0,0.081,1,1.913,2,0.853,3,0.506,4,0.565,5,0.506,6,3.02,7,3.544,8,1.548,9,1.101,10,1.678,11,1.101,12,1.854,13,2.081,14,2.108,15,1.438,16,3.258,17,1.653,18,0.959,19,2.081,20,1.913,21,0.628,22,1.595,23,3.014,25,2.081,26,3.258,27,1.913,28,1.594,29,3.572,30,0.733,32,2.081,33,1.78,34,3.014,35,1.371,36,0.993,37,1.175,38,0.02,39,1.249,40,0.693,41,0.959,42,1.913,43,1.514,44,2.404,45,2.081,46,1.593,48,2.081,49,3.544,50,2.081,51,1.912,52,2.081,53,2.081,54,1.225,55,1.773,56,2.081,57,4.102,59,3.953,60,3.791,61,3.258,62,1.453,63,1.691,65,2.771,67,2.816,68,0.811,69,2.081,70,2.081,71,2.291,72,0.52,73,1.607,74,1.225,75,1.295,76,1.295,77,1.295,78,1.773,79,2.081,80,3.319,81,3.319,82,1.775,83,1.438,84,3.2,85,3.014,86,3.014,87,2.291,88,2.291,89,2.291,90,2.291,91,2.291,92,2.291,93,0.697,94,2.291,95,2.291,96,2.291,97,1.773,98,4.279,99,2.291,100,4.279,101,2.291,102,2.291,103,2.291,104,1.514,105,3.903,106,2.291,107,2.291,108,2.291,109,2.081,110,1.161,111,2.291,112,1.913,113,2.291,114,2.291,115,0.008,116,0.011,117,0.008,633,3.001,634,3.001]],["title/interfaces/ValidationParams.html",[57,2.494,73,1.327]],["body/interfaces/ValidationParams.html",[0,0.083,1,1.967,3,0.521,4,0.581,5,0.521,6,1.823,7,2.14,8,1.592,10,1.576,11,1.132,12,1.718,13,2.14,14,2.151,15,1.468,16,1.967,17,1.7,18,0.978,19,2.14,20,1.967,21,0.646,23,3.076,25,2.14,26,1.967,27,1.967,28,1.753,29,3.619,32,2.14,33,1.809,34,3.076,35,1.41,36,1.021,38,0.02,39,0.754,40,0.998,42,1.967,44,2.297,45,2.14,46,1.939,48,2.14,49,3.601,50,2.14,51,1.798,52,2.14,53,2.14,54,1.26,55,1.823,56,2.14,57,3.811,59,3.619,60,3.619,61,2.828,62,1.261,63,1.468,65,1.967,67,2.444,68,0.834,69,2.14,70,2.14,71,2.357,72,0.528,73,1.395,74,2.318,75,2.45,76,2.45,77,2.45,78,3.354,79,3.937,80,2.357,81,2.357,82,1.26,83,1.021,84,2.289,85,2.14,86,3.076,87,2.357,88,2.357,89,2.357,90,2.357,91,2.357,92,2.357,93,0.717,94,2.357,95,2.357,96,2.357,97,1.823,98,4.335,99,2.357,100,4.335,101,2.357,102,2.357,103,2.357,104,1.545,105,3.965,106,2.357,107,2.357,108,2.357,109,2.14,110,1.194,111,2.357,112,1.967,113,2.357,114,2.357,115,0.008,116,0.012,117,0.008,222,1.716,371,2.828,603,1.823]],["title/classes/WebHttpUrlEncodingCodec.html",[0,0.079,635,3.619]],["body/classes/WebHttpUrlEncodingCodec.html",[0,0.077,2,1.177,3,0.699,4,0.78,5,0.699,9,1.519,14,2.633,21,0.867,22,1.992,28,1.929,30,1.085,37,1.738,38,0.02,39,1.571,40,1.025,41,1.418,43,2.24,68,1.119,72,0.421,104,2.24,115,0.011,116,0.014,117,0.011,151,2.137,290,4.656,347,1.797,349,1.707,635,4.656,636,4.141,637,4.656,638,4.656,639,5.43,640,5.43,641,6.059,642,5.43,643,5.43,644,5.43,645,5.43,646,5.43,647,4.141,648,5.43,649,4.141,650,5.43,651,5.43,652,4.141,653,5.43,654,4.141,655,4.141,656,4.141,657,4.141,658,4.141]],["title/changelog.html",[659,2.165,660,2.335,661,3.664]],["body/changelog.html",[12,1.334,15,1.334,18,0.889,22,1.48,36,2.19,38,0.014,51,1.205,62,1.146,67,2.221,93,0.936,97,3.152,110,2.462,112,2.57,115,0.01,116,0.014,117,0.01,132,1.405,133,1.268,146,2.382,180,1.239,193,1.517,194,1.56,211,1.955,212,1.268,217,0.985,218,2.796,219,1.205,220,1.09,226,2.303,306,2.217,326,3.079,349,1.678,352,2.179,358,1.442,366,1.537,379,2.179,403,1.647,404,1.843,419,1.647,420,1.647,438,1.647,446,1.678,450,1.205,484,3.079,515,2.382,528,3.079,546,2.753,662,5.336,663,4.032,664,5.128,665,3.152,666,3.458,667,4.032,668,3.533,669,3.079,670,2.221,671,2.382,672,2.796,673,3.079,674,4.032,675,3.458,676,4.032,677,4.032,678,3.079,679,2.796,680,3.152,681,3.7,682,3.458,683,3.458,684,4.032,685,3.458,686,3.458,687,2.796,688,3.458,689,3.458,690,1.74,691,1.843,692,4.032,693,3.458,694,3.401,695,4.032,696,3.458,697,4.032,698,2.796,699,3.76,700,1.955,701,1.74,702,3.458,703,3.458,704,2.57,705,3.458,706,2.796,707,2.382,708,3.079,709,3.458,710,4.032,711,4.032,712,4.032,713,3.079,714,1.955,715,3.458,716,3.079,717,3.079,718,4.074,719,4.032,720,4.032,721,4.032,722,5.336,723,4.032,724,3.079,725,3.458,726,3.458,727,3.458,728,4.032,729,3.458]],["title/dependencies.html",[730,3.664,731,3.82]],["body/dependencies.html",[38,0.02,70,3.427,115,0.013,116,0.016,117,0.013,148,2.919,153,4.213,265,3.773,550,4.237,637,4.237,731,3.773,732,4.941,733,7.395,734,4.941,735,4.941,736,4.941,737,6.075,738,4.639,739,4.941,740,4.941,741,4.941,742,4.941,743,4.941,744,4.237,745,4.941,746,3.427,747,4.941,748,4.941,749,6.075,750,4.941,751,4.941,752,4.941,753,4.941,754,4.941,755,4.941,756,4.941,757,4.941]],["title/miscellaneous/functions.html",[758,2.165,759,4.29]],["body/miscellaneous/functions.html",[21,1.112,28,1.365,37,1.716,38,0.018,39,1.551,41,1.4,43,1.85,69,4.401,115,0.014,116,0.016,117,0.014,559,5.821,560,5.821,758,3.138,759,4.555,760,6.347,761,6.347,762,6.788,763,6.347,764,5.312,765,5.312,766,6.347,767,5.312,768,5.312]],["title/index.html",[21,0.767,659,2.165,660,2.335]],["body/index.html",[0,0.071,4,0.349,5,0.312,17,1.02,18,1.053,30,0.312,36,0.992,38,0.019,39,0.733,46,0.526,51,0.553,67,1.02,68,1.564,72,0.442,83,0.992,84,1.95,93,0.43,97,1.094,104,1.044,110,1.462,112,1.911,115,0.005,116,0.008,117,0.005,124,1.587,133,1.692,148,1.772,151,0.955,161,2.079,162,1.314,165,1.18,169,1.02,172,1.284,180,0.696,186,1.911,193,1.357,209,1.772,212,0.943,215,2.079,217,0.452,219,0.553,220,0.5,226,0.799,242,1.284,297,2.409,308,0.943,319,1.587,323,1.02,347,0.992,349,0.943,350,0.756,358,1.676,361,0.846,366,1.593,371,1.18,375,1.316,381,0.846,385,1.294,393,0.799,397,1.985,398,0.645,403,1.543,417,0.992,418,0.756,424,0.645,429,1.727,436,1.294,438,1.224,439,1.454,445,0.992,446,1.692,448,0.846,450,1.13,452,0.679,484,2.29,519,1.547,537,1.18,546,0.955,548,2.29,552,2.29,562,1.414,563,1.284,572,1.284,575,1.284,579,1.414,581,2.079,582,1.284,638,1.587,664,2.571,665,2.567,666,2.571,668,3.178,669,1.414,670,2.082,671,1.094,672,1.284,673,1.414,678,3.317,679,2.62,680,1.094,686,1.587,690,2.566,691,1.37,694,2.769,698,3.31,699,1.772,700,2.107,701,2.566,702,1.587,706,1.284,707,1.094,708,1.414,713,1.414,714,0.898,716,1.414,724,1.414,726,3.24,727,1.587,738,1.414,746,1.284,769,3.023,770,2.998,771,1.851,772,1.851,773,1.851,774,2.055,775,1.851,776,1.851,777,1.851,778,1.587,779,1.851,780,1.587,781,3.779,782,1.851,783,1.851,784,2.998,785,2.998,786,2.776,787,1.851,788,1.851,789,2.998,790,1.851,791,2.998,792,1.851,793,1.851,794,2.769,795,1.851,796,2.62,797,3.779,798,1.851,799,3.779,800,1.851,801,1.851,802,1.587,803,2.998,804,1.851,805,1.851,806,1.851,807,1.851,808,1.851,809,1.851,810,2.998,811,1.851,812,2.998,813,1.284,814,1.851,815,2.998,816,1.851,817,1.851,818,1.851,819,2.571,820,1.851,821,1.851,822,1.851,823,1.851,824,3.779,825,1.851,826,1.851,827,2.998,828,1.851,829,1.851,830,1.587,831,1.851,832,1.587,833,1.414,834,1.851,835,1.851,836,1.851,837,1.851,838,1.851,839,1.851,840,1.851,841,1.851,842,5.109,843,1.851,844,1.851,845,1.587,846,1.851,847,1.851,848,1.851,849,1.95,850,1.851,851,3.779,852,1.851,853,1.851,854,1.851,855,2.998,856,2.571,857,2.886,858,1.851,859,1.414,860,1.284,861,1.851,862,2.998,863,1.587,864,1.772,865,1.587,866,1.587,867,1.851,868,1.851,869,1.587,870,1.284,871,1.851,872,1.851,873,2.886,874,1.587,875,1.851,876,1.851,877,2.998,878,1.851,879,2.463,880,2.393,881,2.571,882,1.851,883,3.779,884,3.779,885,1.851,886,1.851,887,1.851,888,1.414,889,1.851,890,1.851,891,3.24,892,2.29,893,2.409,894,2.571,895,1.587,896,1.587,897,2.079,898,1.18,899,1.587,900,1.414,901,1.587,902,1.851,903,0.971,904,2.571,905,1.587,906,1.851,907,1.851,908,1.727,909,1.851,910,1.587,911,2.769,912,1.02,913,1.18,914,1.02,915,1.18,916,1.02,917,1.02,918,1.02,919,1.18,920,1.02,921,1.02,922,1.18,923,1.284,924,1.284,925,1.18,926,1.18,927,0.955,928,1.02,929,2.886,930,1.851,931,3.013,932,1.851,933,1.851,934,2.998,935,1.851,936,2.079,937,1.851,938,1.851,939,1.414,940,2.571,941,3.24,942,1.851,943,1.414,944,1.587,945,1.851,946,1.851,947,1.851,948,1.851,949,1.587,950,1.587,951,1.587,952,1.587,953,1.851,954,2.998,955,1.851,956,1.851,957,1.851,958,1.851,959,1.284,960,1.851,961,1.851,962,1.851,963,2.29,964,1.284,965,1.414,966,1.414,967,1.414,968,1.587,969,1.587,970,1.851,971,2.571,972,1.587,973,1.587,974,1.587,975,1.851,976,2.29,977,1.414,978,2.998,979,1.851,980,1.851,981,1.851,982,1.851,983,1.911,984,1.587,985,1.851,986,1.587,987,1.587,988,1.851,989,1.414,990,1.18,991,1.851,992,1.851,993,1.851,994,1.284,995,1.851,996,3.779,997,1.851,998,1.587,999,1.851,1000,1.414,1001,1.851,1002,1.414,1003,1.851,1004,1.851,1005,1.851]],["title/license.html",[659,2.165,660,2.335,1006,3.664]],["body/license.html",[18,1.281,38,0.015,115,0.012,116,0.015,117,0.012,152,3.941,218,3.187,376,2.229,680,2.715,698,3.187,704,2.93,713,3.509,833,3.509,849,2.371,1007,6.366,1008,4.596,1009,4.596,1010,4.596,1011,4.596,1012,5.807,1013,4.596,1014,4.596,1015,4.596,1016,4.596,1017,4.596,1018,5.807,1019,7.303,1020,4.596,1021,4.596,1022,4.596,1023,4.058,1024,4.596,1025,5.807,1026,3.941,1027,4.596,1028,4.596,1029,4.596,1030,4.596,1031,4.596,1032,4.596,1033,4.596,1034,5.807,1035,4.596,1036,4.596,1037,4.596,1038,4.596,1039,4.596,1040,2.715,1041,5.807,1042,5.807,1043,4.596,1044,4.596,1045,4.596,1046,4.596,1047,4.596,1048,4.596,1049,4.596,1050,4.596,1051,4.596,1052,4.596,1053,4.596,1054,3.941,1055,4.596,1056,4.596,1057,4.596,1058,4.596,1059,4.596,1060,4.596,1061,4.596,1062,4.596,1063,3.941,1064,4.596,1065,4.596,1066,4.596,1067,4.596,1068,4.596]],["title/modules.html",[538,4.198]],["body/modules.html",[38,0.017,115,0.015,116,0.017,117,0.015,537,3.73,538,4.469,994,4.058,1069,5.852,1070,5.852]],["title/overview.html",[1071,4.714]],["body/overview.html",[2,1.588,38,0.017,97,3.3,115,0.015,116,0.017,117,0.015,296,3.874,536,4.993,563,3.874,564,4.79,565,3.561,603,3.3,608,4.79,680,3.3,731,4.265,746,3.874,778,4.79,1071,4.79,1072,5.586,1073,6.539,1074,5.586,1075,5.586]],["title/miscellaneous/typealiases.html",[758,2.165,1076,5.003]],["body/miscellaneous/typealiases.html",[21,1.069,38,0.02,40,0.814,115,0.013,116,0.016,117,0.013,198,2.813,493,3.255,496,3.951,499,3.017,500,3.255,501,3.255,502,3.017,503,3.255,504,3.255,505,3.017,506,3.255,507,3.255,508,3.255,509,3.255,510,3.255,511,3.255,512,3.017,513,3.017,514,3.255,515,3.017,516,3.255,517,3.017,518,3.017,519,2.634,758,3.017,1077,5.106,1078,5.106]],["title/miscellaneous/variables.html",[758,2.165,1079,4.29]],["body/miscellaneous/variables.html",[21,1.152,35,2.962,38,0.018,40,0.877,110,2.129,115,0.014,116,0.017,117,0.014,127,4.718,128,5.557,170,5.557,171,4.718,226,2.797,240,2.515,758,3.251,1079,4.718,1080,6.481,1081,5.503,1082,5.503,1083,5.503,1084,5.503]],["title/additional-documentation/getting-started.html",[337,0.92,659,1.912,660,2.063,903,0.832]],["body/additional-documentation/getting-started.html",[38,0.017,115,0.015,116,0.017,117,0.015,298,3.183,659,3.94,660,4.251,1040,3.414,1085,4.413,1086,5.779,1087,4.007]],["title/additional-documentation/preserving-state-(like-the-requested-url).html",[180,0.609,337,0.746,359,1.133,903,0.675,1088,2.251,1089,1.673]],["body/additional-documentation/preserving-state-(like-the-requested-url).html",[3,0.928,38,0.019,41,1.214,115,0.014,116,0.017,117,0.014,180,1.505,344,2.515,354,2.515,359,2.974,388,2.668,690,2.375,944,4.718,966,4.202,1088,4.718,1089,4.131,1090,5.503,1091,5.503,1092,3.816,1093,5.503,1094,5.503]],["title/additional-documentation/code-flow-+-pcke.html",[38,0.007,337,0.746,701,1.133,796,1.82,903,0.675,1095,2.625]],["body/additional-documentation/code-flow-+-pcke.html",[15,1.278,17,2.128,30,0.652,36,1.278,38,0.019,68,1.044,72,0.393,93,1.204,110,1.495,115,0.01,116,0.013,117,0.01,162,1.43,165,2.463,169,2.128,180,1.204,193,1.474,209,2.282,212,1.215,217,1.267,220,1.044,247,3.596,308,1.63,358,1.044,361,2.37,362,1.873,364,2.37,366,1.333,375,2.039,417,1.278,445,1.937,446,1.215,450,1.155,452,1.417,668,2.282,670,2.857,673,2.95,679,2.679,690,1.667,691,1.765,699,2.282,700,1.873,701,2.9,714,1.873,718,2.95,769,1.765,774,1.903,786,1.993,796,4.837,849,1.993,856,4.446,864,2.282,866,3.313,879,3.02,908,1.765,911,3.305,914,2.128,915,2.463,916,2.128,917,2.128,918,2.128,919,3.305,920,2.128,921,2.857,922,2.463,925,2.463,926,2.463,927,1.993,939,2.95,940,3.313,943,2.95,984,3.313,1087,2.679,1096,3.863,1097,3.313,1098,3.863,1099,3.863,1100,3.863,1101,2.679,1102,5.185,1103,3.863,1104,3.863,1105,2.679,1106,3.863,1107,3.863,1108,4.446,1109,3.313,1110,2.95,1111,3.863,1112,3.863,1113,3.863,1114,2.679,1115,3.863,1116,3.313,1117,3.863,1118,3.863,1119,3.959,1120,3.863,1121,3.863,1122,3.863,1123,3.863,1124,3.863,1125,3.863,1126,3.863,1127,3.863,1128,3.863,1129,3.863,1130,3.863,1131,3.863,1132,3.313,1133,3.863]],["title/additional-documentation/refreshing-a-token.html",[193,0.92,337,0.92,860,2.244,903,0.832]],["body/additional-documentation/refreshing-a-token.html",[3,0.463,5,0.819,15,1.606,17,2.244,18,1.071,30,0.463,35,1.861,36,2.058,38,0.018,46,0.78,62,0.78,68,0.742,72,0.279,83,1.777,110,1.576,115,0.007,116,0.011,117,0.007,133,1.527,142,2.096,157,2.354,159,2.354,162,1.186,163,1.348,169,1.513,180,1.127,193,1.855,212,1.527,217,1.312,220,0.742,226,1.758,242,3.367,244,2.354,275,2.096,296,1.904,298,2.959,306,1.871,307,2.096,308,1.281,352,2.54,358,0.742,366,1.047,375,1.691,398,0.956,402,1.007,403,1.121,417,0.908,444,1.331,445,1.606,446,1.689,450,0.821,452,1.007,546,1.417,580,1.75,659,1.622,665,1.622,668,1.622,670,1.513,671,1.622,672,1.904,687,1.904,690,1.185,691,1.255,693,2.354,699,3.924,700,3.017,701,2.944,704,3.095,706,2.824,707,2.869,708,3.11,709,2.354,714,1.331,716,3.707,769,1.861,786,2.101,796,3.978,845,3.492,849,2.505,859,2.096,860,4.167,863,2.354,870,1.904,879,2.771,880,1.513,888,3.11,896,2.354,897,3.367,898,1.75,904,3.492,908,1.255,910,2.354,911,3.095,912,1.513,913,1.75,914,2.675,915,1.75,916,2.675,917,1.513,918,1.513,919,1.75,920,1.513,921,2.244,922,1.75,923,1.904,924,1.904,925,1.75,926,1.75,927,1.417,928,1.513,943,2.096,963,2.096,964,1.904,968,2.354,969,3.492,977,2.096,998,2.354,1000,2.096,1002,2.096,1023,1.75,1026,2.354,1085,2.096,1101,1.904,1105,1.904,1109,2.354,1110,2.096,1119,2.096,1134,2.746,1135,2.746,1136,3.492,1137,1.622,1138,2.746,1139,4.073,1140,2.746,1141,2.354,1142,2.354,1143,4.073,1144,2.746,1145,2.746,1146,2.354,1147,4.073,1148,2.354,1149,2.746,1150,2.746,1151,2.746,1152,1.75,1153,2.746,1154,2.746,1155,2.746,1156,2.746,1157,2.746,1158,4.073,1159,4.855,1160,1.904,1161,2.746,1162,2.746,1163,2.746,1164,2.746,1165,2.746,1166,3.492,1167,3.492,1168,2.746,1169,2.746,1170,2.354,1171,2.746,1172,2.746,1173,2.354,1174,3.11,1175,2.746,1176,2.746,1177,2.746,1178,2.354,1179,2.746,1180,2.746,1181,2.746,1182,2.354,1183,2.746,1184,2.746,1185,2.096,1186,4.073,1187,2.746,1188,2.746,1189,2.746,1190,2.746,1191,2.746,1192,2.746,1193,2.354,1194,2.746,1195,2.746,1196,2.746,1197,2.746,1198,2.746,1199,2.746,1200,2.746,1201,4.073,1202,2.746,1203,2.746,1204,4.073,1205,4.073,1206,2.746,1207,2.746,1208,2.746,1209,2.746,1210,2.746,1211,2.746,1212,2.746,1213,2.746]],["title/additional-documentation/working-with-httpinterceptors.html",[337,0.92,903,0.832,1214,3.237,1215,3.237]],["body/additional-documentation/working-with-httpinterceptors.html",[0,0.101,10,0.815,14,2.274,18,1.034,28,0.858,38,0.019,41,1.034,55,2.771,62,0.949,63,1.552,68,1.784,72,0.477,84,1.722,93,1.089,104,2.299,115,0.009,116,0.012,117,0.009,125,2.315,126,4.649,130,1.722,132,1.889,133,1.475,134,2.862,135,3.661,136,2.862,137,2.771,139,2.862,140,2.862,141,4.022,142,2.549,143,4.022,145,2.862,146,3.204,147,3.252,148,1.972,149,2.862,150,4.649,151,1.722,161,3.76,162,1.325,163,2.05,164,2.99,165,2.128,166,2.549,168,3.252,172,4.078,173,2.862,174,1.363,177,2.862,178,2.862,179,2.862,180,0.775,181,2.862,182,2.862,183,5.043,184,2.862,185,2.862,186,3.749,187,2.862,190,2.862,193,1.541,205,2.862,206,4.022,208,2.862,217,1.146,226,2.024,293,3.252,323,1.839,347,1.552,358,0.902,364,1.525,366,0.858,398,1.163,402,1.225,404,1.525,405,1.525,555,2.128,572,2.315,575,3.252,581,3.252,582,2.315,586,2.549,587,3.581,682,2.862,769,1.525,774,1.225,832,2.862,833,2.549,849,1.722,892,2.549,898,2.128,899,4.022,964,2.315,971,4.022,972,2.862,973,2.862,974,2.862,1110,2.549,1114,2.315,1137,1.972,1148,2.862,1173,2.862,1216,3.338,1217,2.862,1218,3.338,1219,3.338,1220,2.862,1221,2.862,1222,3.338,1223,3.338,1224,3.338,1225,3.338,1226,3.338,1227,3.338,1228,3.338,1229,3.338,1230,2.549,1231,3.338,1232,3.338,1233,3.338,1234,3.338,1235,3.338,1236,3.338,1237,3.338,1238,3.338,1239,2.862,1240,3.338,1241,3.338,1242,3.338,1243,2.549,1244,3.338,1245,3.338,1246,3.338,1247,3.338,1248,3.338,1249,3.338,1250,3.338,1251,3.338]],["title/additional-documentation/callback-after-login.html",[337,0.92,690,1.397,903,0.832,1252,2.775]],["body/additional-documentation/callback-after-login.html",[38,0.019,51,1.891,62,1.501,63,1.747,115,0.014,116,0.016,117,0.014,323,2.91,344,2.891,373,2.28,382,2.561,387,2.891,403,2.157,690,2.73,813,3.662,959,3.662,1054,4.529,1089,3.367,1092,3.662,1178,4.529,1252,5.424,1253,5.282,1254,5.282,1255,5.282,1256,5.282,1257,5.282,1258,5.282]],["title/additional-documentation/custom-query-parameters.html",[37,0.783,337,0.824,347,0.959,903,0.745,1259,2.486]],["body/additional-documentation/custom-query-parameters.html",[33,1.94,37,1.505,38,0.019,115,0.014,116,0.017,117,0.014,217,1.361,306,1.94,347,2.16,700,2.701,701,2.404,1259,4.775,1260,5.569,1261,4.775,1262,5.569,1263,5.569,1264,5.569,1265,5.569,1266,5.569,1267,5.569,1268,5.569]],["title/additional-documentation/events.html",[337,1.041,379,1.496,903,0.942]],["body/additional-documentation/events.html",[5,0.688,18,0.899,28,1.048,36,1.349,38,0.019,62,1.159,68,1.102,78,2.409,83,1.349,115,0.011,116,0.014,117,0.011,146,2.409,163,1.349,168,3.727,193,1.159,198,2.246,268,3.496,297,3.426,323,2.246,338,3.496,340,1.863,352,2.195,358,1.453,359,2.32,360,1.977,366,1.048,368,2.606,379,2.786,381,3.036,389,1.76,401,1.863,450,1.219,492,3.175,499,2.409,502,2.409,505,2.409,512,2.409,513,2.409,517,2.409,528,3.113,665,3.175,668,2.409,675,3.496,681,2.827,689,3.496,694,2.599,699,3.552,700,1.977,701,1.76,704,2.599,707,2.409,769,1.863,774,1.972,864,2.409,951,3.496,967,3.113,990,3.426,994,2.827,1089,3.426,1146,4.609,1174,3.113,1217,3.496,1269,4.077,1270,4.077,1271,4.077,1272,4.077,1273,4.077,1274,3.496,1275,4.077,1276,4.077,1277,4.077,1278,4.077,1279,3.496,1280,4.077,1281,4.077,1282,4.077,1283,4.077,1284,4.077,1285,4.077,1286,5.375,1287,6.956,1288,5.375,1289,4.077,1290,4.077,1291,3.496,1292,4.077,1293,3.496,1294,3.496,1295,4.077,1296,4.077,1297,4.077,1298,5.375,1299,5.375,1300,4.077,1301,4.077,1302,4.077,1303,3.113,1304,4.077,1305,3.496,1306,4.077,1307,4.077]],["title/additional-documentation/routing-with-the-hashstrategy.html",[337,0.92,903,0.832,983,2.063,989,2.471]],["body/additional-documentation/routing-with-the-hashstrategy.html",[13,3.372,18,1.073,19,4.171,33,1.694,36,1.99,38,0.018,62,1.382,72,0.495,83,1.609,93,1.129,115,0.013,116,0.016,117,0.013,194,1.881,226,2.099,323,2.679,340,2.222,348,2.358,357,2.358,363,2.358,486,3.713,536,3.713,774,1.784,802,5.6,897,3.372,900,3.713,914,3.314,929,3.713,952,4.17,963,3.713,983,3.834,986,4.17,989,4.593,1101,3.372,1114,3.372,1160,3.372,1166,5.158,1185,3.713,1193,4.17,1230,3.713,1308,4.863,1309,4.863,1310,6.824,1311,6.531,1312,4.863,1313,4.863,1314,4.863,1315,4.863,1316,4.863,1317,4.863,1318,4.863,1319,4.863,1320,3.713,1321,4.863,1322,4.863,1323,4.863]],["title/additional-documentation/adapt-id_token-validation.html",[51,0.867,211,1.406,337,0.824,903,0.745,1324,2.486]],["body/additional-documentation/adapt-id_token-validation.html",[11,1.738,12,2.136,30,0.799,38,0.019,51,1.769,59,3.02,60,3.02,61,3.02,62,1.682,67,3.261,68,1.281,73,1.49,78,2.799,82,1.935,84,2.445,110,1.833,115,0.012,116,0.015,117,0.012,209,3.814,211,2.87,212,1.861,213,4.063,219,1.416,220,1.281,306,2.062,358,1.281,366,1.218,393,2.045,401,2.165,402,1.738,405,2.705,406,2.87,417,1.568,418,1.935,422,2.298,481,3.285,565,3.02,567,4.063,687,3.285,694,3.02,769,2.165,774,1.738,900,3.618,908,2.165,939,3.618,977,3.618,1243,3.618,1324,4.063,1325,4.738,1326,4.738,1327,4.738,1328,4.738,1329,4.063,1330,4.738,1331,4.738,1332,4.063,1333,4.063,1334,4.738,1335,4.063,1336,4.738]],["title/additional-documentation/session-checks.html",[337,0.92,681,2.244,903,0.832,1303,2.471]],["body/additional-documentation/session-checks.html",[30,0.726,38,0.019,68,1.164,72,0.438,83,1.425,93,1,115,0.011,116,0.014,117,0.011,169,2.372,197,3.692,217,1.052,247,2.986,298,2.372,306,1.5,347,1.425,349,1.354,352,1.758,358,1.164,366,1.107,379,1.758,393,1.858,438,1.758,445,1.425,446,1.354,450,1.665,452,1.58,518,3.291,519,2.222,668,2.544,669,3.288,680,2.544,681,4.802,683,3.692,685,3.692,687,2.986,688,3.692,691,2.545,704,3.55,706,2.986,714,2.088,725,3.692,769,1.968,774,2.044,780,3.692,786,3.185,864,3.291,870,2.986,879,2.222,880,2.372,888,3.288,905,3.692,911,3.935,912,2.372,913,2.745,915,2.745,916,3.068,917,2.372,919,2.745,927,2.222,928,2.372,929,3.288,966,3.288,1063,3.692,1097,3.692,1152,2.745,1167,3.692,1185,3.288,1239,3.692,1293,3.692,1303,4.714,1333,3.692,1337,4.306,1338,4.306,1339,4.306,1340,5.57,1341,4.306,1342,4.306,1343,4.306,1344,4.306,1345,3.288,1346,4.306,1347,5.57,1348,4.306,1349,5.57,1350,4.306,1351,4.306,1352,4.306,1353,4.306]],["title/additional-documentation/server-side-rendering.html",[162,0.708,337,0.824,418,1.184,903,0.745,1354,2.486]],["body/additional-documentation/server-side-rendering.html",[38,0.016,115,0.014,116,0.017,117,0.014,162,1.681,293,3.804,349,1.725,418,2.81,705,4.704,774,2.013,794,3.497,898,3.497,1137,3.241,1354,5.9,1355,5.486,1356,5.486,1357,5.486,1358,5.486,1359,5.486,1360,5.486,1361,5.486,1362,5.486,1363,5.486,1364,5.486]],["title/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[219,0.611,220,0.553,337,0.581,700,0.992,701,0.883,774,0.75,903,0.526,908,0.934,1023,1.303]],["body/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[0,0.076,11,1.499,15,1.352,18,1.187,38,0.019,40,0.651,72,0.416,110,1.581,115,0.011,116,0.014,117,0.011,133,1.692,162,1.315,180,1.485,215,2.833,217,1.315,219,1.609,220,1.455,222,1.581,297,2.605,298,2.251,308,1.893,350,1.668,375,2.096,389,1.764,398,1.423,415,1.764,417,1.352,419,1.668,420,1.668,436,1.764,445,1.352,446,1.893,450,1.221,519,2.108,546,2.777,580,2.605,670,2.965,671,2.414,678,3.12,679,2.833,680,2.414,690,2.598,691,1.867,700,1.981,701,1.764,714,1.981,717,3.12,774,1.499,786,2.777,794,2.605,849,2.108,869,3.504,873,3.12,879,3.106,880,2.251,893,2.605,903,1.05,908,2.46,912,2.965,914,2.251,916,2.251,917,2.251,918,2.251,920,2.251,921,2.251,927,2.108,928,2.251,931,2.833,936,2.833,959,2.833,965,3.12,976,3.12,990,2.605,1023,2.605,1040,2.414,1087,2.833,1092,2.833,1137,2.414,1152,2.605,1160,2.833,1320,3.12,1345,3.12,1365,3.504,1366,4.086,1367,4.086,1368,3.504,1369,3.12,1370,3.12,1371,3.504,1372,3.504,1373,4.086,1374,4.086,1375,4.086,1376,3.504,1377,3.504,1378,3.504,1379,3.504,1380,4.086]],["title/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[36,0.677,211,0.992,219,0.611,220,0.553,308,0.643,337,0.581,691,0.934,903,0.526,1381,2.045]],["body/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[18,0.891,30,0.902,38,0.019,64,1.408,68,1.092,72,0.411,93,0.938,115,0.01,116,0.014,117,0.01,162,0.987,169,2.226,180,1.538,194,2.067,211,2.903,212,1.271,217,1.463,218,2.802,219,2.034,220,1.839,226,1.744,308,2.083,354,1.847,358,1.092,366,1.373,375,1.408,402,1.483,417,1.337,438,1.65,445,1.768,446,1.271,450,1.79,452,2.197,565,3.406,672,2.802,690,1.744,691,2.911,694,2.576,714,1.96,715,3.465,729,5.133,769,1.847,774,1.483,786,2.757,864,3.537,879,3.089,880,2.226,911,3.816,912,2.226,913,2.576,914,2.226,915,2.576,916,2.226,917,2.226,918,2.226,919,2.576,920,2.226,921,2.226,922,2.576,923,2.802,924,2.802,925,2.576,926,2.576,927,2.085,928,2.226,987,3.465,1040,2.388,1105,2.802,1170,3.465,1261,5.133,1279,3.465,1382,4.041,1383,5.462,1384,4.041,1385,4.582,1386,4.041,1387,4.041,1388,4.041,1389,4.041,1390,4.041,1391,4.041,1392,4.041,1393,4.041,1394,4.041,1395,4.041,1396,4.041,1397,3.465,1398,3.465,1399,4.041]],["title/additional-documentation/using-systemjs.html",[36,1.071,337,0.92,903,0.832,1400,2.775]],["body/additional-documentation/using-systemjs.html",[36,1.671,38,0.019,115,0.013,116,0.016,117,0.013,156,4.33,265,4.701,358,1.869,366,1.707,546,2.605,744,4.33,769,3.159,865,4.33,990,3.219,1174,3.856,1400,5.695,1401,6.156,1402,5.05,1403,5.05,1404,5.05,1405,5.05,1406,6.156,1407,6.156,1408,5.05,1409,5.05,1410,5.05,1411,5.05,1412,5.05,1413,5.05,1414,5.05,1415,5.05]],["title/additional-documentation/original-config-api.html",[337,0.824,546,1.496,670,1.597,671,1.713,903,0.745]],["body/additional-documentation/original-config-api.html",[0,0.073,15,1.286,18,0.857,30,0.656,35,1.777,38,0.019,39,0.95,72,0.396,110,1.504,115,0.01,116,0.014,117,0.01,130,2.006,133,1.637,162,1.435,180,1.363,193,1.105,211,2.847,212,1.222,215,2.696,217,1.272,219,1.875,220,1.695,222,1.504,298,2.142,308,1.846,358,1.051,366,0.999,373,1.678,375,2.045,389,1.678,398,1.814,417,1.286,445,1.286,446,1.972,450,1.162,452,1.426,546,3.03,580,2.478,665,2.297,670,3.235,671,3.077,690,2.534,691,1.777,707,2.297,714,1.885,774,1.426,786,2.006,794,3.319,813,2.696,849,2.687,870,2.696,873,2.969,879,3.03,880,2.142,893,3.319,903,0.999,908,1.777,912,2.142,913,2.478,914,2.142,916,2.142,917,2.142,918,2.142,920,2.142,921,2.142,922,2.478,923,2.696,924,2.696,925,2.478,926,2.478,927,2.006,928,2.142,931,2.696,936,2.696,965,2.969,976,2.969,983,2.478,990,2.478,1040,2.297,1085,2.969,1087,2.696,1092,2.696,1105,2.696,1152,2.478,1220,3.334,1221,3.334,1294,3.334,1365,3.334,1368,3.334,1369,2.969,1370,2.969,1376,3.334,1377,3.334,1378,4.465,1379,3.334,1383,4.465,1385,3.334,1397,3.334,1398,3.334,1416,3.334,1417,3.334,1418,3.888,1419,3.334,1420,3.888,1421,3.888,1422,3.888,1423,3.888,1424,3.888,1425,3.888]],["title/additional-documentation/using-password-flow.html",[36,0.959,337,0.824,701,1.251,857,2.213,903,0.745]],["body/additional-documentation/using-password-flow.html",[0,0.071,3,0.421,11,0.915,17,2.087,18,1.214,36,2.145,38,0.019,39,0.609,40,0.397,43,0.868,51,0.745,72,0.385,104,0.868,110,0.964,115,0.006,116,0.01,117,0.006,130,1.286,133,1.609,161,2.627,162,1.416,180,1.064,193,1.712,212,0.784,217,1.345,219,1.53,220,1.383,222,1.465,247,2.627,297,1.589,298,2.819,306,1.319,307,1.903,308,1.731,323,1.373,326,2.892,349,1.822,350,1.018,366,0.973,373,1.977,375,2.018,385,1.635,387,1.139,397,1.139,398,1.319,415,1.076,417,2.145,419,1.018,420,1.018,427,2.339,429,2.339,436,1.076,445,1.516,446,1.951,450,1.132,483,2.138,486,1.903,665,1.473,690,1.635,696,2.138,699,2.238,700,1.837,701,2.883,703,2.138,707,1.473,714,2.222,717,1.903,718,1.903,724,2.892,738,2.892,774,1.681,786,2.364,794,2.415,813,1.729,830,3.248,849,1.286,857,4.854,859,1.903,860,1.729,864,2.238,874,3.248,879,2.84,880,2.087,881,3.248,893,2.92,897,1.729,898,1.589,901,2.138,908,2.339,912,2.524,918,2.087,920,2.087,921,2.087,927,2.364,928,2.087,931,2.627,936,2.627,941,2.138,949,3.248,950,3.248,959,3.177,964,1.729,967,3.498,983,1.589,1023,2.92,1089,1.589,1108,5.558,1114,2.627,1116,3.248,1119,3.498,1132,2.138,1136,2.138,1137,3.252,1141,2.138,1142,3.248,1152,2.92,1160,1.729,1182,2.138,1243,1.903,1274,2.138,1305,2.138,1320,1.903,1329,2.138,1332,2.138,1335,3.248,1345,2.892,1369,2.892,1370,2.892,1371,2.138,1372,2.138,1416,2.138,1417,2.138,1419,2.138,1426,2.493,1427,2.493,1428,2.493,1429,3.788,1430,2.493,1431,2.493,1432,2.493,1433,2.493,1434,2.493,1435,2.493,1436,2.493,1437,2.493,1438,2.493,1439,5.117,1440,3.788,1441,3.788,1442,3.788,1443,3.788,1444,3.788,1445,3.788,1446,3.788,1447,3.788,1448,2.493,1449,2.493,1450,2.493,1451,2.493,1452,2.493,1453,2.493,1454,2.493,1455,2.493,1456,2.493,1457,3.788,1458,2.493,1459,2.493,1460,2.493,1461,2.493,1462,3.788,1463,2.493,1464,3.788,1465,2.493,1466,2.493,1467,2.493,1468,2.493,1469,2.493,1470,2.493]],["title/additional-documentation/configure-custom-oauthstorage.html",[132,1.01,337,0.824,347,0.959,903,0.745,908,1.325]],["body/additional-documentation/configure-custom-oauthstorage.html",[0,0.105,18,1.243,36,1.865,38,0.019,68,1.524,72,0.574,104,1.528,115,0.011,116,0.015,117,0.011,132,2.29,151,2.264,226,1.894,242,3.043,293,3.043,347,2.061,350,1.792,358,1.186,366,1.128,371,2.797,385,2.433,398,1.528,402,1.61,415,2.837,419,2.842,420,2.302,537,2.797,548,3.351,552,4.305,562,3.351,563,3.043,565,2.797,566,3.763,691,2.847,698,3.043,746,3.043,769,2.005,774,1.61,819,3.763,891,5.341,892,3.351,893,3.594,894,3.763,895,4.834,908,2.005,994,3.043,1000,4.305,1002,3.351,1040,2.592,1101,4.32,1137,2.592,1230,3.351,1291,3.763,1471,4.388,1472,4.388,1473,4.388,1474,4.388,1475,4.388,1476,5.638,1477,4.388]]],"invertedIndex":[["",{"_index":38,"title":{"additional-documentation/code-flow-+-pcke.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["0",{"_index":275,"title":{},"body":{"classes/JwksValidationHandler.html":{},"injectables/UrlHelperService.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["0.33",{"_index":1211,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["0.35.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1209,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["0.9.1",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":296,"title":{},"body":{"classes/JwksValidationHandler.html":{},"injectables/UrlHelperService.html":{},"overview.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["1.0",{"_index":1339,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["1.0.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":171,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["19",{"_index":1075,"title":{},"body":{"overview.html":{}}}],["1_0.html#tokenendpoint",{"_index":440,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1_0.html#userinfo",{"_index":447,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["2",{"_index":97,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":1100,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["2.1",{"_index":669,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["20",{"_index":998,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["20.000",{"_index":1199,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["2017",{"_index":1009,"title":{},"body":{"license.html":{}}}],["3.1",{"_index":1216,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["3.3.7",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["4.3",{"_index":818,"title":{},"body":{"index.html":{}}}],["4.x",{"_index":812,"title":{},"body":{"index.html":{}}}],["401",{"_index":1224,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["403",{"_index":1225,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["4202",{"_index":885,"title":{},"body":{"index.html":{}}}],["4202]/index.html",{"_index":886,"title":{},"body":{"index.html":{}}}],["4202]/silent",{"_index":887,"title":{},"body":{"index.html":{}}}],["4711",{"_index":1266,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["4th",{"_index":924,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["5",{"_index":778,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.x",{"_index":815,"title":{},"body":{"index.html":{}}}],["6",{"_index":781,"title":{},"body":{"index.html":{}}}],["6.5.2",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":241,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["7",{"_index":801,"title":{},"body":{"index.html":{}}}],["75",{"_index":1202,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["8",{"_index":1096,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["8.0.12",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["8089|4200",{"_index":884,"title":{},"body":{"index.html":{}}}],["9]{3",{"_index":108,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["_throw(err",{"_index":1234,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["a021627fd9d3the",{"_index":1361,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["above",{"_index":1040,"title":{},"body":{"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["abstraction",{"_index":120,"title":{},"body":{"classes/CryptoHandler.html":{}}}],["abstractvalidationhandler",{"_index":1,"title":{"classes/AbstractValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["abstractvalidationhandler:39",{"_index":259,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["abstractvalidationhandler:44",{"_index":258,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["abstractvalidationhandler:69",{"_index":257,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["abstractvalidationhandler:86",{"_index":256,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["access",{"_index":967,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["access_token",{"_index":63,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{}}}],["accesstoken",{"_index":75,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["according",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["acr_values_supported",{"_index":464,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["action",{"_index":1063,"title":{},"body":{"license.html":{},"additional-documentation/session-checks.html":{}}}],["activate",{"_index":1347,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["activated",{"_index":1341,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["actual",{"_index":351,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["adapt",{"_index":1324,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["add",{"_index":1000,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["adding",{"_index":1404,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["addition",{"_index":1344,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["additional",{"_index":337,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{}}}],["adhere",{"_index":1393,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["adjust",{"_index":1206,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["against",{"_index":61,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["alg",{"_index":49,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.charat(0",{"_index":322,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["alg.match(/^.s[0",{"_index":107,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.substr(2",{"_index":114,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg2kty(alg",{"_index":320,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["algorithm",{"_index":29,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithms",{"_index":122,"title":{},"body":{"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{}}}],["aliases",{"_index":1077,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1098,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["allow",{"_index":1143,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["allowed",{"_index":239,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["allowedalgorithms",{"_index":223,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["allowedurls",{"_index":581,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["allows",{"_index":638,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["already",{"_index":13,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["alternative",{"_index":1169,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["although",{"_index":1441,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["and/or",{"_index":1032,"title":{},"body":{"license.html":{}}}],["angular",{"_index":769,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["angular/animations",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":550,"title":{},"body":{"modules/OAuthModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":151,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["angular/compiler",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":148,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["angular/elements",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":773,"title":{},"body":{"index.html":{}}}],["another",{"_index":1160,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["anymore",{"_index":391,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["aot",{"_index":1475,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["api",{"_index":670,"title":{"additional-documentation/original-config-api.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["apis",{"_index":782,"title":{},"body":{"index.html":{}}}],["app",{"_index":873,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["app.component.html",{"_index":935,"title":{},"body":{"index.html":{}}}],["app/home.html",{"_index":945,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":893,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["applicable",{"_index":1301,"title":{},"body":{"additional-documentation/events.html":{}}}],["application",{"_index":904,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["applications",{"_index":1115,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["appmodule",{"_index":895,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["approach",{"_index":1165,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["approutermodule",{"_index":1315,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["arising",{"_index":1066,"title":{},"body":{"license.html":{}}}],["array",{"_index":582,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["array.isarray(params.jwks['keys",{"_index":273,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["aspnetcore",{"_index":1363,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["asset",{"_index":1181,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["assets",{"_index":1184,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["associated",{"_index":1020,"title":{},"body":{"license.html":{}}}],["asstring",{"_index":92,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["assumes",{"_index":872,"title":{},"body":{"index.html":{}}}],["async",{"_index":25,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["at_hash",{"_index":60,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["athash",{"_index":98,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["attacks",{"_index":365,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["auth",{"_index":375,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["auth.config",{"_index":930,"title":{},"body":{"index.html":{}}}],["auth_config",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcodeflowconfig",{"_index":1103,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["authconfig",{"_index":911,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["authenticated",{"_index":1359,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["authentication",{"_index":996,"title":{},"body":{"index.html":{}}}],["authorization_endpoint",{"_index":453,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["authors",{"_index":1056,"title":{},"body":{"license.html":{}}}],["authstorage",{"_index":139,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["automate",{"_index":968,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["automatically",{"_index":706,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{}}}],["available",{"_index":994,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["avoid",{"_index":363,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["await",{"_index":89,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["b",{"_index":1434,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["b64decodeunicode",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b64decodeunicode(str",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["back",{"_index":1379,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["backend",{"_index":788,"title":{},"body":{"index.html":{}}}],["base",{"_index":1385,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["base64",{"_index":70,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"dependencies.html":{}}}],["base64urlencode",{"_index":69,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{}}}],["base64urlencode(leftmosthalf",{"_index":99,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["base64urlencode(str",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":1305,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["bearer",{"_index":205,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["beaugrand",{"_index":1403,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["before",{"_index":707,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["beginning",{"_index":780,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{}}}],["below",{"_index":1141,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["best",{"_index":361,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["better",{"_index":696,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["between",{"_index":1136,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["blog",{"_index":1356,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["boolean",{"_index":174,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["bootstrap",{"_index":746,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bootstrapping",{"_index":1131,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["both",{"_index":1139,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["breaking",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1070,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":738,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["bug",{"_index":825,"title":{},"body":{"index.html":{}}}],["bugfixes",{"_index":829,"title":{},"body":{"index.html":{}}}],["build",{"_index":1002,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bundle",{"_index":784,"title":{},"body":{"index.html":{}}}],["bundling",{"_index":806,"title":{},"body":{"index.html":{}}}],["bytearrayasstring",{"_index":332,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["c",{"_index":1008,"title":{},"body":{"license.html":{}}}],["calchash",{"_index":20,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calchash(valuetohash",{"_index":27,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calculates",{"_index":32,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["call",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["callback",{"_index":1252,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"additional-documentation/callback-after-login.html":{}}}],["called",{"_index":373,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["calling",{"_index":966,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/session-checks.html":{}}}],["calls",{"_index":576,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["care",{"_index":1148,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["case",{"_index":323,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["cases",{"_index":1332,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["catch",{"_index":985,"title":{},"body":{"index.html":{}}}],["catch(err",{"_index":1190,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["catcherror",{"_index":154,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["change",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":661,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["charactes",{"_index":639,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["charge",{"_index":1015,"title":{},"body":{"license.html":{}}}],["check",{"_index":360,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{}}}],["check_session_iframe",{"_index":458,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["checks",{"_index":1303,"title":{"additional-documentation/session-checks.html":{}},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["checkurl(url",{"_index":173,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["circular",{"_index":1238,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["cites",{"_index":1442,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["cjs",{"_index":1412,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["claim",{"_index":1059,"title":{},"body":{"license.html":{}}}],["claim_types_supported",{"_index":476,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims",{"_index":429,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims.given_name",{"_index":950,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims_parameter_supported",{"_index":478,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims_supported",{"_index":477,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claimsathash",{"_index":100,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"overview.html":{}}}],["clear",{"_index":386,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["cli",{"_index":1180,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["cli.json",{"_index":1183,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["client",{"_index":417,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["clientid",{"_index":919,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["clientids",{"_index":878,"title":{},"body":{"index.html":{}}}],["closed",{"_index":836,"title":{},"body":{"index.html":{}}}],["code",{"_index":796,"title":{"additional-documentation/code-flow-+-pcke.html":{}},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["code_error",{"_index":508,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["codes",{"_index":1223,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["come",{"_index":1168,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["commands",{"_index":850,"title":{},"body":{"index.html":{}}}],["commonjs",{"_index":805,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":549,"title":{},"body":{"modules/OAuthModule.html":{}}}],["communication",{"_index":1194,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["compat",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["compatible",{"_index":400,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["compensates",{"_index":1155,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["compodoc/compodoc",{"_index":853,"title":{},"body":{"index.html":{}}}],["component",{"_index":931,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["conditions",{"_index":1039,"title":{},"body":{"license.html":{}}}],["config",{"_index":546,"title":{"additional-documentation/original-config-api.html":{}},"body":{"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["configuration",{"_index":864,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["configure",{"_index":908,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["configured",{"_index":943,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["configuring",{"_index":896,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["connect",{"_index":438,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["connection",{"_index":1067,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1397,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["console",{"_index":401,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["console.debug(\"logged",{"_index":1257,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.debug('given_name",{"_index":1464,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('ok",{"_index":1470,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('refresh",{"_index":1188,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["console.debug('state",{"_index":1093,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["console.debug('validatesignature",{"_index":278,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["console.debug('your",{"_index":1352,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["console.debug(context",{"_index":1258,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.error('actual",{"_index":103,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('exptected",{"_index":102,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('refresh",{"_index":1191,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["console.error(error",{"_index":294,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["console.error(event",{"_index":1283,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.log(e));or",{"_index":1276,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.warn(event",{"_index":1284,"title":{},"body":{"additional-documentation/events.html":{}}}],["const",{"_index":169,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["constructor(authstorage",{"_index":131,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["constructor(private",{"_index":936,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["constructor(readonly",{"_index":520,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["constructor(type",{"_index":495,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["contain",{"_index":824,"title":{},"body":{"index.html":{}}}],["contains",{"_index":952,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["context",{"_index":1254,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["contract",{"_index":1064,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":841,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":831,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["cookie",{"_index":1162,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["copied",{"_index":1177,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["copies",{"_index":1034,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1018,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1007,"title":{},"body":{"license.html":{}}}],["core",{"_index":439,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["cought",{"_index":1233,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["create",{"_index":421,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["createdefaultlogger",{"_index":559,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["createdefaultstorage",{"_index":560,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":1237,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["credentials",{"_index":1459,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["credits",{"_index":771,"title":{},"body":{"index.html":{}}}],["critical",{"_index":828,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":121,"title":{},"body":{"classes/CryptoHandler.html":{}}}],["cryptohandler",{"_index":118,"title":{"classes/CryptoHandler.html":{}},"body":{"classes/CryptoHandler.html":{},"modules/OAuthModule.html":{}}}],["current",{"_index":247,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["custom",{"_index":347,"title":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customhashfragment",{"_index":341,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{}}}],["customize",{"_index":1471,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customqueryparams",{"_index":1260,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["customurlvalidation",{"_index":583,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["cycle",{"_index":820,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1060,"title":{},"body":{"license.html":{}}}],["data",{"_index":427,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-password-flow.html":{}}}],["deal",{"_index":1022,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1068,"title":{},"body":{"license.html":{}}}],["debug",{"_index":527,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["debug(message",{"_index":408,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["debugging",{"_index":1273,"title":{},"body":{"additional-documentation/events.html":{}}}],["decide",{"_index":1336,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["declarations",{"_index":563,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["declare",{"_index":260,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["decodekey",{"_index":642,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodekey(k",{"_index":646,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(hash",{"_index":619,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(k",{"_index":657,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(v",{"_index":658,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue",{"_index":643,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue(v",{"_index":648,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["default",{"_index":226,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["defaultextension",{"_index":1413,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["defaultoauthinterceptor",{"_index":125,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["defaults",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["define",{"_index":693,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["defines",{"_index":367,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["deleted",{"_index":1343,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["demand",{"_index":830,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["demands",{"_index":718,"title":{},"body":{"changelog.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["demo",{"_index":880,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["demonstration",{"_index":1255,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["dependencies",{"_index":731,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":405,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["depending",{"_index":1127,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["deprecated",{"_index":378,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["deps",{"_index":1407,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["described",{"_index":1429,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["design",{"_index":1467,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["details",{"_index":1294,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{}}}],["detects",{"_index":374,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["di",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":246,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["different",{"_index":1279,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["differs",{"_index":1135,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["directly",{"_index":964,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["directory",{"_index":1179,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["disable",{"_index":357,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["disabled",{"_index":1292,"title":{},"body":{"additional-documentation/events.html":{}}}],["disableoauth2statecheck",{"_index":342,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["disablepkci",{"_index":1122,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["discovery",{"_index":219,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["discovery_document_load_error",{"_index":503,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_loaded",{"_index":499,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["discovery_document_validation_error",{"_index":504,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":960,"title":{},"body":{"index.html":{}}}],["display_values_supported",{"_index":475,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["displayed",{"_index":390,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["distribute",{"_index":1030,"title":{},"body":{"license.html":{}}}],["docs",{"_index":842,"title":{},"body":{"index.html":{}}}],["document",{"_index":220,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["documentation",{"_index":698,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["documentation/code",{"_index":979,"title":{},"body":{"index.html":{}}}],["documentation/refreshing",{"_index":981,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":1380,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["doing",{"_index":370,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["domains",{"_index":1391,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["don't",{"_index":959,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["dosn't",{"_index":1421,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["draft",{"_index":1099,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["dummy",{"_index":1439,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["dummyclientsecret",{"_index":1116,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["during",{"_index":1291,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["dynamic",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":326,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["e.type",{"_index":197,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/session-checks.html":{}}}],["each",{"_index":823,"title":{},"body":{"index.html":{}}}],["ease",{"_index":863,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["easiest",{"_index":1240,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ec",{"_index":327,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["elements",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":927,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["enable",{"_index":1373,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["encodekey",{"_index":644,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey(k",{"_index":651,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encoder",{"_index":637,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"dependencies.html":{}}}],["encodeuricomponent(k",{"_index":655,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(v",{"_index":656,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue",{"_index":645,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue(v",{"_index":653,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encounter",{"_index":1286,"title":{},"body":{"additional-documentation/events.html":{}}}],["end_session_endpoint",{"_index":459,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["endpoint",{"_index":436,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["endpoints",{"_index":1383,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["endpont",{"_index":1453,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ends",{"_index":1342,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["enforce",{"_index":1111,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["enhancements",{"_index":839,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":1382,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["enter",{"_index":1426,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["enters",{"_index":858,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1306,"title":{},"body":{"additional-documentation/events.html":{}}}],["environment",{"_index":800,"title":{},"body":{"index.html":{}}}],["err",{"_index":589,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["err));when",{"_index":1192,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["error",{"_index":163,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["error('algorithm",{"_index":111,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["error('array",{"_index":276,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["error('cannot",{"_index":328,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["error('parameter",{"_index":267,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["error(message",{"_index":413,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["errorhandler",{"_index":134,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["errors",{"_index":1221,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["es256",{"_index":233,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["es384",{"_index":234,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["escapedkey",{"_index":628,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["escapedvalue",{"_index":629,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["etc",{"_index":891,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["event",{"_index":704,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events",{"_index":379,"title":{"additional-documentation/events.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events.ts",{"_index":1307,"title":{},"body":{"additional-documentation/events.html":{}}}],["eventtype",{"_index":496,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":1230,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["execute",{"_index":1130,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["expected",{"_index":268,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/events.html":{}}}],["expired",{"_index":1468,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["expires",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["expires_in",{"_index":443,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["explicitly",{"_index":1335,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["export",{"_index":72,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["exports",{"_index":564,"title":{},"body":{"modules/OAuthModule.html":{},"overview.html":{}}}],["express",{"_index":1047,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1477,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["extends",{"_index":221,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["extensive",{"_index":1278,"title":{},"body":{"additional-documentation/events.html":{}}}],["fact",{"_index":1156,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["factor",{"_index":1207,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["factories",{"_index":561,"title":{},"body":{"modules/OAuthModule.html":{}}}],["factory",{"_index":1474,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["fail",{"_index":715,"title":{},"body":{"changelog.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["fails",{"_index":1381,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{}}],["false",{"_index":194,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["features",{"_index":664,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":832,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["fetch",{"_index":1132,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["fetching",{"_index":1457,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["field",{"_index":50,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{}}}],["files",{"_index":1021,"title":{},"body":{"license.html":{}}}],["filter",{"_index":155,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter(e",{"_index":196,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter(token",{"_index":192,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["find",{"_index":1085,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/original-config-api.html":{}}}],["fine",{"_index":988,"title":{},"body":{"index.html":{}}}],["fired",{"_index":1201,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["first",{"_index":922,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["fitness",{"_index":1052,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":826,"title":{},"body":{"index.html":{}}}],["flight",{"_index":933,"title":{},"body":{"index.html":{}}}],["flow",{"_index":701,"title":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["flows",{"_index":859,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["folder",{"_index":844,"title":{},"body":{"index.html":{}}}],["following",{"_index":849,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["follows",{"_index":1473,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["form",{"_index":941,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["format",{"_index":1411,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["former",{"_index":1328,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["forroot",{"_index":542,"title":{},"body":{"modules/OAuthModule.html":{}}}],["forroot(config",{"_index":543,"title":{},"body":{"modules/OAuthModule.html":{}}}],["found",{"_index":293,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["four",{"_index":1117,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["fragment",{"_index":348,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["free",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["full",{"_index":1304,"title":{},"body":{"additional-documentation/events.html":{}}}],["function",{"_index":371,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["functions",{"_index":759,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1037,"title":{},"body":{"license.html":{}}}],["further",{"_index":866,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["g",{"_index":724,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["geheim",{"_index":1447,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then",{"_index":1466,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then((resp",{"_index":1461,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["general",{"_index":984,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["generate",{"_index":848,"title":{},"body":{"index.html":{}}}],["generator",{"_index":772,"title":{},"body":{"index.html":{}}}],["gethashfragmentparams",{"_index":611,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["gethashfragmentparams(customhashfragment",{"_index":613,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["getitem",{"_index":596,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["getitem(key",{"_index":423,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["gets",{"_index":907,"title":{},"body":{"index.html":{}}}],["getting",{"_index":659,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["give",{"_index":1195,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["gone",{"_index":1299,"title":{},"body":{"additional-documentation/events.html":{}}}],["google",{"_index":1388,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["graceperiod",{"_index":313,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["graceperiodinsec",{"_index":224,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["grant_types_supported",{"_index":466,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["granted",{"_index":1014,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1069,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1355,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["guide",{"_index":1086,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["half",{"_index":1210,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["hallo",{"_index":954,"title":{},"body":{"index.html":{}}}],["handle(req",{"_index":188,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["handleerror",{"_index":585,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handleerror(err",{"_index":586,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler",{"_index":164,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler.ts",{"_index":8,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handler.ts:10",{"_index":588,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{}}}],["handler.ts:11",{"_index":488,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:141",{"_index":248,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:148",{"_index":250,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:20",{"_index":634,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:21",{"_index":238,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:27",{"_index":633,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:39",{"_index":66,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{}}}],["handler.ts:41",{"_index":254,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:44",{"_index":58,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:5",{"_index":595,"title":{},"body":{"classes/OAuthResourceServerErrorHandler.html":{}}}],["handler.ts:6",{"_index":123,"title":{},"body":{"classes/CryptoHandler.html":{}}}],["handler.ts:69",{"_index":47,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:8",{"_index":489,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:86",{"_index":31,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handlers",{"_index":80,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handling",{"_index":1219,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["hash",{"_index":33,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hash.indexof",{"_index":620,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(1",{"_index":623,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(questionmarkposition",{"_index":622,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hashalg",{"_index":86,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hashalg.digeststring(valuetohash",{"_index":331,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hashing",{"_index":779,"title":{},"body":{"index.html":{}}}],["hashlocationstrategy",{"_index":804,"title":{},"body":{"index.html":{}}}],["hashstrategy",{"_index":989,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["header",{"_index":55,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["headers",{"_index":206,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["helper",{"_index":71,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["helper.service",{"_index":554,"title":{},"body":{"modules/OAuthModule.html":{}}}],["helper.service.ts",{"_index":610,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:25",{"_index":616,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:5",{"_index":614,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.ts",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hence",{"_index":910,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["here",{"_index":1137,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["here's",{"_index":1285,"title":{},"body":{"additional-documentation/events.html":{}}}],["hereby",{"_index":1013,"title":{},"body":{"license.html":{}}}],["hexstring",{"_index":251,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hidden",{"_index":1158,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["holders",{"_index":1057,"title":{},"body":{"license.html":{}}}],["home",{"_index":1256,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["homecomponent",{"_index":894,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["hook",{"_index":393,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["hooked",{"_index":81,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hs256",{"_index":227,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hs384",{"_index":228,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hs512",{"_index":229,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["http",{"_index":1222,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["http://localhost:8080",{"_index":875,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/#/home",{"_index":1323,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["http://openid.net/specs/openid",{"_index":437,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["http://www.angular.at/api",{"_index":974,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["http_interceptors",{"_index":551,"title":{},"body":{"modules/OAuthModule.html":{}}}],["httpclientmodule",{"_index":552,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["httperrorresponse",{"_index":1245,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpevent",{"_index":149,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httphandler",{"_index":143,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptor",{"_index":150,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptors",{"_index":1215,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["httpparametercodec",{"_index":641,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["httprequest",{"_index":141,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpresponse",{"_index":587,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["https",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["https://demo.identityserver.io",{"_index":1104,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["https://github.com/lankaapura/angular",{"_index":1362,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://github.com/manfredsteyer/angular",{"_index":795,"title":{},"body":{"index.html":{}}}],["https://manfredsteyer.github.io/angular",{"_index":797,"title":{},"body":{"index.html":{}}}],["https://medium.com/lankapura/angular",{"_index":1358,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://steyer",{"_index":912,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["i.e",{"_index":1387,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["id",{"_index":308,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token",{"_index":51,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token's",{"_index":53,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["id_token_encryption_alg_values_supported",{"_index":472,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_encryption_enc_values_supported",{"_index":473,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_signing_alg_values_supported",{"_index":471,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idclaims",{"_index":430,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ideas",{"_index":838,"title":{},"body":{"index.html":{}}}],["identity",{"_index":786,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["identityserver",{"_index":809,"title":{},"body":{"index.html":{}}}],["idsvr",{"_index":1364,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["idtoken",{"_index":74,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaims",{"_index":77,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaimsjson",{"_index":432,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenexpiresat",{"_index":434,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenhandler",{"_index":270,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["idtokenheader",{"_index":76,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenheaderjson",{"_index":433,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["iframe",{"_index":1159,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["iframes",{"_index":355,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["implcit",{"_index":1438,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["implemantion",{"_index":1231,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["implement",{"_index":899,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["implementation",{"_index":11,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implementations",{"_index":422,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["implemented",{"_index":1338,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["implementing",{"_index":702,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["implicit",{"_index":700,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implied",{"_index":1048,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["important",{"_index":1118,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["imports",{"_index":562,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["included",{"_index":376,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"license.html":{}}}],["includes",{"_index":369,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["including",{"_index":1025,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":917,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["indexable",{"_index":631,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["infer",{"_index":329,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["inferhashalgorithm",{"_index":24,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{}}}],["inferhashalgorithm(jwtheader",{"_index":45,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["infers",{"_index":48,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["info(message",{"_index":410,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["info.state",{"_index":1094,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["information",{"_index":990,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["informs",{"_index":1269,"title":{},"body":{"additional-documentation/events.html":{}}}],["inherited",{"_index":255,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["initial",{"_index":1310,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initialize",{"_index":1123,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["initializes",{"_index":1126,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["initialnavigation",{"_index":1318,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initimplicitflow",{"_index":944,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["initloginflow",{"_index":1125,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["inject",{"_index":1244,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectable",{"_index":147,"title":{"injectables/UrlHelperService.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectables",{"_index":608,"title":{},"body":{"injectables/UrlHelperService.html":{},"overview.html":{}}}],["injecting",{"_index":1236,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injection",{"_index":406,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["injectiontoken('auth_config",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":852,"title":{},"body":{"index.html":{}}}],["installing",{"_index":889,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1208,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["instanceof",{"_index":1282,"title":{},"body":{"additional-documentation/events.html":{}}}],["instead",{"_index":350,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["interaction",{"_index":1164,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["intercept",{"_index":129,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["intercept(req",{"_index":140,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["intercepted",{"_index":577,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["interceptor",{"_index":124,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"index.html":{}}}],["interceptors",{"_index":126,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["interceptors/default",{"_index":557,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interceptors/resource",{"_index":556,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interface",{"_index":73,"title":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["interfaces",{"_index":603,"title":{},"body":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"overview.html":{}}}],["internally",{"_index":399,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["introduced",{"_index":909,"title":{},"body":{"index.html":{}}}],["invalid_nonce_in_state",{"_index":502,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["ionic",{"_index":1003,"title":{},"body":{"index.html":{}}}],["isn't",{"_index":483,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["issuer",{"_index":452,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["issuer's",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":837,"title":{},"body":{"index.html":{}}}],["issuing",{"_index":1157,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["isvalid",{"_index":315,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["java",{"_index":791,"title":{},"body":{"index.html":{}}}],["job",{"_index":1319,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["js",{"_index":744,"title":{},"body":{"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["json",{"_index":214,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["jsrasign",{"_index":776,"title":{},"body":{"index.html":{}}}],["jsrsasign",{"_index":265,"title":{},"body":{"classes/JwksValidationHandler.html":{},"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["jwks",{"_index":78,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwks_load_error",{"_index":501,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["jwks_uri",{"_index":460,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["jwksvalidationhandler",{"_index":209,"title":{"classes/JwksValidationHandler.html":{}},"body":{"classes/JwksValidationHandler.html":{},"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwksvalidationhandler();in",{"_index":1331,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["jwtheader",{"_index":52,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["jwtheader['alg",{"_index":106,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["k",{"_index":290,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["k['kid",{"_index":283,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["k['kty",{"_index":291,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["k['use",{"_index":284,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["keep",{"_index":1173,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["kevin",{"_index":1402,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["key",{"_index":216,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{}}}],["keycloak",{"_index":789,"title":{},"body":{"index.html":{}}}],["keyobj",{"_index":309,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["keys",{"_index":213,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["keys.filter",{"_index":289,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["keys.find(k",{"_index":282,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["kicks",{"_index":1417,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["kid",{"_index":279,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["kind",{"_index":1046,"title":{},"body":{"license.html":{}}}],["known",{"_index":1154,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["known/openid",{"_index":1449,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["kty",{"_index":286,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["labels",{"_index":840,"title":{},"body":{"index.html":{}}}],["last",{"_index":1140,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["later",{"_index":1329,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["lates",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["leads",{"_index":1239,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{}}}],["leftmosthalf",{"_index":94,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["legend",{"_index":1072,"title":{},"body":{"overview.html":{}}}],["levels",{"_index":1280,"title":{},"body":{"additional-documentation/events.html":{}}}],["leveraging",{"_index":900,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["liability",{"_index":1061,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1058,"title":{},"body":{"license.html":{}}}],["lib",{"_index":387,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["library",{"_index":774,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["library's",{"_index":1395,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["license",{"_index":1006,"title":{"license.html":{}},"body":{}}],["life",{"_index":1204,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["limitation",{"_index":1026,"title":{},"body":{"license.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["limited",{"_index":1049,"title":{},"body":{"license.html":{}}}],["line",{"_index":1182,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["list",{"_index":1146,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{}}}],["listed",{"_index":1228,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["lite",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["load",{"_index":1419,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":307,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["loadedkeys",{"_index":303,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["loading",{"_index":1462,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["loadkeys",{"_index":79,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["loaduserprofile",{"_index":1295,"title":{},"body":{"additional-documentation/events.html":{}}}],["local",{"_index":725,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["localhost:[8080",{"_index":883,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":419,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["location.origin",{"_index":1176,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["locationstrategy",{"_index":1308,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["log",{"_index":528,"title":{},"body":{"classes/OAuthLogger.html":{},"changelog.html":{},"additional-documentation/events.html":{}}}],["log(message",{"_index":411,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logged",{"_index":1161,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["loggin",{"_index":1454,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["logging",{"_index":397,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["login",{"_index":690,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["loginoptions",{"_index":335,"title":{"classes/LoginOptions.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logoff",{"_index":947,"title":{},"body":{"index.html":{}}}],["logout",{"_index":519,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["logs",{"_index":689,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{}}}],["long",{"_index":1302,"title":{},"body":{"additional-documentation/events.html":{}}}],["longer",{"_index":1277,"title":{},"body":{"additional-documentation/events.html":{}}}],["look",{"_index":976,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["lower",{"_index":973,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["main",{"_index":1174,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/using-systemjs.html":{}}}],["maintain",{"_index":1396,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["major",{"_index":822,"title":{},"body":{"index.html":{}}}],["make",{"_index":17,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["management",{"_index":685,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["manfred",{"_index":1010,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1320,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["map",{"_index":156,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/using-systemjs.html":{}}}],["map(_",{"_index":200,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["matching",{"_index":116,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["matchingkeys",{"_index":288,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["matchingkeys.length",{"_index":292,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["matchingkeys[0",{"_index":300,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["max/geheim",{"_index":877,"title":{},"body":{"index.html":{}}}],["means",{"_index":687,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["mentioned",{"_index":870,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["merchantability",{"_index":1051,"title":{},"body":{"license.html":{}}}],["merge",{"_index":152,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"license.html":{}}}],["mergemap",{"_index":158,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["mergemap(token",{"_index":204,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["message",{"_index":377,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["meta",{"_index":1406,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["method",{"_index":15,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{}}}],["mind",{"_index":1110,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["minimize",{"_index":783,"title":{},"body":{"index.html":{}}}],["minutes",{"_index":999,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":758,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":277,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["modify",{"_index":1028,"title":{},"body":{"license.html":{}}}],["module",{"_index":536,"title":{"modules/OAuthModule.html":{}},"body":{"overview.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["module.config",{"_index":166,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["module.config.ts",{"_index":571,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:11",{"_index":592,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:12",{"_index":594,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:13",{"_index":593,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:2",{"_index":574,"title":{},"body":{"classes/OAuthModuleConfig.html":{}}}],["moduleconfig",{"_index":136,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["modules",{"_index":538,"title":{"modules.html":{}},"body":{"modules/OAuthModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":547,"title":{},"body":{"modules/OAuthModule.html":{}}}],["more",{"_index":297,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["msec",{"_index":1198,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["much",{"_index":816,"title":{},"body":{"index.html":{}}}],["multi",{"_index":569,"title":{},"body":{"modules/OAuthModule.html":{}}}],["name",{"_index":39,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["navigation",{"_index":1311,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["need",{"_index":819,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["needed",{"_index":1107,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["net",{"_index":810,"title":{},"body":{"index.html":{}}}],["net/.net",{"_index":787,"title":{},"body":{"index.html":{}}}],["new",{"_index":110,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["newer",{"_index":814,"title":{},"body":{"index.html":{}}}],["next",{"_index":142,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req",{"_index":183,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req).catch(err",{"_index":1251,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ngmodule",{"_index":548,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["node_modules/jsrsasign/lib/jsrsasign",{"_index":1414,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["nonce",{"_index":368,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{}}}],["noninfringement",{"_index":1055,"title":{},"body":{"license.html":{}}}],["normally",{"_index":384,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["note",{"_index":1152,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["notes",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":485,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["notice",{"_index":1041,"title":{},"body":{"license.html":{}}}],["notification",{"_index":683,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["notifications",{"_index":1348,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["notified",{"_index":688,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["npm",{"_index":851,"title":{},"body":{"index.html":{}}}],["null",{"_index":424,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["nullvalidationhandler",{"_index":481,"title":{"classes/NullValidationHandler.html":{}},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["oauth",{"_index":165,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauth.interceptor",{"_index":558,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oauth.interceptor.ts",{"_index":128,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["oauth.interceptor.ts:19",{"_index":138,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:40",{"_index":144,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth2",{"_index":358,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauth2/oidc",{"_index":901,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["oautherrorevent",{"_index":492,"title":{"classes/OAuthErrorEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/events.html":{}}}],["oauthevent",{"_index":494,"title":{"classes/OAuthEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthinfoevent",{"_index":524,"title":{"classes/OAuthInfoEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthlogger",{"_index":407,"title":{"classes/OAuthLogger.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oauthmodule",{"_index":537,"title":{"modules/OAuthModule.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"modules.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmodule.forroot",{"_index":892,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmoduleconfig",{"_index":137,"title":{"classes/OAuthModuleConfig.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthnoopresourceservererrorhandler",{"_index":555,"title":{"classes/OAuthNoopResourceServerErrorHandler.html":{}},"body":{"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthresourceserverconfig",{"_index":573,"title":{"classes/OAuthResourceServerConfig.html":{}},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["oauthresourceservererrorhandler",{"_index":135,"title":{"classes/OAuthResourceServerErrorHandler.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthservice",{"_index":133,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["oauthstorage",{"_index":132,"title":{"classes/OAuthStorage.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthsuccessevent",{"_index":521,"title":{"classes/OAuthSuccessEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["observable",{"_index":146,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["obtaining",{"_index":1017,"title":{},"body":{"license.html":{}}}],["occur",{"_index":1272,"title":{},"body":{"additional-documentation/events.html":{}}}],["of(this.oauthservice.getaccesstoken()).pipe",{"_index":191,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["offline_access",{"_index":1119,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["oidc",{"_index":366,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oidc.umd.js",{"_index":1410,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["oidc/docs",{"_index":798,"title":{},"body":{"index.html":{}}}],["oidc/docs/additional",{"_index":978,"title":{},"body":{"index.html":{}}}],["oidcdiscoverydoc",{"_index":451,"title":{"interfaces/OidcDiscoveryDoc.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oidic.module.ts",{"_index":540,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidic.module.ts:27",{"_index":545,"title":{},"body":{"modules/OAuthModule.html":{}}}],["ok",{"_index":1189,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["okta",{"_index":997,"title":{},"body":{"index.html":{}}}],["one",{"_index":212,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["online",{"_index":995,"title":{},"body":{"index.html":{}}}],["onloginerror",{"_index":343,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ontokenreceived",{"_index":344,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{}}}],["openid",{"_index":450,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["option",{"_index":1340,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["optional",{"_index":41,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["optionalparams",{"_index":409,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["options",{"_index":338,"title":{},"body":{"classes/LoginOptions.html":{},"additional-documentation/events.html":{}}}],["original",{"_index":671,"title":{"additional-documentation/original-config-api.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["otherparam",{"_index":1267,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["otherwise",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["out",{"_index":680,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["output",{"_index":1178,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/callback-after-login.html":{}}}],["over",{"_index":1205,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["override",{"_index":19,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["overview",{"_index":1071,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":881,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["package",{"_index":730,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1326,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["page",{"_index":903,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["pair",{"_index":626,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pairs",{"_index":625,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["param",{"_index":105,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parameter",{"_index":1261,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["parameters",{"_index":37,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["params",{"_index":64,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["params.idtoken",{"_index":266,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.idtokenclaims['at_hash'].replace(/=/g",{"_index":101,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["params.idtokenheader",{"_index":269,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.idtokenheader['alg",{"_index":281,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.idtokenheader['kid",{"_index":280,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.jwks",{"_index":271,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.jwks['keys",{"_index":272,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.jwks['keys'].length",{"_index":274,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.loadkeys",{"_index":301,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["parent.postmessage(location.hash",{"_index":1175,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["parse",{"_index":1377,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["parsed",{"_index":54,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parsedidtoken",{"_index":431,"title":{"interfaces/ParsedIdToken.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["parsequerystring",{"_index":612,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["parsequerystring(querystring",{"_index":615,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["particular",{"_index":1053,"title":{},"body":{"license.html":{}}}],["pass",{"_index":354,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["passed",{"_index":34,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["passes",{"_index":1232,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["passt",{"_index":339,"title":{},"body":{"classes/LoginOptions.html":{}}}],["password",{"_index":857,"title":{"additional-documentation/using-password-flow.html":{}},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["passwords",{"_index":640,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["path",{"_index":987,"title":{},"body":{"index.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pathlocationstrategy",{"_index":803,"title":{},"body":{"index.html":{}}}],["pcke",{"_index":1095,"title":{"additional-documentation/code-flow-+-pcke.html":{}},"body":{}}],["pcke.html",{"_index":980,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1185,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["performs",{"_index":1309,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["period",{"_index":243,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["permission",{"_index":1012,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":920,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["permit",{"_index":1035,"title":{},"body":{"license.html":{}}}],["person",{"_index":1016,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1036,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":1427,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["pingone",{"_index":1390,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pipe",{"_index":202,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pipe(catcherror(err",{"_index":189,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pkce",{"_index":856,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["plan",{"_index":821,"title":{},"body":{"index.html":{}}}],["please",{"_index":298,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["portions",{"_index":1044,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":1435,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["post",{"_index":1357,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["ppanthony",{"_index":1408,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["practice",{"_index":362,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["practices",{"_index":1112,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["prefixes",{"_index":971,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["preserving",{"_index":1088,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["prevent",{"_index":1242,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["preventclearhashafterlogin",{"_index":345,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prevents",{"_index":1193,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["private",{"_index":172,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["profile",{"_index":714,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["project's",{"_index":1365,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["projects/.../base64",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../events.ts",{"_index":1078,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../factories.ts",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../tokens.ts",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/angular",{"_index":539,"title":{},"body":{"modules/OAuthModule.html":{}}}],["projects/lib/src/base64",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/encoder.ts",{"_index":636,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:10",{"_index":654,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:14",{"_index":647,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:18",{"_index":649,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:6",{"_index":652,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/events.ts",{"_index":493,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/events.ts:25",{"_index":525,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:29",{"_index":602,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:35",{"_index":526,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:41",{"_index":498,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/factories.ts",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/interceptors/default",{"_index":127,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/interceptors/resource",{"_index":584,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["projects/lib/src/oauth",{"_index":570,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["projects/lib/src/token",{"_index":6,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["projects/lib/src/tokens.ts",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/types.ts",{"_index":336,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:11",{"_index":380,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:121",{"_index":632,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:18",{"_index":392,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:26",{"_index":372,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:33",{"_index":346,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:43",{"_index":356,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:50",{"_index":383,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:60",{"_index":530,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:61",{"_index":533,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:62",{"_index":534,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:63",{"_index":535,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:64",{"_index":532,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:74",{"_index":599,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:75",{"_index":600,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:76",{"_index":601,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:84",{"_index":606,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:85",{"_index":604,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:86",{"_index":605,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:87",{"_index":607,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/url",{"_index":609,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["promise",{"_index":44,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["promise.reject('signature",{"_index":318,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.reject(error",{"_index":295,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.resolve",{"_index":317,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.resolve(bytearrayasstring",{"_index":334,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.resolve(null",{"_index":490,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["promise.resolve(true",{"_index":491,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["properties",{"_index":222,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["property",{"_index":306,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["proposes",{"_index":1144,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["protected",{"_index":23,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["provding",{"_index":1229,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["provide",{"_index":402,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provided",{"_index":218,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"license.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["provider",{"_index":691,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provider's",{"_index":906,"title":{},"body":{"index.html":{}}}],["providers",{"_index":565,"title":{},"body":{"modules/OAuthModule.html":{},"overview.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provides",{"_index":1243,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["providing",{"_index":703,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["prs",{"_index":827,"title":{},"body":{"index.html":{}}}],["ps256",{"_index":235,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["ps384",{"_index":236,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["ps512",{"_index":237,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["public",{"_index":84,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["publish",{"_index":1029,"title":{},"body":{"license.html":{}}}],["published",{"_index":1287,"title":{},"body":{"additional-documentation/events.html":{}}}],["publishes",{"_index":1270,"title":{},"body":{"additional-documentation/events.html":{}}}],["pull",{"_index":834,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1054,"title":{},"body":{"license.html":{},"additional-documentation/callback-after-login.html":{}}}],["put",{"_index":1226,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["pwa",{"_index":1001,"title":{},"body":{"index.html":{}}}],["query",{"_index":1259,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["querying",{"_index":862,"title":{},"body":{"index.html":{}}}],["querystring",{"_index":617,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["querystring.split",{"_index":630,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["question",{"_index":1346,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["questionmarkposition",{"_index":621,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["quite",{"_index":1436,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["r",{"_index":324,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["read",{"_index":388,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["reading",{"_index":1312,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["readme",{"_index":1087,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["readonly",{"_index":522,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["reason",{"_index":497,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["receive",{"_index":1333,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["received",{"_index":62,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["received_first_token",{"_index":500,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["receivedtokens",{"_index":395,"title":{"classes/ReceivedTokens.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["receiving",{"_index":1423,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["recommented",{"_index":1121,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["redhat",{"_index":790,"title":{},"body":{"index.html":{}}}],["redhat's",{"_index":811,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":914,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["redirected",{"_index":855,"title":{},"body":{"index.html":{}}}],["redirecting",{"_index":868,"title":{},"body":{"index.html":{}}}],["redirects",{"_index":965,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["redirecturi",{"_index":915,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["redirecturis",{"_index":882,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":699,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["refresh.html",{"_index":888,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{}}}],["refresh.html\";please",{"_index":1172,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["refresh_token",{"_index":444,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["refresh_tokens",{"_index":1149,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["refreshed",{"_index":1300,"title":{},"body":{"additional-documentation/events.html":{}}}],["refreshes",{"_index":353,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["refreshing",{"_index":860,"title":{"additional-documentation/refreshing-a-token.html":{}},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["regarding",{"_index":865,"title":{},"body":{"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["register",{"_index":1345,"title":{},"body":{"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["registerd",{"_index":1105,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["registered",{"_index":579,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["registration_endpoint",{"_index":461,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["related",{"_index":1220,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["relations",{"_index":1432,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["relaxed",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["relay",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["removeitem",{"_index":597,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["removeitem(key",{"_index":425,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["rendering",{"_index":1354,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"additional-documentation/server-side-rendering.html":{}}}],["represents",{"_index":428,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["req",{"_index":145,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.clone",{"_index":208,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers",{"_index":1249,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers.set('authorization",{"_index":207,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["req.url.tolowercase",{"_index":181,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["request",{"_index":921,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["request_object_signing_alg_values_supported",{"_index":474,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["requested",{"_index":1089,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["requests",{"_index":835,"title":{},"body":{"index.html":{}}}],["require",{"_index":262,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["require','jsrsasign",{"_index":1415,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["require('jsrsasign",{"_index":264,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["requirehttps",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":1147,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["reset",{"_index":1074,"title":{},"body":{"overview.html":{}}}],["resolves",{"_index":1296,"title":{},"body":{"additional-documentation/events.html":{}}}],["resource",{"_index":161,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["resources",{"_index":792,"title":{},"body":{"index.html":{}}}],["resourceserver",{"_index":572,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["resourceservererrorhandler",{"_index":578,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["respect",{"_index":1150,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["respective",{"_index":972,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["respond",{"_index":1163,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["response",{"_index":435,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_modes_supported",{"_index":465,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_types_supported",{"_index":463,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["responsetype",{"_index":1102,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["restriction",{"_index":1024,"title":{},"body":{"license.html":{}}}],["result",{"_index":115,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["results",{"_index":117,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["retrieved",{"_index":1289,"title":{},"body":{"additional-documentation/events.html":{}}}],["retry",{"_index":253,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["return",{"_index":104,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/using-password-flow.html":{}}}],["rights",{"_index":1027,"title":{},"body":{"license.html":{}}}],["risk",{"_index":487,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["root",{"_index":1314,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["route",{"_index":986,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["router",{"_index":802,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routermodule.forroot(app_routes",{"_index":1316,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routes",{"_index":1313,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routing",{"_index":983,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["rs",{"_index":263,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs.keyutil.getkey(key",{"_index":310,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs.kjur.crypto.messagedigest",{"_index":330,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs.kjur.jws.jws.verifyjwt",{"_index":316,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs256",{"_index":230,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs384",{"_index":231,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs512",{"_index":232,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rsa",{"_index":325,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rule",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":854,"title":{},"body":{"index.html":{}}}],["runs",{"_index":874,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":1247,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/observable",{"_index":1246,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/operators",{"_index":160,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["safe",{"_index":1445,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["same",{"_index":1170,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sample",{"_index":794,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["samples",{"_index":871,"title":{},"body":{"index.html":{}}}],["saved",{"_index":1290,"title":{},"body":{"additional-documentation/events.html":{}}}],["saveimporting",{"_index":890,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":775,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1425,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["scope",{"_index":445,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["scopes_supported",{"_index":462,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["seconds",{"_index":244,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["secret",{"_index":1108,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["section",{"_index":897,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["security",{"_index":364,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["see",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["selector",{"_index":932,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1033,"title":{},"body":{"license.html":{}}}],["send",{"_index":580,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["sendaccesstoken",{"_index":186,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["sends",{"_index":905,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{}}}],["sense",{"_index":1443,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["separate",{"_index":1138,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["separatorindex",{"_index":627,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["server",{"_index":162,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["server's",{"_index":869,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity",{"_index":913,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["server.azurewebsites.net/identity/.well",{"_index":1448,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/authorize",{"_index":1367,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/endsession",{"_index":1375,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/token",{"_index":1452,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/userinfo",{"_index":1456,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.code",{"_index":1106,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["servers",{"_index":993,"title":{},"body":{"index.html":{}}}],["service",{"_index":168,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["service_documentation",{"_index":479,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["session",{"_index":681,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["session_changed",{"_index":516,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_error",{"_index":517,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["session_terminated",{"_index":518,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{}}}],["session_terminated')).subscribe(e",{"_index":1351,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionchecksenabled",{"_index":1349,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionstorage",{"_index":420,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["set",{"_index":217,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["set('authorization",{"_index":1250,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["setitem",{"_index":598,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["setitem(key",{"_index":426,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["setstorage",{"_index":717,"title":{},"body":{"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["setting",{"_index":963,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["setup",{"_index":977,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["setupautomaticsilentrefresh",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["several",{"_index":1386,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sha",{"_index":113,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["sha256(accesstoken",{"_index":91,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["shall",{"_index":1042,"title":{},"body":{"license.html":{}}}],["share",{"_index":1384,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sharing",{"_index":1409,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["ship",{"_index":1433,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["short",{"_index":1274,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["showdebuginformation",{"_index":1120,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["shown",{"_index":1129,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["shows",{"_index":898,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["side",{"_index":418,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/server-side-rendering.html":{}}}],["sig",{"_index":285,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["sign",{"_index":679,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["signature",{"_index":67,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["signs",{"_index":1337,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["silent",{"_index":352,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["silent_refresh_error",{"_index":511,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silent_refresh_timeout",{"_index":513,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silently_refreshed",{"_index":512,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silentrefresh",{"_index":1186,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["silentrefreshredirecturi",{"_index":1167,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{}}}],["silentrefreshtimeout",{"_index":1197,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["similar",{"_index":1437,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["simple",{"_index":414,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["single",{"_index":678,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["site",{"_index":1004,"title":{},"body":{"index.html":{}}}],["size",{"_index":785,"title":{},"body":{"index.html":{}}}],["skip",{"_index":486,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["skipping",{"_index":958,"title":{},"body":{"index.html":{}}}],["skips",{"_index":1330,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["smaller",{"_index":817,"title":{},"body":{"index.html":{}}}],["snippet",{"_index":951,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{}}}],["software",{"_index":1019,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1101,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["somevalue",{"_index":1268,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["sources",{"_index":793,"title":{},"body":{"index.html":{}}}],["spa",{"_index":879,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["spa's",{"_index":918,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["spas",{"_index":1109,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["spec",{"_index":1293,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["specific",{"_index":926,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["specification",{"_index":1394,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["specifies",{"_index":1145,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["specify",{"_index":299,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["specs",{"_index":686,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["src",{"_index":843,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1142,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["start",{"_index":1399,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["started",{"_index":660,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{}}}],["starting",{"_index":1263,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["starts",{"_index":727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["startup",{"_index":1416,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["state",{"_index":359,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/events.html":{}}}],["static",{"_index":541,"title":{},"body":{"modules/OAuthModule.html":{}}}],["status",{"_index":682,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["steyer",{"_index":1011,"title":{},"body":{"license.html":{}}}],["still",{"_index":672,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["storage",{"_index":415,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["storagefactory",{"_index":1476,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["stored",{"_index":1297,"title":{},"body":{"additional-documentation/events.html":{}}}],["storing",{"_index":416,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["str",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strategy",{"_index":1134,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["stream",{"_index":1271,"title":{},"body":{"additional-documentation/events.html":{}}}],["streamline",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["strict",{"_index":1424,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["strictdiscoverydocumentvalidation",{"_index":729,"title":{},"body":{"changelog.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["strong",{"_index":1430,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["structured",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":449,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["subject",{"_index":1038,"title":{},"body":{"license.html":{}}}],["subject_types_supported",{"_index":467,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sublicense",{"_index":1031,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1043,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1091,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["successful",{"_index":1253,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["successfully",{"_index":381,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/events.html":{}}}],["such",{"_index":1114,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["suitable",{"_index":902,"title":{},"body":{"index.html":{}}}],["suited",{"_index":1428,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["summary.json",{"_index":847,"title":{},"body":{"index.html":{}}}],["super(type",{"_index":523,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["support",{"_index":770,"title":{},"body":{"index.html":{}}}],["supported",{"_index":112,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["supports",{"_index":1097,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/session-checks.html":{}}}],["sure",{"_index":845,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["switch",{"_index":321,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["switching",{"_index":970,"title":{},"body":{"index.html":{}}}],["system.config",{"_index":1405,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["systemjs",{"_index":1400,"title":{"additional-documentation/using-systemjs.html":{}},"body":{"additional-documentation/using-systemjs.html":{}}}],["take",{"_index":157,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["take(1",{"_index":203,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["takes",{"_index":1217,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["task",{"_index":969,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["tasks",{"_index":675,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{}}}],["tells",{"_index":961,"title":{},"body":{"index.html":{}}}],["template",{"_index":953,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":934,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":1265,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["terminated",{"_index":1353,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["tested",{"_index":799,"title":{},"body":{"index.html":{}}}],["testen",{"_index":957,"title":{},"body":{"index.html":{}}}],["testing",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["thanks",{"_index":1401,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["that's",{"_index":1444,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["then(_",{"_index":304,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["then(info",{"_index":1187,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["then(loadedkeys",{"_index":302,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["third",{"_index":1213,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.alg2kty(alg",{"_index":287,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.allowedalgorithms",{"_index":312,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.authservice.events.subscribe(event",{"_index":1281,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.authstorage.getitem('access_token",{"_index":1248,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.calchash(params.accesstoken",{"_index":90,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.checkurl(url",{"_index":185,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.configure",{"_index":937,"title":{},"body":{"index.html":{}}}],["this.errorhandler.handleerror(err",{"_index":190,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.graceperiodinsec",{"_index":314,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.inferhashalgorithm(params.idtokenheader",{"_index":87,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.moduleconfig",{"_index":182,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver",{"_index":184,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls",{"_index":177,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls.find(u",{"_index":178,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation",{"_index":175,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation(url",{"_index":176,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.sendaccesstoken",{"_index":187,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.oauthservice.clientid",{"_index":1369,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":1133,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.configure(authconfig",{"_index":938,"title":{},"body":{"index.html":{}}}],["this.oauthservice.customqueryparams",{"_index":1264,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["this.oauthservice.dummyclientsecret",{"_index":1446,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.events.pipe",{"_index":195,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.events.pipe(filter(e",{"_index":1350,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1275,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflow('max",{"_index":1460,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max",{"_index":1465,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":201,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":949,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.initcodeflow();there",{"_index":1124,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');after",{"_index":1090,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["this.oauthservice.initloginflow",{"_index":946,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initloginflow();also",{"_index":1128,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.issuer",{"_index":1418,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument().then",{"_index":1420,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument(url).then",{"_index":1450,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandlogin",{"_index":962,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin",{"_index":940,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.loaduserprofile",{"_index":1463,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loginurl",{"_index":1366,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.logout",{"_index":948,"title":{},"body":{"index.html":{}}}],["this.oauthservice.logouturl",{"_index":1374,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.redirecturi",{"_index":1368,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.refresh();refreshing",{"_index":1153,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.oauthservice.refreshtoken().then",{"_index":1469,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.scope",{"_index":1370,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setstorage(sessionstorage",{"_index":1372,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh();by",{"_index":1200,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.oauthservice.silentrefreshredirecturi",{"_index":1171,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.oauthservice.tokenendpoint",{"_index":1451,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":939,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["this.oauthservice.trylogin",{"_index":1092,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.trylogin().then(_",{"_index":1321,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.oauthservice.userinfoendpoint",{"_index":1455,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.parsequerystring(hash",{"_index":624,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["this.router.navigate",{"_index":1322,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.tobytearrayasstring(result",{"_index":333,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.validatesignature(params",{"_index":305,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["those",{"_index":1151,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["three",{"_index":923,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["through",{"_index":404,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["throw",{"_index":109,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["throwerror",{"_index":590,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["throwerror(err",{"_index":591,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["time",{"_index":242,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["timeout",{"_index":159,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["timeout(wait_for_token_received",{"_index":199,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["timeoutfactor",{"_index":709,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["timer",{"_index":1298,"title":{},"body":{"additional-documentation/events.html":{}}}],["timespan",{"_index":1196,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["timestamp",{"_index":245,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["tobytearrayasstring",{"_index":225,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["tobytearrayasstring(hexstring",{"_index":249,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["together",{"_index":705,"title":{},"body":{"changelog.html":{},"additional-documentation/server-side-rendering.html":{}}}],["token",{"_index":193,"title":{"additional-documentation/refreshing-a-token.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["token's",{"_index":1203,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["token(s",{"_index":389,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["token.html",{"_index":982,"title":{},"body":{"index.html":{}}}],["token_endpoint",{"_index":454,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_methods_supported",{"_index":455,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_signing_alg_values_supported",{"_index":456,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_error",{"_index":507,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_expires",{"_index":515,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["token_received",{"_index":198,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["token_refresh_error",{"_index":510,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refreshed",{"_index":509,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_type",{"_index":442,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_validation_error",{"_index":514,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tokenhash",{"_index":88,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.length",{"_index":96,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.substr(0",{"_index":95,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenresponse",{"_index":441,"title":{"interfaces/TokenResponse.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tokens",{"_index":83,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["tokenvalidationhandler",{"_index":394,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tokenvalidator",{"_index":1325,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["tort",{"_index":1065,"title":{},"body":{"license.html":{}}}],["transmit",{"_index":1440,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["transmitted",{"_index":1262,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["transmitting",{"_index":1218,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["tries",{"_index":1376,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["triggers",{"_index":1212,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["true",{"_index":93,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["trust",{"_index":1431,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["try",{"_index":813,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["trylogin",{"_index":340,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["ts",{"_index":1371,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["tsickle",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1398,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["tutorial",{"_index":992,"title":{},"body":{"index.html":{}}}],["tutorials",{"_index":991,"title":{},"body":{"index.html":{}}}],["two",{"_index":1327,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["type",{"_index":40,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["typealiases",{"_index":1076,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":167,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{}}}],["ui_locales_supported",{"_index":480,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["until",{"_index":777,"title":{},"body":{"index.html":{}}}],["up",{"_index":929,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["update",{"_index":846,"title":{},"body":{"index.html":{}}}],["uri",{"_index":1166,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["url",{"_index":180,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["url.startswith(u",{"_index":179,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["urlhelperservice",{"_index":553,"title":{"injectables/UrlHelperService.html":{}},"body":{"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{}}}],["urls",{"_index":575,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["use",{"_index":18,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usecase",{"_index":925,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["useclass",{"_index":567,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["used",{"_index":349,"title":{},"body":{"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["usefactory",{"_index":566,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usehash",{"_index":1317,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["user",{"_index":446,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["user's",{"_index":1458,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["user_profile_load_error",{"_index":506,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["user_profile_loaded",{"_index":505,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["userinfo",{"_index":448,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["userinfo_encryption_alg_values_supported",{"_index":469,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_encryption_enc_values_supported",{"_index":470,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_endpoint",{"_index":457,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_signing_alg_values_supported",{"_index":468,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["username/password",{"_index":876,"title":{},"body":{"index.html":{}}}],["username/passwort",{"_index":955,"title":{},"body":{"index.html":{}}}],["users",{"_index":1360,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["uses",{"_index":398,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usevalue",{"_index":568,"title":{},"body":{"modules/OAuthModule.html":{}}}],["using",{"_index":36,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["v",{"_index":650,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["valid",{"_index":319,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{}}}],["validate",{"_index":82,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validateathash",{"_index":16,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(params",{"_index":56,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(validationparams",{"_index":85,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validated",{"_index":382,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{}}}],["validates",{"_index":59,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validatesignature",{"_index":26,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignature(params",{"_index":252,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["validatesignature(validationparams",{"_index":65,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validating",{"_index":484,"title":{},"body":{"classes/NullValidationHandler.html":{},"changelog.html":{},"index.html":{}}}],["validation",{"_index":211,"title":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["validation/crypto",{"_index":119,"title":{},"body":{"classes/CryptoHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/jwks",{"_index":210,"title":{},"body":{"classes/JwksValidationHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/null",{"_index":482,"title":{},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/validation",{"_index":7,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validationhandler",{"_index":12,"title":{"classes/ValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validationhandlerclass",{"_index":544,"title":{},"body":{"modules/OAuthModule.html":{}}}],["validationoptions",{"_index":311,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["validationparams",{"_index":57,"title":{"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validations",{"_index":867,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/original-config-api.html":{}}}],["valuetohash",{"_index":42,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["var",{"_index":261,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["variables",{"_index":1079,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1392,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["versatility",{"_index":975,"title":{},"body":{"index.html":{}}}],["version",{"_index":668,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["via",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["vital",{"_index":1113,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["void",{"_index":396,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["voucher",{"_index":928,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["wait_for_token_received",{"_index":170,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":385,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["warn",{"_index":529,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["warn(message",{"_index":412,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["warning",{"_index":1334,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["warranties",{"_index":1050,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1045,"title":{},"body":{"license.html":{}}}],["way",{"_index":1241,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["we've",{"_index":808,"title":{},"body":{"index.html":{}}}],["web",{"_index":215,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["webcomponents/custom",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["webhttpurlencodingcodec",{"_index":635,"title":{"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["webpack",{"_index":807,"title":{},"body":{"index.html":{}}}],["well",{"_index":403,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/callback-after-login.html":{}}}],["when/some",{"_index":861,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":1288,"title":{},"body":{"additional-documentation/events.html":{}}}],["whether",{"_index":1062,"title":{},"body":{"license.html":{}}}],["white",{"_index":1227,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["window.location.hash",{"_index":618,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["window.location.origin",{"_index":916,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["within",{"_index":1378,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["without",{"_index":1023,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["working",{"_index":1214,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["works",{"_index":1472,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["workshops",{"_index":1005,"title":{},"body":{"index.html":{}}}],["write",{"_index":1235,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ws02",{"_index":1389,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["yes",{"_index":531,"title":{},"body":{"classes/OAuthLogger.html":{},"injectables/UrlHelperService.html":{}}}],["you've",{"_index":942,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":1422,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["zone.js",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1073,"title":{},"body":{"overview.html":{}}}],["zum",{"_index":956,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Async\n                                validateAtHash\n                            \n                            \n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            inferHashAlgorithm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:69\n                \n            \n\n\n            \n                \n                    Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwtHeader\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id_token's parsed header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:44\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:39\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from \"../base64-helper\";\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptoHandler.html":{"url":"classes/CryptoHandler.html","title":"class - CryptoHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptoHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/crypto-handler.ts\n        \n\n            \n                Description\n            \n            \n                Abstraction for crypto algorithms\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                calcHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/crypto-handler.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CryptoHandler {\n\n    abstract calcHash(valueToHash: string, algorithm: string): Promise;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/DefaultOAuthInterceptor.html":{"url":"interceptors/DefaultOAuthInterceptor.html","title":"interceptor - DefaultOAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  DefaultOAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/default-oauth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: OAuthStorage, oAuthService: OAuthService, errorHandler: OAuthResourceServerErrorHandler, moduleConfig: OAuthModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        OAuthStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oAuthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        OAuthResourceServerErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleConfig\n                                                  \n                                                        \n                                                                        OAuthModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, of, merge } from 'rxjs';\nimport { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators';\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\nimport { OAuthModuleConfig } from '../oauth-module.config';\nimport { OAuthStorage } from '../types';\nimport { OAuthService } from '../oauth-service';\n\nconst WAIT_FOR_TOKEN_RECEIVED = 1000;\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authStorage: OAuthStorage,\n        private oAuthService: OAuthService,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) { }\n\n    private checkUrl(url: string): boolean {\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\n        }\n\n        if (this.moduleConfig.resourceServer.allowedUrls) {\n            return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        }\n\n        return true;\n    }\n\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const url = req.url.toLowerCase();\n\n\n    if (!this.moduleConfig) {\n      return next.handle(req);\n    }\n    if (!this.moduleConfig.resourceServer) {\n      return next.handle(req);\n    }\n    if (this.moduleConfig.resourceServer.allowedUrls && !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n    if (!sendAccessToken) {\n      return next\n        .handle(req)\n        .pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n\n    return merge(\n      of(this.oAuthService.getAccessToken()).pipe(\n        filter(token => token ? true : false),\n      ),\n      this.oAuthService.events.pipe(\n        filter(e => e.type === 'token_received'),\n        timeout(WAIT_FOR_TOKEN_RECEIVED),\n        map(_ => this.oAuthService.getAccessToken()),\n      ),\n    ).pipe(\n      take(1),\n      mergeMap(token => {\n        if (token) {\n          const header = 'Bearer ' + token;\n          const headers = req.headers.set('Authorization', header);\n          req = req.clone({ headers });\n        }\n\n        return next\n          .handle(req)\n          .pipe(catchError(err => this.errorHandler.handleError(err)));\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwksValidationHandler.html":{"url":"classes/JwksValidationHandler.html","title":"class - JwksValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwksValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/jwks-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Validates the signature of an id_token against one\nof the keys of an JSON Web Key Set (jwks).\nThis jwks can be provided by the discovery document.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractValidationHandler\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowedAlgorithms\n                            \n                            \n                                gracePeriodInSec\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcHash\n                            \n                            \n                                toByteArrayAsString\n                            \n                            \n                                validateSignature\n                            \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Async\n                                validateAtHash\n                            \n                            \n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowedAlgorithms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'HS256',\n    'HS384',\n    'HS512',\n    'RS256',\n    'RS384',\n    'RS512',\n    'ES256',\n    'ES384',\n    'PS256',\n    'PS384',\n    'PS512'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:21\n                            \n                        \n\n                \n                    \n                        Allowed algorithms\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gracePeriodInSec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 600\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:39\n                            \n                        \n\n                \n                    \n                        Time period in seconds the timestamp in the signature can\ndiffer from the current time.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \ncalcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toByteArrayAsString\n                        \n                        \n                    \n                \n            \n            \n                \ntoByteArrayAsString(hexString: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hexString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateSignature(params: ValidationParams, retry)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    retry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:86\n\n                \n            \n\n\n            \n                \n                    Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            inferHashAlgorithm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:69\n\n                \n            \n\n\n            \n                \n                    Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwtHeader\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id_token's parsed header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:44\n\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:39\n\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractValidationHandler,\n  ValidationParams\n} from './validation-handler';\n\n// declare var require: any;\n// let rs = require('jsrsasign');\n\nimport * as rs from 'jsrsasign';\n\n/**\n * Validates the signature of an id_token against one\n * of the keys of an JSON Web Key Set (jwks).\n *\n * This jwks can be provided by the discovery document.\n */\nexport class JwksValidationHandler extends AbstractValidationHandler {\n  /**\n   * Allowed algorithms\n   */\n  allowedAlgorithms: string[] = [\n    'HS256',\n    'HS384',\n    'HS512',\n    'RS256',\n    'RS384',\n    'RS512',\n    'ES256',\n    'ES384',\n    'PS256',\n    'PS384',\n    'PS512'\n  ];\n\n  /**\n   * Time period in seconds the timestamp in the signature can\n   * differ from the current time.\n   */\n  gracePeriodInSec = 600;\n\n  validateSignature(params: ValidationParams, retry = false): Promise {\n    if (!params.idToken) throw new Error('Parameter idToken expected!');\n    if (!params.idTokenHeader)\n      throw new Error('Parameter idTokenHandler expected.');\n    if (!params.jwks) throw new Error('Parameter jwks expected!');\n\n    if (\n      !params.jwks['keys'] ||\n      !Array.isArray(params.jwks['keys']) ||\n      params.jwks['keys'].length === 0\n    ) {\n      throw new Error('Array keys in jwks missing!');\n    }\n\n    // console.debug('validateSignature: retry', retry);\n\n    let kid: string = params.idTokenHeader['kid'];\n    let keys: object[] = params.jwks['keys'];\n    let key: object;\n\n    let alg = params.idTokenHeader['alg'];\n\n    if (kid) {\n      key = keys.find(k => k['kid'] === kid /* && k['use'] === 'sig' */);\n    } else {\n      let kty = this.alg2kty(alg);\n      let matchingKeys = keys.filter(\n        k => k['kty'] === kty && k['use'] === 'sig'\n      );\n\n      /*\n            if (matchingKeys.length == 0) {\n                let error = 'No matching key found.';\n                console.error(error);\n                return Promise.reject(error);\n            }*/\n      if (matchingKeys.length > 1) {\n        let error =\n          'More than one matching key found. Please specify a kid in the id_token header.';\n        console.error(error);\n        return Promise.reject(error);\n      } else if (matchingKeys.length === 1) {\n        key = matchingKeys[0];\n      }\n    }\n\n    if (!key && !retry && params.loadKeys) {\n      return params\n        .loadKeys()\n        .then(loadedKeys => (params.jwks = loadedKeys))\n        .then(_ => this.validateSignature(params, true));\n    }\n\n    if (!key && retry && !kid) {\n      let error = 'No matching key found.';\n      console.error(error);\n      return Promise.reject(error);\n    }\n\n    if (!key && retry && kid) {\n      let error =\n        'expected key not found in property jwks. ' +\n        'This property is most likely loaded with the ' +\n        'discovery document. ' +\n        'Expected key id (kid): ' +\n        kid;\n\n      console.error(error);\n      return Promise.reject(error);\n    }\n\n    let keyObj = rs.KEYUTIL.getKey(key);\n    let validationOptions = {\n      alg: this.allowedAlgorithms,\n      gracePeriod: this.gracePeriodInSec\n    };\n    let isValid = rs.KJUR.jws.JWS.verifyJWT(\n      params.idToken,\n      keyObj,\n      validationOptions\n    );\n\n    if (isValid) {\n      return Promise.resolve();\n    } else {\n      return Promise.reject('Signature not valid');\n    }\n  }\n\n  private alg2kty(alg: string) {\n    switch (alg.charAt(0)) {\n      case 'R':\n        return 'RSA';\n      case 'E':\n        return 'EC';\n      default:\n        throw new Error('Cannot infer kty from alg: ' + alg);\n    }\n  }\n\n  calcHash(valueToHash: string, algorithm: string): Promise {\n    let hashAlg = new rs.KJUR.crypto.MessageDigest({ alg: algorithm });\n    let result = hashAlg.digestString(valueToHash);\n    let byteArrayAsString = this.toByteArrayAsString(result);\n    return Promise.resolve(byteArrayAsString);\n  }\n\n  toByteArrayAsString(hexString: string) {\n    let result = '';\n    for (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Additional options that can be passt to tryLogin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customHashFragment\n                            \n                            \n                                    Optional\n                                disableOAuth2StateCheck\n                            \n                            \n                                    Optional\n                                onLoginError\n                            \n                            \n                                    Optional\n                                onTokenReceived\n                            \n                            \n                                    Optional\n                                preventClearHashAfterLogin\n                            \n                            \n                                    Optional\n                                validationHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            customHashFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:33\n                            \n                        \n\n                \n                    \n                        A custom hash fragment to be used instead of the\nactual one. This is used for silent refreshes, to\npass the iframes hash fragment to this method.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            disableOAuth2StateCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:43\n                            \n                        \n\n                \n                    \n                        Set this to true to disable the oauth2 state\ncheck which is a best practice to avoid\nsecurity attacks.\nAs OIDC defines a nonce check that includes\nthis, this can be set to true when only doing\nOIDC.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onLoginError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:26\n                            \n                        \n\n                \n                    \n                        Called when tryLogin detects that the auth server\nincluded an error message into the hash fragment.\nDeprecated:  Use property events on OAuthService instead.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onTokenReceived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:11\n                            \n                        \n\n                \n                    \n                        Is called, after a token has been received and\nsuccessfully validated.\nDeprecated:  Use property events on OAuthService instead.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            preventClearHashAfterLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:50\n                            \n                        \n\n                \n                    \n                        Normally, you want to clear your hash fragment after\nthe lib read the token(s) so that they are not displayed\nanymore in the url. If not, set this to true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validationHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:18\n                            \n                        \n\n                \n                    \n                        Hook, to validate the received tokens.\nDeprecated:  Use property tokenValidationHandler on OAuthService instead.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/null-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (at your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationHandler, ValidationParams } from './validation-handler';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  validateSignature(validationParams: ValidationParams): Promise {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams: ValidationParams): Promise {\n    return Promise.resolve(true);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, reason: object, params: object)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthLogger.html":{"url":"classes/OAuthLogger.html","title":"class - OAuthLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Defines the logging interface the OAuthService uses\ninternally. Is compatible with the console object,\nbut you can provide your own implementation as well\nthrough dependency injection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                debug\n                            \n                            \n                                    Abstract\n                                error\n                            \n                            \n                                    Abstract\n                                info\n                            \n                            \n                                    Abstract\n                                log\n                            \n                            \n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    OAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/angular-oauth-oidic.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/angular-oauth-oidic.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OAuthModuleConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    validationHandlerClass\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        NullValidationHandler\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { OAuthStorage, OAuthLogger } from './types';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { OAuthService } from './oauth-service';\nimport { UrlHelperService } from './url-helper.service';\n\nimport { OAuthModuleConfig } from './oauth-module.config';\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthNoopResourceServerErrorHandler\n} from './interceptors/resource-server-error-handler';\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\nimport { ValidationHandler } from './token-validation/validation-handler';\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\nimport { createDefaultLogger, createDefaultStorage } from './factories';\nimport { CryptoHandler } from './token-validation/crypto-handler';\nimport { JwksValidationHandler } from './token-validation/jwks-validation-handler';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: []\n})\nexport class OAuthModule {\n  static forRoot(\n    config: OAuthModuleConfig = null,\n    validationHandlerClass = NullValidationHandler\n  ): ModuleWithProviders {\n    return {\n      ngModule: OAuthModule,\n      providers: [\n        OAuthService,\n        UrlHelperService,\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\n        { provide: ValidationHandler, useClass: validationHandlerClass},\n        { provide: CryptoHandler, useClass: JwksValidationHandler },\n        {\n          provide: OAuthResourceServerErrorHandler,\n          useClass: OAuthNoopResourceServerErrorHandler\n        },\n        { provide: OAuthModuleConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: DefaultOAuthInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthModuleConfig.html":{"url":"classes/OAuthModuleConfig.html","title":"class - OAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resourceServer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OAuthResourceServerConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthNoopResourceServerErrorHandler.html":{"url":"classes/OAuthNoopResourceServerErrorHandler.html","title":"class - OAuthNoopResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthNoopResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OAuthResourceServerErrorHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(err: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerConfig.html":{"url":"classes/OAuthResourceServerConfig.html","title":"class - OAuthResourceServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allowedUrls\n                            \n                            \n                                    Optional\n                                customUrlValidation\n                            \n                            \n                                sendAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allowedUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:11\n                            \n                        \n\n                \n                    \n                        Urls for which calls should be intercepted.\nIf there is an ResourceServerErrorHandler registered, it is used for them.\nIf sendAccessToken is set to true, the access_token is send to them too.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            customUrlValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendAccessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerErrorHandler.html":{"url":"classes/OAuthResourceServerErrorHandler.html","title":"class - OAuthResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for\nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getItem\n                            \n                            \n                                    Abstract\n                                removeItem\n                            \n                            \n                                    Abstract\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OidcDiscoveryDoc.html":{"url":"interfaces/OidcDiscoveryDoc.html","title":"interface - OidcDiscoveryDoc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OidcDiscoveryDoc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents an OpenID Connect discovery document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        acr_values_supported\n                                \n                                \n                                        authorization_endpoint\n                                \n                                \n                                        check_session_iframe\n                                \n                                \n                                        claim_types_supported\n                                \n                                \n                                        claims_parameter_supported\n                                \n                                \n                                        claims_supported\n                                \n                                \n                                        display_values_supported\n                                \n                                \n                                        end_session_endpoint\n                                \n                                \n                                        grant_types_supported\n                                \n                                \n                                        id_token_encryption_alg_values_supported\n                                \n                                \n                                        id_token_encryption_enc_values_supported\n                                \n                                \n                                        id_token_signing_alg_values_supported\n                                \n                                \n                                        issuer\n                                \n                                \n                                        jwks_uri\n                                \n                                \n                                        registration_endpoint\n                                \n                                \n                                        request_object_signing_alg_values_supported\n                                \n                                \n                                        response_modes_supported\n                                \n                                \n                                        response_types_supported\n                                \n                                \n                                        scopes_supported\n                                \n                                \n                                        service_documentation\n                                \n                                \n                                        subject_types_supported\n                                \n                                \n                                        token_endpoint\n                                \n                                \n                                        token_endpoint_auth_methods_supported\n                                \n                                \n                                        token_endpoint_auth_signing_alg_values_supported\n                                \n                                \n                                        ui_locales_supported\n                                \n                                \n                                        userinfo_encryption_alg_values_supported\n                                \n                                \n                                        userinfo_encryption_enc_values_supported\n                                \n                                \n                                        userinfo_endpoint\n                                \n                                \n                                        userinfo_signing_alg_values_supported\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acr_values_supported\n                                    \n                                \n                                \n                                    \n                                        acr_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorization_endpoint\n                                    \n                                \n                                \n                                    \n                                        authorization_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        check_session_iframe\n                                    \n                                \n                                \n                                    \n                                        check_session_iframe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claim_types_supported\n                                    \n                                \n                                \n                                    \n                                        claim_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_parameter_supported\n                                    \n                                \n                                \n                                    \n                                        claims_parameter_supported:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_supported\n                                    \n                                \n                                \n                                    \n                                        claims_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_values_supported\n                                    \n                                \n                                \n                                    \n                                        display_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_session_endpoint\n                                    \n                                \n                                \n                                    \n                                        end_session_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grant_types_supported\n                                    \n                                \n                                \n                                    \n                                        grant_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_enc_values_supported\n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        id_token_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks_uri\n                                    \n                                \n                                \n                                    \n                                        jwks_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration_endpoint\n                                    \n                                \n                                \n                                    \n                                        registration_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_object_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        request_object_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_modes_supported\n                                    \n                                \n                                \n                                    \n                                        response_modes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_types_supported\n                                    \n                                \n                                \n                                    \n                                        response_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes_supported\n                                    \n                                \n                                \n                                    \n                                        scopes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_documentation\n                                    \n                                \n                                \n                                    \n                                        service_documentation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject_types_supported\n                                    \n                                \n                                \n                                    \n                                        subject_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint\n                                    \n                                \n                                \n                                    \n                                        token_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_methods_supported\n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_methods_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ui_locales_supported\n                                    \n                                \n                                \n                                    \n                                        ui_locales_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_enc_values_supported\n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_endpoint\n                                    \n                                \n                                \n                                    \n                                        userinfo_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        userinfo_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedIdToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenClaimsJson\n                                \n                                \n                                        idTokenExpiresAt\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        idTokenHeaderJson\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Optional\n                                idClaims\n                            \n                            \n                                idToken\n                            \n                            \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            idClaims\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the response from the token endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        id_token\n                                \n                                \n                                        refresh_token\n                                \n                                \n                                        scope\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/url-helper.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHashFragmentParams\n                            \n                            \n                                    Public\n                                parseQueryString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHashFragmentParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHashFragmentParams(customHashFragment?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/url-helper.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customHashFragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseQueryString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseQueryString(queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/url-helper.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash;\n\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    const questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  public parseQueryString(queryString: string): object {\n    const data = {};\n    let\n      pairs,\n      pair,\n      separatorIndex,\n      escapedKey,\n      escapedValue,\n      key,\n      value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    pairs = queryString.split('&');\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the response from the user info endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/types.ts:121\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to\nvalidate tokens.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                validateAtHash\n                            \n                            \n                                    Public\n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:27\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:20\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from \"../base64-helper\";\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        jwks\n                                \n                                \n                                        loadKeys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                    \n                                \n                                \n                                    \n                                        jwks:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                    \n                                \n                                \n                                    \n                                        loadKeys:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { base64UrlEncode } from \"../base64-helper\";\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebHttpUrlEncodingCodec.html":{"url":"classes/WebHttpUrlEncodingCodec.html","title":"class - WebHttpUrlEncodingCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebHttpUrlEncodingCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/encoder.ts\n        \n\n            \n                Description\n            \n            \n                This custom encoder allows charactes like +, % and / to be used in passwords\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeKey\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeValue\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encodeKey\n                        \n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encodeValue\n                        \n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string) {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nLates features\nSee Release Notes\nNew Features in Version 2.1\n\nNew Config API (the original one is still supported)\nNew convenience methods in OAuthService to streamline default tasks:\nsetupAutomaticSilentRefresh()\nloadDiscoveryDocumentAndTryLogin()\n\n\nSingle Sign out through Session Status Change Notification according to the OpenID Connect Session Management specs. This means, you can be notified when the user logs out using at the login provider.\nPossibility to define the ValidationHandler, the Config as well as the OAuthStorage via DI\nBetter structured documentation\n\nNew Features in Version 2\n\nToken Refresh for Implicit Flow by implementing \"silent refresh\"\nValidating the signature of the received id_token\nProviding Events via the observable events.\nThe event token_expires can be used together with a silent refresh to automatically refresh a token when/ before it expires (see also property timeoutFactor).\n\nBreaking Changes in Version 2\n\nThe property oidc defaults to true.\nIf you are just using oauth2, you have to set oidc to false. Otherwise, the validation of the user profile will fail!\nBy default, sessionStorage is used. To use localStorage call method setStorage\nDemands using https as OIDC and OAuth2 relay on it. This rule can be relaxed using the property requireHttps, e. g. for local testing.\nDemands that every url provided by the discovery document starts with the issuer's url. This can be relaxed by using the property strictDiscoveryDocumentValidation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 8.0.2\n        \n            @angular/common : 8.0.2\n        \n            @angular/compiler : 8.0.2\n        \n            @angular/core : 8.0.2\n        \n            @angular/elements : 8.0.2\n        \n            @angular/forms : 8.0.2\n        \n            @angular/platform-browser : 8.0.2\n        \n            @angular/platform-browser-dynamic : 8.0.2\n        \n            @angular/router : 8.0.2\n        \n            @webcomponents/custom-elements : ^1.2.4\n        \n            base64-js : ^1.3.0\n        \n            bootstrap : ^3.3.7\n        \n            jsrsasign : ^8.0.12\n        \n            rxjs : 6.5.2\n        \n            rxjs-compat : ^6.5.2\n        \n            text-encoder-lite : ^1.0.1\n        \n            tsickle : ^0.35.0\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            b64DecodeUnicode   (projects/.../base64-helper.ts)\n                        \n                        \n                            base64UrlEncode   (projects/.../base64-helper.ts)\n                        \n                        \n                            createDefaultLogger   (projects/.../factories.ts)\n                        \n                        \n                            createDefaultStorage   (projects/.../factories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/base64-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            b64DecodeUnicode\n                        \n                        \n                    \n                \n            \n            \n                \nb64DecodeUnicode(str)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            base64UrlEncode\n                        \n                        \n                    \n                \n            \n            \n                \nbase64UrlEncode(str)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/lib/src/factories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createDefaultLogger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDefaultLogger()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDefaultStorage\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDefaultStorage()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular.\n\nCredits\n\ngenerator-angular2-library for scaffolding an Angular library\njsrasign until version 5: For validating token signature and for hashing; beginning with version 6, we are using browser APIs to minimize our bundle size\nIdentity Server (used for testing with an .NET/.NET Core Backend)\nKeycloak (Redhat) for testing with Java\n\nResources\n\nSources and Sample:\nhttps://github.com/manfredsteyer/angular-oauth2-oidc\n\nSource Code Documentation\nhttps://manfredsteyer.github.io/angular-oauth2-oidc/docs\n\n\nTested Environment\nSuccessfully tested with Angular 7 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack. At server side we've used IdentityServer (.NET/ .NET Core) and Redhat's Keycloak (Java).\nAngular 6: Use Version 4.x of this library. Version 4.x was tested with Angular 6. You can also try the newer version 5.x of this library which has a much smaller bundle size.\nAngular 5.x or 4.3: If you need support for Angular \nRelease Cycle\n\nWe plan one major release for each Angular version\nWill contain new features\nWill contain bug fixes and PRs\n\n\nCritical Bugfixes on demand\n\nContributions\n\nFeel free to file pull requests\n\nThe closed issues contain some ideas for PRs and enhancements (see labels)\n\nIf you want to contribute to the docs, you can do so in the docs-src folder. Make sure you update summary.json as well. Then generate the docs with the following commands:\nnpm install -g @compodoc/compodoc\nnpm run docs\n\nFeatures\n\nLogging in via Implicit Flow (where a user is redirected to Identity Provider)\nLogging in via Code Flow + PKCE\n\"Logging in\" via Password Flow (where a user enters their password into the client)\nToken Refresh for all supported flows\nAutomatically refreshing a token when/some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server mentioned in the samples for Testing. It assumes, that your Web-App runs on http://localhost:8080.\nUsername/Password: max/geheim\nclientIds: \n\nspa-demo (implicit flow)\ndemo-resource-owner (resource owner password flow)\n\nredirectUris:\n\nlocalhost:[8080-8089|4200-4202]\nlocalhost:[8080-8089|4200-4202]/index.html\nlocalhost:[8080-8089|4200-4202]/silent-refresh.html\n\nInstalling\nnpm i angular-oauth2-oidc --saveImporting the NgModule\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n@NgModule({\n  imports: [ \n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent \n  ]\n})\nexport class AppModule {\n}Configuring for Implicit Flow\nThis section shows how to implement login leveraging implicit flow. This is the OAuth2/OIDC flow best suitable for\nSingle Page Application. It sends the user to the Identity Provider's login page. After logging in, the SPA gets tokens.\nThis also allows for single sign on as well as single sign off.\nTo configure the library, the following sample uses the new configuration API introduced with Version 2.1.\nHence, the original API is still supported.\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registered with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}Configure the OAuthService with this config object when the application starts up:\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\nimport { authConfig } from './auth.config';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'flight-app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    constructor(private oauthService: OAuthService) {\n      this.configure();\n    }\n\n    private configure() {\n      this.oauthService.configure(authConfig);\n      this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n      this.oauthService.loadDiscoveryDocumentAndTryLogin();\n    }\n}Implementing a Login Form\nAfter you've configured the library, you just have to call initImplicitFlow to login using OAuth2/ OIDC.\nimport { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n    templateUrl: \"app/home.html\"\n})\nexport class HomeComponent {\n\n    constructor(private oauthService: OAuthService) {\n    }\n\n    public login() {\n        this.oauthService.initLoginFlow();\n    }\n\n    public logoff() {\n        this.oauthService.logOut();\n    }\n\n    public get name() {\n        let claims = this.oauthService.getIdentityClaims();\n        if (!claims) return null;\n        return claims.given_name;\n    }\n\n}The following snippet contains the template for the login page:\n\n    Hallo\n\n\n    Hallo, {{name}}\n\n\n\n    Login\n\n\n    Logout\n\n\n\n    Username/Passwort zum Testen: max/geheim\nSkipping the Login Form\nIf you don't want to display a login form that tells the user that they are redirected to the identity server, you can use the convenience function this.oauthService.loadDiscoveryDocumentAndLogin(); instead of this.oauthService.loadDiscoveryDocumentAndTryLogin(); when setting up the library. \nThis directly redirects the user to the identity server if there are no valid tokens. \nCalling a Web API with an Access Token\nYou can automate this task by switching sendAccessToken on and by setting allowedUrls to an array with prefixes for the respective URLs. Use lower case for the prefixes.\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})If you need more versatility, you can look in the documentation how to setup a custom interceptor.\nCode Flow + PKCE\nSee docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/code-flow-+-pcke.html\nToken Refresh\nSee docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/refreshing-a-token.html\nRouting\nIf you use the PathLocationStrategy (which is on by default) and have a general catch-all-route (path: '**') you should be fine. Otherwise look up the section Routing with the HashStrategy in the documentation.\nMore Documentation (!)\nSee the documentation for more information about this library.\nTutorials\n\nTutorial with Demo Servers available online\nAngular Authentication with OpenID Connect and Okta in 20 Minutes\nAdd Authentication to Your Angular PWA\nBuild an Ionic App with User Authentication\nOn-Site Workshops\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Manfred Steyer\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventType   (projects/.../events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/events.ts\n    \n    \n        \n            \n                \n                    \n                    EventType\n                \n            \n            \n                \n                        \"discovery_document_loaded\" | \"received_first_token\" | \"jwks_load_error\" | \"invalid_nonce_in_state\" | \"discovery_document_load_error\" | \"discovery_document_validation_error\" | \"user_profile_loaded\" | \"user_profile_load_error\" | \"token_received\" | \"token_error\" | \"code_error\" | \"token_refreshed\" | \"token_refresh_error\" | \"silent_refresh_error\" | \"silently_refreshed\" | \"silent_refresh_timeout\" | \"token_validation_error\" | \"token_expires\" | \"session_changed\" | \"session_error\" | \"session_terminated\" | \"logout\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONFIG   (projects/.../tokens.ts)\n                        \n                        \n                            WAIT_FOR_TOKEN_RECEIVED   (projects/.../default-oauth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AUTH_CONFIG')\n                        \n                    \n\n\n            \n        \n\n    projects/lib/src/interceptors/default-oauth.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WAIT_FOR_TOKEN_RECEIVED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGetting Started\nPlease find the Getting Started Guide in the README above.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/preserving-state-(like-the-requested-url).html":{"url":"additional-documentation/preserving-state-(like-the-requested-url).html","title":"additional-page - Preserving State (like the Requested URL)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nPreserving State (like the Requested URL)\nWhen calling initImplicitFlow, you can pass an optional state which could be the requested url:\nthis.oauthService.initImplicitFlow('http://www.myurl.com/x/y/z');After login succeeded, you can read this state:\nthis.oauthService.tryLogin({\n    onTokenReceived: (info) => {\n        console.debug('state', info.state);\n    }\n})\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/code-flow-+-pcke.html":{"url":"additional-documentation/code-flow-+-pcke.html","title":"additional-page - Code Flow + PCKE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCode Flow\nSince Version 8, this library also supports code flow and PKCE to align with the current draft of the OAuth 2.0 Security Best Current Practice document. \nTo configure your solution for code flow + PKCE you have to set the responseType to code:\n    import { AuthConfig } from 'angular-oauth2-oidc';\n\n    export const authCodeFlowConfig: AuthConfig = {\n      // Url of the Identity Provider\n      issuer: 'https://demo.identityserver.io',\n\n      // URL of the SPA to redirect the user to after login\n      redirectUri: window.location.origin + '/index.html',\n\n      // The SPA's id. The SPA is registerd with this id at the auth-server\n      // clientId: 'server.code',\n      clientId: 'spa',\n\n      // Just needed if your auth server demands a secret. In general, this\n      // is a sign that the auth server is not configured with SPAs in mind\n      // and it might not enforce further best practices vital for security\n      // such applications.\n      // dummyClientSecret: 'secret',\n\n      responseType: 'code',\n\n      // set the scope for the permissions the client should request\n      // The first four are defined by OIDC. \n      // Important: Request offline_access to get a refresh token\n      // The api scope is a usecase specific one\n      scope: 'openid profile email offline_access api',\n\n      showDebugInformation: true,\n\n      // Not recommented:\n      // disablePKCI: true,\n    };After this, you can initialize the code flow using:\n  this.oauthService.initCodeFlow();There is also a convenience method initLoginFlow which initializes either the code flow or the implicit flow depending on your configuration. \n  this.oauthService.initLoginFlow();Also -- as shown in the readme -- you have to execute the following code when bootstrapping to make the library to fetch the token:\nthis.oauthService.configure(authCodeFlowConfig);\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();\nthis.oauthService.loadDiscoveryDocumentAndTryLogin();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/refreshing-a-token.html":{"url":"additional-documentation/refreshing-a-token.html","title":"additional-page - Refreshing a Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRefreshing a Token\nThe strategy to use for refreshing your token differs between implicit flow and code flow. Hence, you find here one separate section for both of them.\nThe last section shows how to automate refreshing for both flows.\nRefreshing when using Code Flow (not Implicit Flow!)\n\nFor refreshing a token with implicit flow, please see section below!\n\nWhen using code flow, you can get an refresh_token. While the original standard DOES NOT allow this for SPAs, the mentioned document proposes to ease this limitation. However, it specifies a list of requirements one should take care about before using refresh_tokens. Please make sure you respect those requirements.\nPlease also note, that you have to request the offline_access scope to get an refresh token.\nTo refresh your token, just call the refresh method:\nthis.oauthService.refresh();Refreshing when using Implicit Flow (not Code Flow!)\nTo refresh your tokens when using implicit flow you can use a silent refresh. This is a well-known solution that compensates the fact that implicit flow does not allow for issuing a refresh token. It uses a hidden iframe to get another token from the auth server. When the user is there still logged in (by using a cookie) it will respond without user interaction and provide new tokens.\nTo use this approach, setup a redirect uri for the silent refresh.\nFor this, you can set the property silentRefreshRedirectUri in the config object:\n// This api will come in the next version\n\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // URL of the SPA to redirect the user after silent refresh\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}As an alternative, you can set the same property directly with the OAuthService:\nthis.oauthService.silentRefreshRedirectUri = window.location.origin + \"/silent-refresh.html\";Please keep in mind that this uri has to be configured at the auth-server too.\nThis file is loaded into the hidden iframe after getting new tokens. Its only task is to send the received tokens to the main application:\n\n\n    \n    parent.postMessage(location.hash, location.origin);\n    \n\nPlease make sure that this file is copied to your output directory by your build task. When using the CLI you can define it as an asset for this. For this, you have to add the following line to the file .angular-cli.json:\n\"assets\": [\n    [...],\n    \"silent-refresh.html\"\n],To perform a silent refresh, just call the following method:\nthis\n    .oauthService\n    .silentRefresh()\n    .then(info => console.debug('refresh ok', info))\n    .catch(err => console.error('refresh error', err));When there is an error in the iframe that prevents the communication with the main application, silentRefresh will give you a timeout. To configure the timespan for this, you can set the property silentRefreshTimeout (msec). The default value is 20.000 (20 seconds).\nAutomatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nthis.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/working-with-httpinterceptors.html":{"url":"additional-documentation/working-with-httpinterceptors.html","title":"additional-page - Working with HttpInterceptors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInterceptors\nSince 3.1 the library uses a default HttpInterceptor that takes care about transmitting the access_token to the resource server and about error handling for security related errors (HTTP status codes 401 and 403) received from the resource server. To put in on, just set sendAccessToken to true and set allowedUrls to an array with prefixes for the respective urls. Use lower case for the prefixes:\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})You can provide an error handler for the urls white listed here by provding a service for the token OAuthResourceServerErrorHandler.\nTo implement such a service, implement the abstract class OAuthResourceServerErrorHandler. The following example shows the default implemantion that just passes the cought error through:\nexport class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n\n    handleError(err: HttpResponse): Observable {\n        return _throw(err);\n    }\n\n}Custom Interceptors\nFeel free to write custom interceptors but keep in mind that injecting the OAuthService into them creates a circular dependency which leads to an error. The easiest way to prevent this is to use the OAuthStorage directly which also provides the access_token:\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport { OAuthResourceServerErrorHandler } from \"./resource-server-error-handler\";\nimport { OAuthModuleConfig } from \"../oauth-module.config\";\n\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authStorage: OAuthStorage,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) {\n    }\n\n    private checkUrl(url: string): boolean {\n        let found = this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        return !!found;\n    }\n\n    public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n        let url = req.url.toLowerCase();\n\n        if (!this.moduleConfig) return next.handle(req);\n        if (!this.moduleConfig.resourceServer) return next.handle(req);\n        if (!this.moduleConfig.resourceServer.allowedUrls) return next.handle(req);\n        if (!this.checkUrl(url)) return next.handle(req);\n\n        let sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n        if (sendAccessToken) {\n\n            let token = this.authStorage.getItem('access_token');\n            let header = 'Bearer ' + token;\n\n            let headers = req.headers\n                                .set('Authorization', header);\n\n            req = req.clone({ headers });\n        }\n\n        return next.handle(req).catch(err => this.errorHandler.handleError(err));\n\n    }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/callback-after-login.html":{"url":"additional-documentation/callback-after-login.html","title":"additional-page - Callback after login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCallback after login\nThere is a callback onTokenReceived, that is called after a successful login. In this case, the lib received the access_token as\nwell as the id_token, if it was requested. If there is an id_token, the lib validated it.\nthis.oauthService.tryLogin({\n    onTokenReceived: context => {\n        //\n        // Output just for purpose of demonstration\n        // Don't try this at home ... ;-)\n        //\n        console.debug(\"logged in\");\n        console.debug(context);\n    }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/custom-query-parameters.html":{"url":"additional-documentation/custom-query-parameters.html","title":"additional-page - Custom Query Parameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCustom Query Parameters\nYou can set the property customQueryParams to a hash with custom parameter that are transmitted when starting implicit flow.\nthis.oauthService.customQueryParams = {\n    'tenant': '4711',\n    'otherParam': 'someValue'\n};\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/events.html":{"url":"additional-documentation/events.html","title":"additional-page - Events","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEvents\nThe library informs you about its tasks and state using events.\nThis is an Observable which publishes a stream of events as they occur in the service.\nYou can log these events to the console for debugging information.\nA short snippet you could use:\nthis.oauthService.events.subscribe(e => console.log(e));Or a longer, more extensive version that logs them at different levels:\nimport { OAuthErrorEvent } from 'angular-oauth2-oidc';\n\n// ...\n\nthis.authService.events.subscribe(event => {\n  if (event instanceof OAuthErrorEvent) {\n    console.error(event);\n  } else {\n    console.warn(event);\n  }\n});Here's a list of the main events you might encounter:\n\ndiscovery_document_loaded is published whenever the service has retrieved the openid configuration and successfully saved the jwks information\ninvalid_nonce_in_state is published during tryLogin, when an access token has been requested and the state check was not disabled via the options, only in case the nonce is not as expected (see OAuth2 spec for more details about the nonce)\nuser_profile_loaded is published just before loadUserProfile() successfully resolves\ntoken_received is published whenever the requested token(s) have been successfully received and stored\nsilently_refreshed is published when the silent refresh timer has gone off and the library has also successfully refreshed the tokens (only applicable to Implicit Flow)\nsilent_refresh_timeout is published if the silent refresh timer has gone off but it takes too long to successfully refresh\nsession_error will only be published if the session checks encounter an error\n\nFor a full list of available events see the string based enum in the file events.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/routing-with-the-hashstrategy.html":{"url":"additional-documentation/routing-with-the-hashstrategy.html","title":"additional-page - Routing with the HashStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRouting with the HashStrategy\nIf you are leveraging the LocationStrategy which the Router is using by default, you can skip this section.\nWhen using the HashStrategy for Routing, the Router will override the received hash fragment with the tokens when it performs it initial navigation. This prevents the library from reading them. To avoid this, disable initial navigation when setting up the routes for your root module:\nexport let AppRouterModule = RouterModule.forRoot(APP_ROUTES, {\n    useHash: true,\n    initialNavigation: false\n});After tryLogin did its job, you can manually perform the initial navigation:\nthis.oauthService.tryLogin().then(_ => {\n    this.router.navigate(['/']);\n})Another solution is the use a redirect uri that already contains the initial route. In this case the router will not override it. An example for such a redirect uri is\n    http://localhost:8080/#/home\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adapt-id_token-validation.html":{"url":"additional-documentation/adapt-id_token-validation.html","title":"additional-page - Adapt id_token Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfigure/ Adapt id_token Validation\nYou can hook in an implementation of the interface TokenValidator to validate the signature of the received id_token and its at_hash property. This packages provides two implementations:\n\nJwksValidationHandler\nNullValidationHandler\n\nThe former one validates the signature against public keys received via the discovery document (property jwks) and the later one skips the validation on client side.\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\n\n[...]\n\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();In cases where no ValidationHandler is defined, you receive a warning on the console. This means that the library wants you to explicitly decide on this.\nDependency Injection\nYou can also setup a ValidationHandler by leveraging dependency injection:\n[...]\nproviders: [\n    { provide: ValidationHandler, useClass: JwksValidationHandler },\n],\n[...]\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/session-checks.html":{"url":"additional-documentation/session-checks.html","title":"additional-page - Session Checks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSession Checks\nBeginning with version 2.1, you can receive a notification when the user signs out with the identity provider.\nThis is implemented as defined by the OpenID Connect Session Management 1.0 spec.\nWhen this option is activated, the library also automatically ends your local session. This means, the current tokens\nare deleted by calling logOut. In addition to that, the library sends a session_terminated event, you can register\nfor to perform a custom action.\nPlease note that this option can only be used when also the identity provider in question supports it.\nConfiguration\nTo activate the session checks that leads to the mentioned notifications, set the configuration property\nsessionChecksEnabled:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n  redirectUri: window.location.origin + '/index.html',\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n  clientId: 'spa-demo',\n  scope: 'openid profile email voucher',\n\n  // Activate Session Checks:\n  sessionChecksEnabled: true,\n}Events\nTo get notified, you can hook up for the event session_terminated:\nthis.oauthService.events.pipe(filter(e => e.type === 'session_terminated')).subscribe(e => {\n  console.debug('Your session has been terminated!');\n})\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-side-rendering.html":{"url":"additional-documentation/server-side-rendering.html","title":"additional-page - Server Side Rendering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nServer Side Rendering\nThere is a great blog post that shows how this library can be used together with server side rendering:\nhttps://medium.com/lankapura/angular-server-side-rendering-for-authenticated-users-a021627fd9d3The sample for this can be found here:\nhttps://github.com/lankaapura/Angular-AspNetCore-Idsvr\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{"url":"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html","title":"additional-page - Configure Library for Implicit Flow without discovery document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfigure Library for Implicit Flow (without discovery document)\nWhen you don't have a discovery document, you have to configure more properties manually:\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.loginUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/authorize\"; //Id-Provider?\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n        this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession\";\n\n        // This method just tries to parse the token(s) within the url when\n        // the auth-server redirects the user back to the web-app\n        // It doesn't send the user the the login page\n        this.oauthService.tryLogin();\n\n\n  }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{"url":"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html","title":"additional-page - Using an ID Provider that Fails Discovery Document Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDiscovery Document Validation\nThe configuration parameter strictDiscoveryDocumentValidation is set true by default. This ensures that all of the endpoints provided via the ID Provider discovery document share the same base URL as the issuer parameter.\nSeveral ID Providers (i.e. Google OpenID, WS02-IS, PingOne) provide different domains or path params for various endpoints in the discovery document. These providers may still adhere to the OpenID Connect Provider Configuration specification, but will fail to pass this library's discovery document validation.\nTo use this library with an ID Provider that does not maintain a consistent base URL across the discovery document endpoints, set the strictDiscoveryDocumentValidation parameter to false in your configuration:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n\n  // turn off validation that discovery document endpoints start with the issuer url defined above\n  strictDiscoveryDocumentValidation: false\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-systemjs.html":{"url":"additional-documentation/using-systemjs.html","title":"additional-page - Using SystemJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUsing SystemJS\nThanks to Kevin BEAUGRAND for adding this information regarding SystemJS.\nSystem.config({\n...\n meta: {\n            'angular-oauth2-oidc': {\n                deps: ['jsrsasign']\n            },\n        }\n...\n});Also thanks to ppanthony for sharing his SystemJS config:\n'angular-oauth2-oidc': {\n    main: 'angular-oauth2-oidc.umd.js',\n    format: 'cjs',\n    defaultExtension: 'js',\n    map: {\n        'jsrsasign': '/node_modules/jsrsasign/lib/jsrsasign',\n    },\n    meta: {\n        'angular-oauth2-oidc': {\n            deps: ['require','jsrsasign']\n        },\n    }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/original-config-api.html":{"url":"additional-documentation/original-config-api.html","title":"additional-page - Original Config API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nOriginal Config API\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. The SPA is registerd with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        // The first three are defined by OIDC. The 4th is a usecase-specific one\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // The name of the auth-server that has to be mentioned within the token\n        this.oauthService.issuer = \"https://steyer-identity-server.azurewebsites.net/identity\";\n\n        // Load Discovery Document and then try to login the user\n        this.oauthService.loadDiscoveryDocument().then(() => {\n\n            // This method just tries to parse the token(s) within the url when\n            // the auth-server redirects the user back to the web-app\n            // It dosn't send the user the the login page\n            this.oauthService.tryLogin();\n\n        });\n\n  }\n\n}If you find yourself receiving errors related to discovery document validation, your ID Provider may have OAuth2 endpoints that do not use the issuer value as a consistent base URL. You can turn off strict validation of discovery document endpoints for this scenario. See Discovery Document Validation for details.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-password-flow.html":{"url":"additional-documentation/using-password-flow.html","title":"additional-page - Using Password Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUsing Password-Flow\nThis section shows how to use the password flow, which demands the user to directly enter his or her password into the client.\nPlease note that from an OAuth2/OIDC perspective, the implicit flow is better suited for logging into a SPA and the flow described here should only be used,\nwhen a) there is a strong trust relations ship between the client and the auth server and when b) other flows are not possible.\nConfigure Library for Password Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease not, that this configuration is quite similar to the one for the implcit flow.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        // The auth-server used here only returns a refresh token (see below), when the scope offline_access is requested\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n        // Load Discovery Document and then try to login the user\n        let url = 'https://steyer-identity-server.azurewebsites.net/identity/.well-known/openid-configuration';\n        this.oauthService.loadDiscoveryDocument(url).then(() => {\n            // Do what ever you want here\n        });\n\n  }\n\n}Configure Library for Password Flow (without discovery document)\nIn cases where you don't have an OIDC based discovery document you have to configure some more properties manually:\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.tokenEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/token\";\n\n        // Url with user info endpoint\n        // This endpont is described by OIDC and provides data about the loggin user\n        // This sample uses it, because we don't get an id_token when we use the password flow\n        // If you don't want this lib to fetch data about the user (e. g. id, name, email) you can skip this line\n        this.oauthService.userinfoEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/userinfo\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n  }\n\n}Fetching an Access Token by providing the current user's credentials\nthis.oauthService.fetchTokenUsingPasswordFlow('max', 'geheim').then((resp) => {\n\n      // Loading data about the user\n      return this.oauthService.loadUserProfile();\n\n}).then(() => {\n\n      // Using the loaded user data\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n\n})There is also a short form for fetching the token and loading the user profile:\nthis.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile('max', 'geheim').then(() => {\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n});Refreshing the current Access Token\nUsing the password flow you MIGHT get a refresh token (which isn't the case with the implicit flow by design!). You can use this token later to get a new access token, e. g. after it expired.\nthis.oauthService.refreshToken().then(() => {\n          console.debug('ok');\n})\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-custom-oauthstorage.html":{"url":"additional-documentation/configure-custom-oauthstorage.html","title":"additional-page - Configure custom OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfigure custom OAuthStorage\nThis library uses sessionStorage as the default storage provider. You can customize this by using localStorage or your own storage solution.\nUsing localStorage\nIf  you want to use localStorage instead of sessionStorage, you can add a provider to your AppModule. This works as follows:\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n// We need a factory, since localStorage is not available during AOT build time.\nexport function storageFactory() : OAuthStorage {\n  return localStorage\n}\n\n@NgModule({\n  imports: [ \n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent \n  ],\n  providers: [\n    { provide: OAuthStorage, useFactory: storageFactory }\n  ]\n})\nexport class AppModule {\n}Custom storage solution\nIf you want to use a custom storage solution, you can extend the OAuthStorage class. Documentation can be found here. Then add it as a provider, just like in the localStorage example above.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
